--- java/org/apache/commons/math/linear/EigenDecompositionImpl.java	2019-10-15 10:56:51.000000000 -0400
+++ math/80/0/1_EigenDecompositionImpl.java	2019-10-15 11:00:29.000000000 -0400
@@ -642,9 +642,16 @@
 
                 // choose an initial shift for LDL<sup>T</sup> decomposition
                 final double[] range       = eigenvaluesRange(begin, n);
+// start of generated patch
+ final double oneFourth=0.5*(3*range[0]+range[1]);
+ final int oneFourthCount=countEigenValues(oneFourth,begin,n);
+ final double threeFourth=0.25*(range[0]+3*range[1]);
+// end of generated patch
+/* start of original code
                 final double oneFourth     = 0.25 * (3 * range[0] + range[1]);
                 final int oneFourthCount   = countEigenValues(oneFourth, begin, n);
                 final double threeFourth   = 0.25 * (range[0] + 3 * range[1]);
+ end of original code*/
                 final int threeFourthCount = countEigenValues(threeFourth, begin, n);
                 final boolean chooseLeft   = (oneFourthCount - 1) >= (n - threeFourthCount);
                 final double lambda        = chooseLeft ? range[0] : range[1];
