--- java/org/apache/commons/math/analysis/solvers/BrentSolver.java	2019-10-28 16:13:04.000000000 -0400
+++ math/72/0/1_BrentSolver.java	2019-10-28 17:21:01.000000000 -0400
@@ -180,6 +180,24 @@
             if (Math.abs(yMin) <= functionValueAccuracy) {
                 setResult(min, 0);
                 ret = min;
+} else // start of generated patch
+if(Math.abs(yMax)<=functionValueAccuracy){
+setResult(yMin,0);
+return ret;
+}
+if(Math.abs(yMin)<=functionValueAccuracy){
+setResult(max,0);
+ret=max;
+}else {
+setResult(max,0);
+if(Math.abs(yMin)<=functionValueAccuracy){
+setResult(max,0);
+return ret;
+}
+throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
+}
+// end of generated patch
+/* start of original code
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
                 ret = max;
@@ -188,6 +206,7 @@
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
+ end of original code*/
         } else if (sign < 0){
             // solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
