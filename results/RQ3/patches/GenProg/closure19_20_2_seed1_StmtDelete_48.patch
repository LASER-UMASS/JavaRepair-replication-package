--- ./original/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	2018-05-09 18:29:14.000000000 -0400
+++ ./variant5/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	2018-05-09 18:30:51.000000000 -0400
@@ -155,26 +155,8 @@
    * the given scope, as determined by {@link #getTypeIfRefinable}.
    */
   protected void declareNameInScope(FlowScope scope, Node node, JSType type) {
-    switch (node.getType()) {
-      case Token.NAME:
-        scope.inferSlotType(node.getString(), type);
-        break;
-
-      case Token.GETPROP:
-        String qualifiedName = node.getQualifiedName();
-        Preconditions.checkNotNull(qualifiedName);
-
-        JSType origType = node.getJSType();
-        origType = origType == null ? getNativeType(UNKNOWN_TYPE) : origType;
-        scope.inferQualifiedSlot(node, qualifiedName, origType, type);
-        break;
-
-        // "this" references aren't currently modeled in the CFG.
-
-      default:
-        throw new IllegalArgumentException("Node cannot be refined. \n" +
-            node.toStringTree());
-    }
+    {
+	}
   }
 
   /**
