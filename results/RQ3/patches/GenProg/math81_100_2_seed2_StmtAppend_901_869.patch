--- ./original/org/apache/commons/math/linear/EigenDecompositionImpl.java	2018-05-10 02:44:58.000000000 -0400
+++ ./variant227/org/apache/commons/math/linear/EigenDecompositionImpl.java	2018-05-10 03:27:53.000000000 -0400
@@ -1619,9 +1619,42 @@
 
                 // case 9.
                 tau = 0.25 * dMin1;
-                if (dMin1 == dN1) {
-                    tau = 0.5 * dMin1;
-                }
+                {
+					if (dMin1 == dN1) {
+						tau = 0.5 * dMin1;
+					}
+					{
+						tType = -7;
+						double s = 0.333 * dMin1;
+						if (work[nn - 5] > work[nn - 7]) {
+							return;
+						}
+						double b1 = work[nn - 5] / work[nn - 7];
+						double b2 = b1;
+						if (b2 != 0.0) {
+							for (int i4 = 4 * end - 10 + pingPong; i4 >= 4 * start + 2 + pingPong; i4 -= 4) {
+								final double oldB1 = b1;
+								if (work[i4] > work[i4 - 2]) {
+									return;
+								}
+								b1 = b1 * (work[i4] / work[i4 - 2]);
+								b2 = b2 + b1;
+								if (100 * Math.max(b1, oldB1) < b2) {
+									break;
+								}
+							}
+						}
+						b2 = Math.sqrt(cnst3 * b2);
+						final double a2 = dMin1 / (1 + b2 * b2);
+						final double gap2 = 0.5 * dMin2 - a2;
+						if (gap2 > 0.0 && gap2 > b2 * a2) {
+							tau = Math.max(s, a2 * (1 - cnst2 * a2 * (b2 / gap2) * b2));
+						} else {
+							tau = Math.max(s, a2 * (1 - cnst2 * b2));
+							tType = -8;
+						}
+					}
+				}
                 tType = -9;
             }
             break;
