--- ./original/org/apache/commons/math/linear/EigenDecompositionImpl.java	2018-05-10 02:41:08.000000000 -0400
+++ ./variant87/org/apache/commons/math/linear/EigenDecompositionImpl.java	2018-05-10 04:21:06.000000000 -0400
@@ -1067,8 +1067,34 @@
             (MathUtils.SAFE_MIN * qMax < Math.min(work[l - 1],
                                                   Math.min(work[l - 9],
                                                            dMin2 + work[l - 2 * pingPong])))) {
-            // step 3: choose a shift
-            computeShiftIncrement(start, deflatedEnd, end - deflatedEnd);
+            for (boolean loop = true; loop;) {
+				dqds(start, deflatedEnd);
+				if ((dMin >= 0) && (dMin1 > 0)) {
+					updateSigma(tau);
+					return deflatedEnd;
+				} else if ((dMin < 0.0) && (dMin1 > 0.0)
+						&& (work[4 * deflatedEnd - 5 - pingPong] < TOLERANCE * (sigma + dN1))
+						&& (Math.abs(dN) < TOLERANCE * sigma)) {
+					work[4 * deflatedEnd - 3 - pingPong] = 0.0;
+					dMin = 0.0;
+					updateSigma(tau);
+					return deflatedEnd;
+				} else if (dMin < 0.0) {
+					if (tType < -22) {
+						tau = 0.0;
+					} else if (dMin1 > 0.0) {
+						tau = (tau + dMin) * (1.0 - 2.0 * MathUtils.EPSILON);
+						tType -= 11;
+					} else {
+						tau *= 0.25;
+						tType -= 12;
+					}
+				} else if (Double.isNaN(dMin)) {
+					tau = 0.0;
+				} else {
+					loop = false;
+				}
+			}
 
             // step 4a: dqds
             for (boolean loop = true; loop;) {
