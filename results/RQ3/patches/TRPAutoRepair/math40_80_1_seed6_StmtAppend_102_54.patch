--- ./original/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	2018-02-05 06:35:19.000000000 -0500
+++ ./variant65/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	2018-02-05 07:04:25.000000000 -0500
@@ -254,16 +254,14 @@
                 if (!((nextX > xA) && (nextX < xB))) {
                     // the guessed root is not strictly inside of the tightest bracketing interval
 
-                    // the guessed root is either not strictly inside the interval or it
-                    // is a NaN (which occurs when some sampling points share the same y)
-                    // we try again with a lower interpolation order
-                    if (signChangeIndex - start >= end - signChangeIndex) {
-                        // we have more points before the sign change, drop the lowest point
-                        ++start;
-                    } else {
-                        // we have more points after sign change, drop the highest point
-                        --end;
-                    }
+                    {
+						if (signChangeIndex - start >= end - signChangeIndex) {
+							++start;
+						} else {
+							--end;
+						}
+						signChangeIndex = 2;
+					}
 
                     // we need to do one more attempt
                     nextX = Double.NaN;
