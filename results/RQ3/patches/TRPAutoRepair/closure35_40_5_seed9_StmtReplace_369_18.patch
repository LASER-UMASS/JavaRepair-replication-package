--- ./original/com/google/javascript/jscomp/TypeInference.java	2018-02-18 14:47:34.000000000 -0500
+++ ./variant105/com/google/javascript/jscomp/TypeInference.java	2018-02-18 15:55:43.000000000 -0500
@@ -683,20 +683,7 @@
         }
         objectType.defineInferredProperty(memberName, valueType, name);
 
-        // Do normal flow inference if this is a direct property assignment.
-        if (qObjName != null && name.isString()) {
-          String qKeyName = qObjName + "." + memberName;
-          Var var = syntacticScope.getVar(qKeyName);
-          JSType oldType = var == null ? null : var.getType();
-          if (var != null && var.isTypeInferred()) {
-            var.setType(oldType == null ?
-                valueType : oldType.getLeastSupertype(oldType));
-          }
-
-          scope.inferQualifiedSlot(name, qKeyName,
-              oldType == null ? getNativeType(UNKNOWN_TYPE) : oldType,
-              valueType);
-        }
+        return bottomScope;
       } else {
         n.setJSType(getNativeType(UNKNOWN_TYPE));
       }
