--- ./original/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	2018-02-05 11:46:22.000000000 -0500
+++ ./variant148/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	2018-02-05 12:57:13.000000000 -0500
@@ -230,16 +230,16 @@
 
             // target for the next evaluation point
             double targetY;
-            if (agingA >= MAXIMAL_AGING) {
-                // we keep updating the high bracket, try to compensate this
-                targetY = -REDUCTION_FACTOR * yB;
-            } else if (agingB >= MAXIMAL_AGING) {
-                // we keep updating the low bracket, try to compensate this
-                targetY = -REDUCTION_FACTOR * yA;
-            } else {
-                // bracketing is balanced, try to find the root itself
-                targetY = 0;
-            }
+            {
+				if (agingA >= MAXIMAL_AGING) {
+					targetY = -REDUCTION_FACTOR * yB;
+				} else if (agingB >= MAXIMAL_AGING) {
+					targetY = -REDUCTION_FACTOR * yA;
+				} else {
+					targetY = 0;
+				}
+				signChangeIndex = 2;
+			}
 
             // make a few attempts to guess a root,
             double nextX;
