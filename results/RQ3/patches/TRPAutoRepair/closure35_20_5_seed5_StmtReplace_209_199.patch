--- ./original/com/google/javascript/jscomp/TypeInference.java	2018-02-18 14:01:32.000000000 -0500
+++ ./variant37/com/google/javascript/jscomp/TypeInference.java	2018-02-18 14:32:07.000000000 -0500
@@ -391,22 +391,8 @@
         scope = traverseCatch(n, scope);
         break;
     }
-    if (!n.isFunction()) {
-      JSDocInfo info = n.getJSDocInfo();
-      if (info != null && info.hasType()) {
-        JSType castType = info.getType().evaluate(syntacticScope, registry);
-
-        // A stubbed type cast on a qualified name should take
-        // effect for all subsequent accesses of that name,
-        // so treat it the same as an assign to that name.
-        if (n.isQualifiedName() &&
-            n.getParent().isExprResult()) {
-          updateScopeForTypeChange(scope, n, n.getJSType(), castType);
-        }
-
-        n.setJSType(castType);
-      }
-    }
+    if (!n.isFunction())
+		scope = traverseReturn(n, scope);
 
     return scope;
   }
