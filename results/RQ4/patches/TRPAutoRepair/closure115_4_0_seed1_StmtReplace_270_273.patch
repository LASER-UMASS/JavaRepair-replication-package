--- ./original/com/google/javascript/jscomp/FunctionInjector.java	2017-12-21 12:19:42.000000000 -0500
+++ ./variant46/com/google/javascript/jscomp/FunctionInjector.java	2017-12-21 12:41:10.000000000 -0500
@@ -727,9 +727,10 @@
       // For each named parameter check if a mutable argument use more than one.
       if (fnParam != null) {
         if (cArg != null) {
-          if (hasSideEffects && NodeUtil.canBeSideEffected(cArg)) {
-            return CanInlineResult.NO;
-          }
+          if (NodeUtil.mayEffectMutableState(cArg, compiler)
+				&& NodeUtil.getNameReferenceCount(block, fnParam.getString()) > 1) {
+			return CanInlineResult.NO;
+		}
           // Check for arguments that are evaluated more than once.
           // Note: Unlike block inlining, there it is not possible that a
           // parameter reference will be in a loop.
