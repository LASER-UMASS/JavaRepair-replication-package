java version "1.7.0_231"
OpenJDK Runtime Environment (rhel-2.6.19.1.el7_6-x86_64 u231-b01)
OpenJDK 64-Bit Server VM (build 24.231-b01, mixed mode)
Check out 8d109fe1 to /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/ OK
Init local repository...................................................... OK
Tag post-fix revision...................................................... OK
Run post-checkout hook..................................................... OK
Initialize fixed program version........................................... OK
Apply patch................................................................ OK
Initialize buggy program version........................................... OK
Diff 8d109fe1:3ba9ba79..................................................... OK
Apply patch................................................................ OK
Tag pre-fix revision....................................................... OK
Check out program version: Time-3b......................................... OK
Running ant (compile)...................................................... OK
Running ant (compile.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Running ant (run.dev.tests)................................................ OK
Failing tests: 5
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero
/home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0
PURIFY IS TRUE
=================================================
Project : time_3	start : 19/11/08 15:21

readFailedTest: path is /mnt/nfs/work1/brun/mmotwani/SimFix/d4j-info/failed_tests/time/3.txtTESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
Failing tests: 0
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_1
Failing tests: 0
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_1
Failing tests: 0
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_1
Failing tests: 0
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_1
Failing tests: 0
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy/src/test/java/org/joda/time/TestMutableDateTime_Adds.java

# FAILING TESTS: 1
TIMEOUT : 3600000
===========
locations= [<org.joda.time.MutableDateTime,785>, <org.joda.time.MutableDateTime,786>, <org.joda.time.chrono.ZonedChronology,351>, <org.joda.time.chrono.ZonedChronology,352>, <org.joda.time.chrono.ZonedChronology,354>, <org.joda.time.chrono.ZonedChronology,357>, <org.joda.time.DateTimeZone,931>, <org.joda.time.chrono.ZonedChronology,315>, <org.joda.time.chrono.ZonedChronology,316>, <org.joda.time.chrono.ZonedChronology,317>, <org.joda.time.chrono.BasicYearDateTimeField,60>, <org.joda.time.tz.CachedDateTimeZone,202>, <org.joda.time.chrono.ZonedChronology,341>, <org.joda.time.chrono.ZonedChronology,342>, <org.joda.time.chrono.ZonedChronology,344>, <org.joda.time.chrono.ZonedChronology,347>, <org.joda.time.field.ImpreciseDateTimeField,183>, <org.joda.time.chrono.BasicGJChronology,190>, <org.joda.time.chrono.BasicMonthOfYearDateTimeField,94>, <org.joda.time.MutableDateTime,351>, <org.joda.time.MutableDateTime,353>, <org.joda.time.format.DateTimeFormatterBuilder,1962>, <org.joda.time.format.DateTimeFormatterBuilder,1963>, <org.joda.time.format.DateTimeFormatterBuilder,1964>, <org.joda.time.format.DateTimeFormatterBuilder,1971>, <org.joda.time.format.FormatUtils,68>, <org.joda.time.format.FormatUtils,74>, <org.joda.time.format.FormatUtils,75>, <org.joda.time.format.FormatUtils,77>, <org.joda.time.format.FormatUtils,78>, <org.joda.time.MutableDateTime,639>, <org.joda.time.MutableDateTime,640>, <org.joda.time.MutableDateTime,660>, <org.joda.time.MutableDateTime,661>, <org.joda.time.MutableDateTime,702>, <org.joda.time.MutableDateTime,703>, <org.joda.time.MutableDateTime,723>, <org.joda.time.MutableDateTime,724>, <org.joda.time.MutableDateTime,764>, <org.joda.time.MutableDateTime,765>, <org.joda.time.base.BaseDateTime,223>, <org.joda.time.base.BaseDateTime,225>, <org.joda.time.format.DateTimeFormatterBuilder,2158>, <org.joda.time.format.DateTimeFormatterBuilder,2157>, <org.joda.time.format.DateTimeFormatterBuilder,2164>, <org.joda.time.format.DateTimeFormatterBuilder,2165>, <org.joda.time.format.DateTimeFormatterBuilder,2166>, <org.joda.time.format.DateTimeFormatterBuilder,2169>, <org.joda.time.format.DateTimeFormatterBuilder,2170>, <org.joda.time.format.DateTimeFormatterBuilder,2174>, <org.joda.time.format.DateTimeFormatterBuilder,2175>, <org.joda.time.format.DateTimeFormatterBuilder,2176>, <org.joda.time.format.DateTimeFormatterBuilder,2178>, <org.joda.time.format.DateTimeFormatterBuilder,2179>, <org.joda.time.format.DateTimeFormatterBuilder,2182>, <org.joda.time.format.DateTimeFormatterBuilder,2183>, <org.joda.time.format.DateTimeFormatterBuilder,2184>, <org.joda.time.field.PreciseDurationDateTimeField,128>, <org.joda.time.format.ISODateTimeFormat,725>, <org.joda.time.format.DateTimeFormatterBuilder,1913>, <org.joda.time.format.DateTimeFormatterBuilder,1916>, <org.joda.time.format.DateTimeFormatterBuilder,1917>, <org.joda.time.format.DateTimeFormatterBuilder,1946>, <org.joda.time.format.DateTimeFormatterBuilder,1947>, <org.joda.time.format.DateTimeFormatterBuilder,1951>, <org.joda.time.format.DateTimeFormatterBuilder,1959>, <org.joda.time.format.DateTimeFormatterBuilder,1961>, <org.joda.time.MutableDateTime,1229>, <org.joda.time.field.PreciseDurationDateTimeField,127>, <org.joda.time.format.DateTimeFormatterBuilder,2667>, <org.joda.time.format.DateTimeFormatterBuilder,2150>, <org.joda.time.format.DateTimeFormatterBuilder,2153>, <org.joda.time.DateTimeFieldType,522>, <org.joda.time.format.FormatUtils,63>, <org.joda.time.format.FormatUtils,64>, <org.joda.time.format.FormatUtils,66>, <org.joda.time.format.FormatUtils,80>, <org.joda.time.format.FormatUtils,82>, <org.joda.time.format.FormatUtils,83>, <org.joda.time.format.FormatUtils,87>, <org.joda.time.format.FormatUtils,90>, <org.joda.time.format.FormatUtils,67>, <org.joda.time.format.DateTimeFormatterBuilder,1475>, <org.joda.time.format.DateTimeFormatterBuilder,1476>, <org.joda.time.format.DateTimeFormatterBuilder,1479>, <org.joda.time.format.DateTimeFormatterBuilder,1480>, <org.joda.time.format.DateTimeFormatterBuilder,1218>, <org.joda.time.format.DateTimeFormatterBuilder,1219>, <org.joda.time.format.DateTimeFormatterBuilder,2654>, <org.joda.time.format.DateTimeFormatterBuilder,2660>, <org.joda.time.format.DateTimeFormatterBuilder,2661>, <org.joda.time.format.DateTimeFormatterBuilder,2665>, <org.joda.time.format.DateTimeFormatterBuilder,2670>, <org.joda.time.format.DateTimeFormatterBuilder,2671>, <org.joda.time.format.DateTimeFormatterBuilder,2672>, <org.joda.time.format.DateTimeFormatterBuilder,2674>, <org.joda.time.format.DateTimeFormatter,469>, <org.joda.time.format.DateTimeFormatter,470>, <org.joda.time.format.DateTimeFormatter,471>, <org.joda.time.format.DateTimeFormatter,472>, <org.joda.time.format.DateTimeFormatter,592>, <org.joda.time.format.DateTimeFormatter,593>, <org.joda.time.format.DateTimeFormatter,594>, <org.joda.time.format.FormatUtils,50>, <org.joda.time.format.FormatUtils,62>, <org.joda.time.format.FormatUtils,92>, <org.joda.time.format.DateTimeFormatter,628>, <org.joda.time.format.DateTimeFormatter,629>, <org.joda.time.format.DateTimeFormatter,632>, <org.joda.time.format.DateTimeFormatter,633>, <org.joda.time.format.DateTimeFormatter,634>, <org.joda.time.format.DateTimeFormatter,635>, <org.joda.time.format.DateTimeFormatter,641>, <org.joda.time.format.DateTimeFormatter,642>, <org.joda.time.format.DateTimeFormatter,667>, <org.joda.time.format.DateTimeFormatter,668>, <org.joda.time.format.DateTimeFormatter,671>, <org.joda.time.DateTimeUtils,199>, <org.joda.time.DateTimeUtils,200>, <org.joda.time.DateTimeUtils,203>, <org.joda.time.DateTimeFieldType,524>, <org.joda.time.DateTimeUtils,196>, <org.joda.time.DateTimeFieldType,520>, <org.joda.time.DurationFieldType,292>, <org.joda.time.DateTimeFieldType,516>, <org.joda.time.MutableDateTime,636>, <org.joda.time.chrono.BasicGJChronology,121>, <org.joda.time.chrono.BasicGJChronology,140>, <org.joda.time.format.FormatUtils,31>, <org.joda.time.DateTimeUtils,181>, <org.joda.time.chrono.BasicGJChronology,188>, <org.joda.time.DateTimeUtils,178>, <org.joda.time.chrono.GregorianChronology,213>, <org.joda.time.format.DateTimeFormatterBuilder,153>, <org.joda.time.format.DateTimeFormatterBuilder,154>, <org.joda.time.format.DateTimeFormatterBuilder,155>, <org.joda.time.format.DateTimeFormatterBuilder,217>, <org.joda.time.format.DateTimeFormatterBuilder,220>, <org.joda.time.format.DateTimeFormatterBuilder,257>, <org.joda.time.format.DateTimeFormatterBuilder,258>, <org.joda.time.format.DateTimeFormatterBuilder,305>, <org.joda.time.format.DateTimeFormatterBuilder,308>, <org.joda.time.format.DateTimeFormatterBuilder,311>, <org.joda.time.format.DateTimeFormatterBuilder,312>, <org.joda.time.format.DateTimeFormatterBuilder,319>, <org.joda.time.format.DateTimeFormatterBuilder,321>, <org.joda.time.format.DateTimeFormatterBuilder,322>, <org.joda.time.format.DateTimeFormatterBuilder,326>, <org.joda.time.format.DateTimeFormatterBuilder,328>, <org.joda.time.format.DateTimeFormatterBuilder,345>, <org.joda.time.format.DateTimeFormatterBuilder,346>, <org.joda.time.format.DateTimeFormatterBuilder,347>, <org.joda.time.format.DateTimeFormatterBuilder,357>, <org.joda.time.format.DateTimeFormatterBuilder,360>, <org.joda.time.format.DateTimeFormatterBuilder,383>, <org.joda.time.format.DateTimeFormatterBuilder,384>, <org.joda.time.format.DateTimeFormatterBuilder,385>, <org.joda.time.format.DateTimeFormatterBuilder,386>, <org.joda.time.format.DateTimeFormatterBuilder,464>, <org.joda.time.format.DateTimeFormatterBuilder,467>, <org.joda.time.format.DateTimeFormatterBuilder,470>, <org.joda.time.format.DateTimeFormatterBuilder,570>, <org.joda.time.format.DateTimeFormatterBuilder,573>, <org.joda.time.format.DateTimeFormatterBuilder,576>, <org.joda.time.format.DateTimeFormatterBuilder,579>, <org.joda.time.format.DateTimeFormatterBuilder,597>, <org.joda.time.format.DateTimeFormatterBuilder,614>, <org.joda.time.format.DateTimeFormatterBuilder,631>, <org.joda.time.format.DateTimeFormatterBuilder,685>, <org.joda.time.format.DateTimeFormatterBuilder,765>, <org.joda.time.format.DateTimeFormatterBuilder,785>, <org.joda.time.format.DateTimeFormatterBuilder,795>, <org.joda.time.format.DateTimeFormatterBuilder,807>, <org.joda.time.format.DateTimeFormatterBuilder,1091>, <org.joda.time.format.DateTimeFormatterBuilder,1150>, <org.joda.time.format.DateTimeFormatterBuilder,1171>, <org.joda.time.format.DateTimeFormatterBuilder,2623>, <org.joda.time.format.DateTimeFormatterBuilder,2624>, <org.joda.time.format.DateTimeFormatterBuilder,2730>, <org.joda.time.format.DateTimeFormatterBuilder,2763>, <org.joda.time.format.DateTimeFormatterBuilder,2770>, <org.joda.time.format.DateTimeFormatterBuilder,2778>, <org.joda.time.format.DateTimeFormatterBuilder,2779>, <org.joda.time.format.DateTimeFormatterBuilder,2780>, <org.joda.time.format.DateTimeFormatterBuilder,2783>, <org.joda.time.format.DateTimeFormatter,164>, <org.joda.time.format.DateTimeFormatter,182>, <org.joda.time.format.ISODateTimeFormat,662>, <org.joda.time.format.ISODateTimeFormat,784>, <org.joda.time.format.ISODateTimeFormat,995>, <org.joda.time.format.ISODateTimeFormat,1033>, <org.joda.time.format.ISODateTimeFormat,1138>, <org.joda.time.format.ISODateTimeFormat,1139>, <org.joda.time.format.ISODateTimeFormat,1140>, <org.joda.time.format.ISODateTimeFormat,1141>, <org.joda.time.format.ISODateTimeFormat,1142>, <org.joda.time.format.ISODateTimeFormat,1143>, <org.joda.time.format.ISODateTimeFormat,1144>, <org.joda.time.format.ISODateTimeFormat,1145>, <org.joda.time.format.ISODateTimeFormat,1146>]
======================org.joda.time.MutableDateTime,785
========
setEndMillis(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setStartMillis(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setChronology(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
add(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
setValues(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.MutableDateTime,786
Find no block!
org.joda.time.chrono.ZonedChronology,351
UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantUTC^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantUTC^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((val1^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((val1^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^val2)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Long.MIN_VALUE cannot be negated");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("Specified date does not exist");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==null){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return 1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0||offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==Integer.MIN_VALUE){
return subtract(instant,(long)value);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff){
return getWeeksInYear(offset-1);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&diff<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&instant<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instant<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(diff<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>Long.MIN_VALUE){
return instant-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
return instant;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==offset){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID<=diff){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset==diff){
return add(instant,i_months);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff){
return iField.getMinimumValue(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.getMaximumValue(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant==0||diff==0){
return this;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return (int)(instant%DateTimeConstants.MILLIS_PER_DAY);
}else {
return (DateTimeConstants.MILLIS_PER_DAY-1)+(int)((instant+1)%DateTimeConstants.MILLIS_PER_DAY);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<diff&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff||instant>=serialVersionUID){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("The offset cannot be zero");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset==0){
return DateTimeZone.UTC;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0){
return this;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID<diff){
return prev;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,0,getMaximumValue());
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&offset<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("Positive hours must not have negative minutes: "+offset);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&offset<0){
throw new IllegalArgumentException("Positive hours must not have negative minutes: "+offset);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>Long.MIN_VALUE){
return prev-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.get(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.isLeap(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.getLeapAmount(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==1){
return getYear(instant+DateTimeConstants.MILLIS_PER_WEEK);
}else if(week>51){
return getYear(instant-(2*DateTimeConstants.MILLIS_PER_WEEK));
}else {
return getYear(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff>=serialVersionUID){
return iTimeField?instant:instant-diff;
}else {
return earlierOrLater?instant+diff:instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,1,diff);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getYearMonthDayMillis(offset,1,diff);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant+=offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
instant=getYearMonthDayMillis(offset,1,diff);
instant+=offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return instant%diff;
}else {
return (instant+1)%iUnitMillis+iUnitMillis-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),null,null);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant+diff<instant){
instant=gregorianToJulian(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant-diff>=instant){
instant=julianToGregorian(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
id=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
convId=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID<-3){
return 7+(int)((daysSince19700101+4)%7);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
daysSince19700101=(instant-(DateTimeConstants.MILLIS_PER_DAY-1))/DateTimeConstants.MILLIS_PER_DAY;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return (int)((instant/getUnitMillis())%diff);
}else {
return iRange-1+(int)(((instant+1)/getUnitMillis())%iRange);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<diff&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<diff&&(instant^offset)<0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<offset){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
FieldUtils.verifyValueBounds(this,offset,DateTimeConstants.BCE,DateTimeConstants.CE);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return instant-instant%instant;
}else {
instant+=1;
return instant-instant%iUnitMillis-iUnitMillis;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
instant+=1;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>0){
instant-=1;
return instant-instant%instant+iUnitMillis;
}else {
return instant-instant%iUnitMillis;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
instant-=1;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalInstantException("Illegal instant due to time zone offset transition ("+iZone);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff<=serialVersionUID-instant){
return serialVersionUID;
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID-instant<=diff){
return serialVersionUID;
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalInstantException(serialVersionUID,iZone.getID());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(diff),new IllegalInstantException(serialVersionUID,iZone.getID()).getMessage());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
new IllegalFieldValueException(iField.getType(),Integer.valueOf(diff),new IllegalInstantException(serialVersionUID,iZone.getID()).getMessage()).initCause(new IllegalInstantException(serialVersionUID,iZone.getID()));
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
serialVersionUID=iField.set(localInstant,diff);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
UNKNOWN ASTNode type : catch (IllegalFieldValueException ex) {
  if (monthOfYear != 2 || dayOfMonth != 29) {
    throw ex;
  }
  instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,28,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
  if (instant >= iCutoverMillis) {
    throw ex;
  }
}

========
int offset=this.iZone.getOffset(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 0
TESTING : time_3
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapSummer_addZero
  - org.joda.time.TestDateTimeZoneCutover::testPeriod
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Gaza
Failing tests: 9
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 0
TESTING : time_3
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapSummer_addZero
  - org.joda.time.TestDateTimeZoneCutover::testPeriod
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Gaza
Failing tests: 9
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instantLocal^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instantLocal^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Long.MIN_VALUE cannot be negated");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instantUTC-offset;
if((instantUTC^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instantUTC^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instantUTC-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instantUTC^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=val1-offset;
if((val1^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-val2;
if((instant^diff)<0&&(instant^val2)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((val1^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=val1-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-val2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((val1^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^val2)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return diff;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetToAdd(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=iField.add(instant+diff,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
instant+=offset;
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalInstantException(instant,getZone().getID());
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
instant-=diff;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,offset,ERA_VALUE,ERA_VALUE);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff){
return getWeeksInYear(offset-1);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return 1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff>=instant){
return iTimeField?instant:instant-diff;
}else {
return earlierOrLater?instant+diff:instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return diff<0?-year:year;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return year;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
id=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
convId=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<diff&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<diff&&(instant^offset)<0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return (offset>diff||value<1)?getMaximumValue(instant):maxLessOne;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return maxLessOne;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getWeekyear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return value;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0||offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.get(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.isLeap(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.getLeapAmount(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff<instant){
return prev;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
FieldUtils.verifyValueBounds(this,diff,1,getMaximumValue());
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=transition-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-diff;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if(instant<diff&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff||instant>=nextTransition(serialVersionUID)+serialVersionUID-serialVersionUID){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID==0||diff==0){
return this;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>Long.MIN_VALUE){
return instant-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
return instant;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return (int)((instant-diff)/DateTimeConstants.MILLIS_PER_DAY)+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return yearStart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return MILLIS_PER_DAY;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
diff-=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
FieldUtils.verifyValueBounds(this,offset,1,diff);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
FieldUtils.verifyValueBounds(this,offset,0,getMaximumValue());
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().add(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().addWrapField(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().set(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.get(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().roundFloor(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().roundCeiling(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().roundHalfFloor(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().roundHalfCeiling(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().roundHalfEven(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().remainder(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return iLeapMonth;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(serialVersionUID,"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=super.add(instant,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,get(instant),offset,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-MILLIS_PER_SECOND;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
int diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&diff<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if(instant<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff>Long.MIN_VALUE){
return prev-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getWeekOfWeekyear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diff-=2;
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return position;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
offset++;
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
offset++;
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=getBase().getDateTimeMillis(instant,offset,offset,offset,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,"resulting");
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(instant,"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(instant,"resulting");
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return prev;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return next;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return iUnitMillis;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,offset,getMinimumValue(),getMaximumValue());
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<offset){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(offset==1){
return getYear(instant+DateTimeConstants.MILLIS_PER_WEEK);
}else if(week>51){
return getYear(instant-(2*DateTimeConstants.MILLIS_PER_WEEK));
}else {
return getYear(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.get(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,offset,getMinimumValue(),getMaximumValueForSet(instant,value));
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,DateTimeConstants.BCE,DateTimeConstants.CE);
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-MILLIS_PER_HOUR;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(getOffset(instant-3*DateTimeConstants.MILLIS_PER_HOUR)<=diff){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0){
return DateTimeZone.UTC;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("The offset cannot be zero");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
diff=offset;
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset<(iField.getMinimumValue()+offset)){
offset=field.getMinimumValue()+offset;
}else {
iMin=minValue;
}
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getDivided(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0){
return this;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return wrappedValue;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return thisValue;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return instant%serialVersionUID;
}else {
return (instant+1)%iUnitMillis+iUnitMillis-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("Specified date does not exist");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff>=0){
return instant-instant%instant;
}else {
instant+=1;
return instant-instant%iUnitMillis-iUnitMillis;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
instant+=1;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff>0){
instant-=1;
return instant-instant%instant+iUnitMillis;
}else {
return instant-instant%iUnitMillis;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
instant-=1;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=~i;
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getRemainder(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,offset,offset);
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-floor;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff<=roundCeiling(instant)-instant){
return roundFloor(instant);
}else {
return roundCeiling(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(roundCeiling(instant)-instant<=diff){
return roundCeiling(instant);
}else {
return roundFloor(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getMillisOfDay(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-months;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getOffsetFromLocal(instant);
int diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
int diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getOffsetFromLocal(instant);
int diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff==offset){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=ceiling-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,diff);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant+=getMillisOfDay(instant);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,diff);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant+=getMillisOfDay(instant);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,diff);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant+=getMillisOfDay(instant);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,diff);
instant+=getMillisOfDay(instant);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,diff);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant+=getMillisOfDay(instant);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,diff);
instant+=getMillisOfDay(instant);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,diff);
instant+=getMillisOfDay(instant);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,diff);
instant+=getMillisOfDay(instant);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return max;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff>=instant){
return iField.getMaximumValue(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
diff=iField.set(instant,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
if(diff>=instant){
offset=iField.get(iJulianField.add(iCutover,-1));
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(offset==instant){
return add(instant,i_months);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getMillisOfDay(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getMillisOfDay(instant);
long diff=instant-months;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-months;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getMillisOfDay(instant);
long diff=instant-months;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return min;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff<instant){
return iField.getMinimumValue(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
if(diff<instant){
offset=iField.get(iCutover);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return (int)((instant/getUnitMillis())%offset);
}else {
return iRange-1+(int)(((instant+1)/getUnitMillis())%iRange);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-MILLIS_YEAR_1;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return (int)((diff*CYCLE)+1L);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset<-59||minutesOffset>59){
throw new IllegalArgumentException("Minutes out of range: "+minutesOffset);
}
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return millis;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),new IllegalInstantException(iZone.convertUTCToLocal(instant),iZone.getID()).getMessage());
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),new IllegalInstantException(iZone.convertUTCToLocal(instant),iZone.getID()).getMessage()).initCause(new IllegalInstantException(iZone.convertUTCToLocal(instant),iZone.getID()));
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
serialVersionUID=iField.set(localInstant,offset);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return datePart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return timePart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("Specified date does not exist");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalInstantException(instant,getID());
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return (int)(instant%DateTimeConstants.MILLIS_PER_DAY);
}else {
return (DateTimeConstants.MILLIS_PER_DAY-1)+(int)((instant+1)%DateTimeConstants.MILLIS_PER_DAY);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),null,null);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
instant=iField.set(instant,offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff<-3){
return 7+(int)((daysSince19700101+4)%7);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
daysSince19700101=(instant-(DateTimeConstants.MILLIS_PER_DAY-1))/DateTimeConstants.MILLIS_PER_DAY;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return newInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=periodStart-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
enclosing.iZone=this.iZone;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
enclosing.iOffset=this.iOffset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
enclosing.iSavedFields=this.iSavedFields;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
enclosing.iSavedFieldsCount=this.iSavedFieldsCount;
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=iField.add(instant+diff,serialVersionUID);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetToAdd(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetToAdd(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=iField.add(instant+diff,serialVersionUID);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=iField.add(instant+diff,serialVersionUID);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetToAdd(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=iField.add(instant+diff,serialVersionUID);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=super.add(instant,serialVersionUID);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,get(instant),offset,offset);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().add(instant,serialVersionUID),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().add(instant,offset),"resulting");
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(getWrappedField().add(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(getWrappedField().add(instant,offset),"resulting");
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().add(instant,serialVersionUID),"resulting");
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(getWrappedField().add(instant,serialVersionUID),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(getWrappedField().add(instant,serialVersionUID),"resulting");
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.ZonedChronology,352
org.joda.time.chrono.ZonedChronology,354
org.joda.time.chrono.ZonedChronology,357
org.joda.time.DateTimeZone,931
========
if(instantAdjusted-prev<=instant){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted-prev<=diff){
return prev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted-millis<=diff){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted-prev<=prev){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instantAdjusted-prev<=end){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted-prev<=diff){
return offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instantAdjusted-prev<=MIN_VALUE){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.ZonedChronology,315
========
int offset=getOffsetToAdd(serialVersionUID);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iJulianField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,get(instant),offset,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iGregorianField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iGregorianChronology.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return serialVersionUID-offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return prev-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return next-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant+(value-get(instant))*serialVersionUID;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
FieldUtils.verifyValueBounds(this,value,getMinimumValue(),getMaximumValue());
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetFromLocal(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant-offset)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case ROUND_CEILING :

int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case ROUND_HALF_CEILING :

int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getMillisOfDay(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(value==serialVersionUID){
return add(instant,i_months);
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
FieldUtils.verifyValueBounds(this,value,getMinimumValue(),getMaximumValueForSet(instant,value));
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getWeekyear(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getYear(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
FieldUtils.verifyValueBounds(this,value,1,offset);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
if(instant>=instant){
return iField.getMaximumValue(instant);
}
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getDivided(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getRemainder(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return yearStart-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return MILLIS_PER_DAY-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instant^offset)>=0){
iZone=DateTimeZone.UTC;
offset=0;
adjustedInstant=instant;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=get(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant+(offset-get(instant))*getUnitMillis();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
FieldUtils.verifyValueBounds(this,value,1,getMaximumValue());
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getDayOfWeek(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return instant;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
checkLimits(instant,null);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkLimits(instant,"resulting");
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.setYear(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
if(offset>offset){
setToWeek=maxOutWeeks;
}
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getWeekOfWeekyear(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value>1){
instant-=((long)DateTimeConstants.MILLIS_PER_WEEK)*(wow-1);
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offset==0){
return instant;
}
int offset=getYear(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=field.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=getMillisOfDay(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return instant;
}
int offset=getMillisOfDay(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return instant;
}
long offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return instant;
}
long offset=getMillisOfDay(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=minuteOfHour().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
iZone=DateTimeUtils.getZone(zone);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return (instant+1)%serialVersionUID+iUnitMillis-1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return iUnitMillis-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
if(offset>(31+28)){
if(isLeapYear(value)){
if(!isLeapYear(offset)){
dayOfYear--;
}
}else {
if(isLeapYear(year)){
dayOfYear++;
}
}
}
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant+=offset;
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==1){
return getYear(instant+DateTimeConstants.MILLIS_PER_WEEK);
}else if(week>51){
return getYear(instant-(2*DateTimeConstants.MILLIS_PER_WEEK));
}else {
return value;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return firstWeekMillis1-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return MILLIS_PER_WEEK-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant<instant){
return getWeeksInYear(value-1);
}
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant>=getFirstWeekOfYearMillis(value+1)){
return 1;
}
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
if(instant<instant){
return iField.getMinimumValue(instant);
}
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().monthOfYear().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().monthOfYear().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().monthOfYear().set(instant,offset);
instant=getChronology().dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().monthOfYear().set(instant,offset);
instant=getChronology().dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return iTimeField?instant:instant-serialVersionUID;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return iTimeField?instant+serialVersionUID:instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant<instant||instant>=serialVersionUID){
return instant;
}
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant<instant||instant>=serialVersionUID){
return instant;
}
return iTimeField?instant:instant-serialVersionUID;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant<instant||instant>=serialVersionUID){
return instant;
}
return iTimeField?instant+serialVersionUID:instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 0
TESTING : time_3
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.joda.time.TestMutablePeriod_Updates::testAdd_RInterval2
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_RP_RI1
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_RI_RP1
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int1
  - org.joda.time.TestInterval_Constructors::testConstructor_RP_RI1
  - org.joda.time.TestInterval_Constructors::testConstructor_RI_RP1
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Gaza
Failing tests: 13
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return millis-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().secondOfMinute().set(instant,offset);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().secondOfMinute().set(instant,offset);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().secondOfMinute().set(instant,offset);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().secondOfMinute().set(instant,offset);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=dayOfMonth().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=hourOfDay().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=minuteOfHour().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=minuteOfHour().set(instant,value);
instant=secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=minuteOfHour().set(instant,value);
instant=secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset!=getZone().getOffset(instant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return this;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value==getValue(offset)){
return this;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,get(instant),value,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instant^offset)>=0){
iZone=DateTimeZone.UTC;
offset=0;
adjustedInstant=instant;
}
int offset=getOffset(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
int offset=getOffset(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.ZonedChronology,316
org.joda.time.chrono.ZonedChronology,317
org.joda.time.chrono.BasicYearDateTimeField,60
UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

========
if(months==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(serialVersionUID==0||years==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(duration==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(prev==0){
return prev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(prev==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(years==0){
return prev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(thisWeekyear==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetBefore==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(years==0){
return instant-1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(years==0){
return instant;
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(next==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(yearStart==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sum==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diff==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i_months==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(overlapStart==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(year==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(wyear==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(years==0){
return serialVersionUID-1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i==0){
return serialVersionUID-1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==0){
return prev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==0){
return instant;
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(years==0){
return instant;
return serialVersionUID-1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(years==0){
return instant;
return prev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==0){
return instant;
return serialVersionUID-1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==0){
return instant;
return prev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(years==0){
return iGregorianField;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(years==0){
return iJulianField;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant==0){
return iGregorianField;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant==0){
return iJulianField;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(durationToAdd==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iGapDuration==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(week==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(amount==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(adjustedInstant==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(afterStart==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(years==0){
return diff;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dayOfYear==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(weeks==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(days==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(hours==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(minutes==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(seconds==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(millis==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(years!=0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(oldEra==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(wow==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=iChronology.weekOfWeekyear().roundFloor(instant);
if(years==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(thisDom==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dayToUse==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iDayOfMonth==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.tz.CachedDateTimeZone,202
========
if(iOffset==getOffset(iPeriodStart)){
iOffset=iZoneRef.getOffset(iPeriodStart);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocalFromOriginal==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iOffset!=Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iOffset==iZone){
iOffset=iZoneRef.getOffset(iPeriodStart);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset!=Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iOffset==null){
iOffset=iZoneRef.getOffset(iPeriodStart);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iStandardOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return instantUTC;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==null){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iStandardOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iStandardOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iStandardOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iStandardOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||instant<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||instantUTC<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(serialVersionUID==iPeriodStart||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iPeriodStart=serialVersionUID;
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iStandardOffset==iOffset&&iNameKey.equals(iZone.getNameKey(iPeriodStart))){
System.out.println("*d* Error in "+iZone.getID());
return false;
}
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iStandardOffset==0){
throw new IllegalArgumentException("The offset cannot be zero");
}
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iOffset=iStandardOffset;
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iStandardOffset==0){
throw new IllegalArgumentException("The offset cannot be zero");
}
iOffset=iStandardOffset;
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||iPeriodStart<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null&&millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,iStandardOffset,iOffset,getMaximumValue());
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZone.previousTransition(millis)==millis||iZone.previousTransition(millis)<millis){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZone.previousTransition(millis)==millis||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||iZone.previousTransition(millis)<millis){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||iZone.previousTransition(millis)<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||prev<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
millis=iZone.previousTransition(millis);
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(serialVersionUID-1!=millis){
System.out.println("*r* Error in "+iZone.getID());
return false;
}
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZoneRef.nextTransition(iPeriodStart)==iPeriodStart||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||iNameKey.charAt(iStandardOffset)<='9'){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return offsetPrev;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(iPeriodStart);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||instant<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||instantUTC<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==null){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getNameKey(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iStandardOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iStandardOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iStandardOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iStandardOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getStandardOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iStandardOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getStandardOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iStandardOffset;
}
return iNextInfo.getStandardOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iStandardOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iStandardOffset;
}
return iNextInfo.getStandardOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(serialVersionUID==millis||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
millis=serialVersionUID;
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iStandardOffset==iOffset&&iNameKey.equals(iZone.getNameKey(millis))){
System.out.println("*d* Error in "+iZone.getID());
return false;
}
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNameKey!=null){
return name;
}
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iStandardOffset==0){
throw new IllegalArgumentException("The offset cannot be zero");
}
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iOffset=iStandardOffset;
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iStandardOffset==0){
throw new IllegalArgumentException("The offset cannot be zero");
}
iOffset=iStandardOffset;
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||iPeriodStart<iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||iPeriodStart<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return FieldUtils.safeAdd(FieldUtils.safeMultiply(-iPeriodStart,1000),-millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return FieldUtils.safeAdd(FieldUtils.safeMultiply(iPeriodStart,1000),millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,iStandardOffset,iOffset,getMaximumValue());
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null&&millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZone.previousTransition(millis)==millis||iZone.previousTransition(millis)<iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZone.previousTransition(millis)==millis||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||iZone.previousTransition(millis)<iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||iZone.previousTransition(millis)<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||prev<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZoneRef.nextTransition(iPeriodStart)==iPeriodStart||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||iNameKey.charAt(iStandardOffset)<='9'){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return Minutes.minutes(FieldUtils.safeToInt(millis/DateTimeConstants.MILLIS_PER_MINUTE));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.minutes(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
checkYearsAndMonths("Minutes");
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
millis+=((long)getSeconds())*DateTimeConstants.MILLIS_PER_SECOND;
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(minutes,getMinutes());
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(minutes,((long)getHours())*((long)DateTimeConstants.MINUTES_PER_HOUR));
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(minutes,((long)getDays())*((long)DateTimeConstants.MINUTES_PER_DAY));
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(minutes,((long)getWeeks())*((long)DateTimeConstants.MINUTES_PER_WEEK));
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return Hours.hours(FieldUtils.safeToInt(millis/DateTimeConstants.MILLIS_PER_HOUR));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.hours(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
checkYearsAndMonths("Hours");
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
millis+=((long)getMinutes())*DateTimeConstants.MILLIS_PER_MINUTE;
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(hours,getHours());
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(hours,((long)getDays())*((long)DateTimeConstants.HOURS_PER_DAY));
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(hours,((long)getWeeks())*((long)DateTimeConstants.HOURS_PER_WEEK));
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return Days.days(FieldUtils.safeToInt(millis/DateTimeConstants.MILLIS_PER_DAY));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.days(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
checkYearsAndMonths("Days");
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
millis+=((long)getHours())*DateTimeConstants.MILLIS_PER_HOUR;
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(days,getDays());
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(days,((long)getWeeks())*((long)DateTimeConstants.DAYS_PER_WEEK));
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
millis+=((long)getSeconds())*DateTimeConstants.MILLIS_PER_SECOND;
millis+=((long)getMinutes())*DateTimeConstants.MILLIS_PER_MINUTE;
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return Weeks.weeks(FieldUtils.safeToInt(iPeriodStart));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.weeks(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
checkYearsAndMonths("Weeks");
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
millis+=((long)getDays())*DateTimeConstants.MILLIS_PER_DAY;
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
millis+=((long)getSeconds())*DateTimeConstants.MILLIS_PER_SECOND;
millis+=((long)getHours())*DateTimeConstants.MILLIS_PER_HOUR;
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
millis+=((long)getMinutes())*DateTimeConstants.MILLIS_PER_MINUTE;
millis+=((long)getHours())*DateTimeConstants.MILLIS_PER_HOUR;
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
millis+=((long)getSeconds())*DateTimeConstants.MILLIS_PER_SECOND;
millis+=((long)getMinutes())*DateTimeConstants.MILLIS_PER_MINUTE;
millis+=((long)getHours())*DateTimeConstants.MILLIS_PER_HOUR;
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNameKey==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.joda.time.chrono.ZonedChronology,341
UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

========
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantUTC^sum)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantUTC^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^sum)<0&&(instantLocal^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instantLocal^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((val1^sum)<0&&(val1^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^serialVersionUID)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((val1^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(val1^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^val2)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^serialVersionUID)>=0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Long.MIN_VALUE cannot be negated");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalArgumentException("Specified date does not exist");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==null){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return 1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==0||offset==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==Integer.MIN_VALUE){
return subtract(instant,(long)value);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant<sum){
return getWeeksInYear(offset-1);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<0&&sum>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instant<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&sum>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(sum<0&&instant>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(sum<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&instant>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>Long.MIN_VALUE){
return instant-1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
return instant;
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==offset){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(serialVersionUID<=sum){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==sum){
return add(instant,i_months);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant<sum){
return iField.getMinimumValue(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.getMaximumValue(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant==0||sum==0){
return this;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=0){
return (int)(instant%DateTimeConstants.MILLIS_PER_DAY);
}else {
return (DateTimeConstants.MILLIS_PER_DAY-1)+(int)((instant+1)%DateTimeConstants.MILLIS_PER_DAY);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<sum||instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instant<sum&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant<sum||instant>=serialVersionUID){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<sum&&instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalArgumentException("The offset cannot be zero");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==0){
return DateTimeZone.UTC;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==0){
return this;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(serialVersionUID<sum){
return prev;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,0,getMaximumValue());
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalArgumentException("Positive hours must not have negative minutes: "+offset);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>Long.MIN_VALUE){
return prev-1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.get(instant);
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.isLeap(instant);
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.getLeapAmount(instant);
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==1){
return getYear(instant+DateTimeConstants.MILLIS_PER_WEEK);
}else if(week>51){
return getYear(instant-(2*DateTimeConstants.MILLIS_PER_WEEK));
}else {
return getYear(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,1,sum);
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getYearMonthDayMillis(offset,1,sum);
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant+=offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
instant=getYearMonthDayMillis(offset,1,sum);
instant+=offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=0){
return instant%sum;
}else {
return (instant+1)%iUnitMillis+iUnitMillis-1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),null,null);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Timeout!
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy/src/test/java/org/joda/time/TestMutableDateTime_Adds.java

# FAILING TESTS: 1
TIMEOUT : 3600000
===========
locations= [<org.joda.time.MutableDateTime,785>, <org.joda.time.MutableDateTime,786>, <org.joda.time.chrono.ZonedChronology,351>, <org.joda.time.chrono.ZonedChronology,352>, <org.joda.time.chrono.ZonedChronology,354>, <org.joda.time.chrono.ZonedChronology,357>, <org.joda.time.DateTimeZone,931>, <org.joda.time.chrono.ZonedChronology,315>, <org.joda.time.chrono.ZonedChronology,316>, <org.joda.time.chrono.ZonedChronology,317>, <org.joda.time.chrono.BasicYearDateTimeField,60>, <org.joda.time.tz.CachedDateTimeZone,202>, <org.joda.time.chrono.ZonedChronology,341>, <org.joda.time.chrono.ZonedChronology,342>, <org.joda.time.chrono.ZonedChronology,344>, <org.joda.time.chrono.ZonedChronology,347>, <org.joda.time.field.ImpreciseDateTimeField,183>, <org.joda.time.chrono.BasicGJChronology,190>, <org.joda.time.chrono.BasicMonthOfYearDateTimeField,94>, <org.joda.time.MutableDateTime,351>, <org.joda.time.MutableDateTime,353>, <org.joda.time.format.DateTimeFormatterBuilder,1962>, <org.joda.time.format.DateTimeFormatterBuilder,1963>, <org.joda.time.format.DateTimeFormatterBuilder,1964>, <org.joda.time.format.DateTimeFormatterBuilder,1971>, <org.joda.time.format.FormatUtils,68>, <org.joda.time.format.FormatUtils,74>, <org.joda.time.format.FormatUtils,75>, <org.joda.time.format.FormatUtils,77>, <org.joda.time.format.FormatUtils,78>, <org.joda.time.MutableDateTime,639>, <org.joda.time.MutableDateTime,640>, <org.joda.time.MutableDateTime,660>, <org.joda.time.MutableDateTime,661>, <org.joda.time.MutableDateTime,702>, <org.joda.time.MutableDateTime,703>, <org.joda.time.MutableDateTime,723>, <org.joda.time.MutableDateTime,724>, <org.joda.time.MutableDateTime,764>, <org.joda.time.MutableDateTime,765>, <org.joda.time.base.BaseDateTime,223>, <org.joda.time.base.BaseDateTime,225>, <org.joda.time.format.DateTimeFormatterBuilder,2158>, <org.joda.time.format.DateTimeFormatterBuilder,2157>, <org.joda.time.format.DateTimeFormatterBuilder,2164>, <org.joda.time.format.DateTimeFormatterBuilder,2165>, <org.joda.time.format.DateTimeFormatterBuilder,2166>, <org.joda.time.format.DateTimeFormatterBuilder,2169>, <org.joda.time.format.DateTimeFormatterBuilder,2170>, <org.joda.time.format.DateTimeFormatterBuilder,2174>, <org.joda.time.format.DateTimeFormatterBuilder,2175>, <org.joda.time.format.DateTimeFormatterBuilder,2176>, <org.joda.time.format.DateTimeFormatterBuilder,2178>, <org.joda.time.format.DateTimeFormatterBuilder,2179>, <org.joda.time.format.DateTimeFormatterBuilder,2182>, <org.joda.time.format.DateTimeFormatterBuilder,2183>, <org.joda.time.format.DateTimeFormatterBuilder,2184>, <org.joda.time.field.PreciseDurationDateTimeField,128>, <org.joda.time.format.ISODateTimeFormat,725>, <org.joda.time.format.DateTimeFormatterBuilder,1913>, <org.joda.time.format.DateTimeFormatterBuilder,1916>, <org.joda.time.format.DateTimeFormatterBuilder,1917>, <org.joda.time.format.DateTimeFormatterBuilder,1946>, <org.joda.time.format.DateTimeFormatterBuilder,1947>, <org.joda.time.format.DateTimeFormatterBuilder,1951>, <org.joda.time.format.DateTimeFormatterBuilder,1959>, <org.joda.time.format.DateTimeFormatterBuilder,1961>, <org.joda.time.MutableDateTime,1229>, <org.joda.time.field.PreciseDurationDateTimeField,127>, <org.joda.time.format.DateTimeFormatterBuilder,2667>, <org.joda.time.format.DateTimeFormatterBuilder,2150>, <org.joda.time.format.DateTimeFormatterBuilder,2153>, <org.joda.time.DateTimeFieldType,522>, <org.joda.time.format.FormatUtils,63>, <org.joda.time.format.FormatUtils,64>, <org.joda.time.format.FormatUtils,66>, <org.joda.time.format.FormatUtils,80>, <org.joda.time.format.FormatUtils,82>, <org.joda.time.format.FormatUtils,83>, <org.joda.time.format.FormatUtils,87>, <org.joda.time.format.FormatUtils,90>, <org.joda.time.format.FormatUtils,67>, <org.joda.time.format.DateTimeFormatterBuilder,1475>, <org.joda.time.format.DateTimeFormatterBuilder,1476>, <org.joda.time.format.DateTimeFormatterBuilder,1479>, <org.joda.time.format.DateTimeFormatterBuilder,1480>, <org.joda.time.format.DateTimeFormatterBuilder,1218>, <org.joda.time.format.DateTimeFormatterBuilder,1219>, <org.joda.time.format.DateTimeFormatterBuilder,2654>, <org.joda.time.format.DateTimeFormatterBuilder,2660>, <org.joda.time.format.DateTimeFormatterBuilder,2661>, <org.joda.time.format.DateTimeFormatterBuilder,2665>, <org.joda.time.format.DateTimeFormatterBuilder,2670>, <org.joda.time.format.DateTimeFormatterBuilder,2671>, <org.joda.time.format.DateTimeFormatterBuilder,2672>, <org.joda.time.format.DateTimeFormatterBuilder,2674>, <org.joda.time.format.DateTimeFormatter,469>, <org.joda.time.format.DateTimeFormatter,470>, <org.joda.time.format.DateTimeFormatter,471>, <org.joda.time.format.DateTimeFormatter,472>, <org.joda.time.format.DateTimeFormatter,592>, <org.joda.time.format.DateTimeFormatter,593>, <org.joda.time.format.DateTimeFormatter,594>, <org.joda.time.format.FormatUtils,50>, <org.joda.time.format.FormatUtils,62>, <org.joda.time.format.FormatUtils,92>, <org.joda.time.format.DateTimeFormatter,628>, <org.joda.time.format.DateTimeFormatter,629>, <org.joda.time.format.DateTimeFormatter,632>, <org.joda.time.format.DateTimeFormatter,633>, <org.joda.time.format.DateTimeFormatter,634>, <org.joda.time.format.DateTimeFormatter,635>, <org.joda.time.format.DateTimeFormatter,641>, <org.joda.time.format.DateTimeFormatter,642>, <org.joda.time.format.DateTimeFormatter,667>, <org.joda.time.format.DateTimeFormatter,668>, <org.joda.time.format.DateTimeFormatter,671>, <org.joda.time.DateTimeUtils,199>, <org.joda.time.DateTimeUtils,200>, <org.joda.time.DateTimeUtils,203>, <org.joda.time.DateTimeFieldType,524>, <org.joda.time.DateTimeUtils,196>, <org.joda.time.DateTimeFieldType,520>, <org.joda.time.DurationFieldType,292>, <org.joda.time.DateTimeFieldType,516>, <org.joda.time.MutableDateTime,636>, <org.joda.time.chrono.BasicGJChronology,121>, <org.joda.time.chrono.BasicGJChronology,140>, <org.joda.time.format.FormatUtils,31>, <org.joda.time.DateTimeUtils,181>, <org.joda.time.chrono.BasicGJChronology,188>, <org.joda.time.DateTimeUtils,178>, <org.joda.time.chrono.GregorianChronology,213>, <org.joda.time.format.DateTimeFormatterBuilder,153>, <org.joda.time.format.DateTimeFormatterBuilder,154>, <org.joda.time.format.DateTimeFormatterBuilder,155>, <org.joda.time.format.DateTimeFormatterBuilder,217>, <org.joda.time.format.DateTimeFormatterBuilder,220>, <org.joda.time.format.DateTimeFormatterBuilder,257>, <org.joda.time.format.DateTimeFormatterBuilder,258>, <org.joda.time.format.DateTimeFormatterBuilder,305>, <org.joda.time.format.DateTimeFormatterBuilder,308>, <org.joda.time.format.DateTimeFormatterBuilder,311>, <org.joda.time.format.DateTimeFormatterBuilder,312>, <org.joda.time.format.DateTimeFormatterBuilder,319>, <org.joda.time.format.DateTimeFormatterBuilder,321>, <org.joda.time.format.DateTimeFormatterBuilder,322>, <org.joda.time.format.DateTimeFormatterBuilder,326>, <org.joda.time.format.DateTimeFormatterBuilder,328>, <org.joda.time.format.DateTimeFormatterBuilder,345>, <org.joda.time.format.DateTimeFormatterBuilder,346>, <org.joda.time.format.DateTimeFormatterBuilder,347>, <org.joda.time.format.DateTimeFormatterBuilder,357>, <org.joda.time.format.DateTimeFormatterBuilder,360>, <org.joda.time.format.DateTimeFormatterBuilder,383>, <org.joda.time.format.DateTimeFormatterBuilder,384>, <org.joda.time.format.DateTimeFormatterBuilder,385>, <org.joda.time.format.DateTimeFormatterBuilder,386>, <org.joda.time.format.DateTimeFormatterBuilder,464>, <org.joda.time.format.DateTimeFormatterBuilder,467>, <org.joda.time.format.DateTimeFormatterBuilder,470>, <org.joda.time.format.DateTimeFormatterBuilder,570>, <org.joda.time.format.DateTimeFormatterBuilder,573>, <org.joda.time.format.DateTimeFormatterBuilder,576>, <org.joda.time.format.DateTimeFormatterBuilder,579>, <org.joda.time.format.DateTimeFormatterBuilder,597>, <org.joda.time.format.DateTimeFormatterBuilder,614>, <org.joda.time.format.DateTimeFormatterBuilder,631>, <org.joda.time.format.DateTimeFormatterBuilder,685>, <org.joda.time.format.DateTimeFormatterBuilder,765>, <org.joda.time.format.DateTimeFormatterBuilder,785>, <org.joda.time.format.DateTimeFormatterBuilder,795>, <org.joda.time.format.DateTimeFormatterBuilder,807>, <org.joda.time.format.DateTimeFormatterBuilder,1091>, <org.joda.time.format.DateTimeFormatterBuilder,1150>, <org.joda.time.format.DateTimeFormatterBuilder,1171>, <org.joda.time.format.DateTimeFormatterBuilder,2623>, <org.joda.time.format.DateTimeFormatterBuilder,2624>, <org.joda.time.format.DateTimeFormatterBuilder,2730>, <org.joda.time.format.DateTimeFormatterBuilder,2763>, <org.joda.time.format.DateTimeFormatterBuilder,2770>, <org.joda.time.format.DateTimeFormatterBuilder,2778>, <org.joda.time.format.DateTimeFormatterBuilder,2779>, <org.joda.time.format.DateTimeFormatterBuilder,2780>, <org.joda.time.format.DateTimeFormatterBuilder,2783>, <org.joda.time.format.DateTimeFormatter,164>, <org.joda.time.format.DateTimeFormatter,182>, <org.joda.time.format.ISODateTimeFormat,662>, <org.joda.time.format.ISODateTimeFormat,784>, <org.joda.time.format.ISODateTimeFormat,995>, <org.joda.time.format.ISODateTimeFormat,1033>, <org.joda.time.format.ISODateTimeFormat,1138>, <org.joda.time.format.ISODateTimeFormat,1139>, <org.joda.time.format.ISODateTimeFormat,1140>, <org.joda.time.format.ISODateTimeFormat,1141>, <org.joda.time.format.ISODateTimeFormat,1142>, <org.joda.time.format.ISODateTimeFormat,1143>, <org.joda.time.format.ISODateTimeFormat,1144>, <org.joda.time.format.ISODateTimeFormat,1145>, <org.joda.time.format.ISODateTimeFormat,1146>]
======================org.joda.time.MutableDateTime,785
========
setEndMillis(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setStartMillis(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setChronology(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
add(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
setValues(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.MutableDateTime,786
Find no block!
org.joda.time.chrono.ZonedChronology,351
UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantUTC^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantUTC^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((val1^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((val1^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^val2)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Long.MIN_VALUE cannot be negated");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("Specified date does not exist");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==null){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return 1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0||offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==Integer.MIN_VALUE){
return subtract(instant,(long)value);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff){
return getWeeksInYear(offset-1);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&diff<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&instant<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instant<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(diff<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>Long.MIN_VALUE){
return instant-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
return instant;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==offset){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID<=diff){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset==diff){
return add(instant,i_months);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff){
return iField.getMinimumValue(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.getMaximumValue(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant==0||diff==0){
return this;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return (int)(instant%DateTimeConstants.MILLIS_PER_DAY);
}else {
return (DateTimeConstants.MILLIS_PER_DAY-1)+(int)((instant+1)%DateTimeConstants.MILLIS_PER_DAY);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<diff&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff||instant>=serialVersionUID){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("The offset cannot be zero");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset==0){
return DateTimeZone.UTC;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0){
return this;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID<diff){
return prev;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,0,getMaximumValue());
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&offset<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("Positive hours must not have negative minutes: "+offset);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&offset<0){
throw new IllegalArgumentException("Positive hours must not have negative minutes: "+offset);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>Long.MIN_VALUE){
return prev-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.get(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.isLeap(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.getLeapAmount(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==1){
return getYear(instant+DateTimeConstants.MILLIS_PER_WEEK);
}else if(week>51){
return getYear(instant-(2*DateTimeConstants.MILLIS_PER_WEEK));
}else {
return getYear(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff>=serialVersionUID){
return iTimeField?instant:instant-diff;
}else {
return earlierOrLater?instant+diff:instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,1,diff);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getYearMonthDayMillis(offset,1,diff);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant+=offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
instant=getYearMonthDayMillis(offset,1,diff);
instant+=offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return instant%diff;
}else {
return (instant+1)%iUnitMillis+iUnitMillis-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),null,null);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant+diff<instant){
instant=gregorianToJulian(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant-diff>=instant){
instant=julianToGregorian(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
id=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
convId=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID<-3){
return 7+(int)((daysSince19700101+4)%7);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
daysSince19700101=(instant-(DateTimeConstants.MILLIS_PER_DAY-1))/DateTimeConstants.MILLIS_PER_DAY;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return (int)((instant/getUnitMillis())%diff);
}else {
return iRange-1+(int)(((instant+1)/getUnitMillis())%iRange);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<diff&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<diff&&(instant^offset)<0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<offset){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
FieldUtils.verifyValueBounds(this,offset,DateTimeConstants.BCE,DateTimeConstants.CE);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return instant-instant%instant;
}else {
instant+=1;
return instant-instant%iUnitMillis-iUnitMillis;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
instant+=1;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>0){
instant-=1;
return instant-instant%instant+iUnitMillis;
}else {
return instant-instant%iUnitMillis;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
instant-=1;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalInstantException("Illegal instant due to time zone offset transition ("+iZone);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff<=serialVersionUID-instant){
return serialVersionUID;
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID-instant<=diff){
return serialVersionUID;
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalInstantException(serialVersionUID,iZone.getID());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(diff),new IllegalInstantException(serialVersionUID,iZone.getID()).getMessage());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
new IllegalFieldValueException(iField.getType(),Integer.valueOf(diff),new IllegalInstantException(serialVersionUID,iZone.getID()).getMessage()).initCause(new IllegalInstantException(serialVersionUID,iZone.getID()));
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
serialVersionUID=iField.set(localInstant,diff);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
UNKNOWN ASTNode type : catch (IllegalFieldValueException ex) {
  if (monthOfYear != 2 || dayOfMonth != 29) {
    throw ex;
  }
  instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,28,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
  if (instant >= iCutoverMillis) {
    throw ex;
  }
}

========
int offset=this.iZone.getOffset(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 0
TESTING : time_3
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapSummer_addZero
  - org.joda.time.TestDateTimeZoneCutover::testPeriod
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Gaza
Failing tests: 9
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 0
TESTING : time_3
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapSummer_addZero
  - org.joda.time.TestDateTimeZoneCutover::testPeriod
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Gaza
Failing tests: 9
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instantLocal^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instantLocal^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Long.MIN_VALUE cannot be negated");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instantUTC-offset;
if((instantUTC^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instantUTC^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instantUTC-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instantUTC^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=val1-offset;
if((val1^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-val2;
if((instant^diff)<0&&(instant^val2)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((val1^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=val1-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-val2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((val1^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^val2)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return diff;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetToAdd(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=iField.add(instant+diff,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
instant+=offset;
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalInstantException(instant,getZone().getID());
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
instant-=diff;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,offset,ERA_VALUE,ERA_VALUE);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff){
return getWeeksInYear(offset-1);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return 1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff>=instant){
return iTimeField?instant:instant-diff;
}else {
return earlierOrLater?instant+diff:instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return diff<0?-year:year;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return year;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
id=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
convId=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<diff&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<diff&&(instant^offset)<0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return (offset>diff||value<1)?getMaximumValue(instant):maxLessOne;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return maxLessOne;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getWeekyear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return value;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0||offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.get(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.isLeap(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.getLeapAmount(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff<instant){
return prev;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
FieldUtils.verifyValueBounds(this,diff,1,getMaximumValue());
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=transition-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-diff;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if(instant<diff&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff||instant>=nextTransition(serialVersionUID)+serialVersionUID-serialVersionUID){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID==0||diff==0){
return this;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>Long.MIN_VALUE){
return instant-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
return instant;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return (int)((instant-diff)/DateTimeConstants.MILLIS_PER_DAY)+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return yearStart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return MILLIS_PER_DAY;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
diff-=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
FieldUtils.verifyValueBounds(this,offset,1,diff);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
FieldUtils.verifyValueBounds(this,offset,0,getMaximumValue());
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().add(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().addWrapField(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().set(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.get(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().roundFloor(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().roundCeiling(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().roundHalfFloor(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().roundHalfCeiling(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().roundHalfEven(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().remainder(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return iLeapMonth;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(serialVersionUID,"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=super.add(instant,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,get(instant),offset,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-MILLIS_PER_SECOND;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
int diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&diff<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if(instant<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff>Long.MIN_VALUE){
return prev-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getWeekOfWeekyear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diff-=2;
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return position;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
offset++;
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
offset++;
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=getBase().getDateTimeMillis(instant,offset,offset,offset,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,"resulting");
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(instant,"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(instant,"resulting");
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return prev;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return next;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return iUnitMillis;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,offset,getMinimumValue(),getMaximumValue());
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<offset){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(offset==1){
return getYear(instant+DateTimeConstants.MILLIS_PER_WEEK);
}else if(week>51){
return getYear(instant-(2*DateTimeConstants.MILLIS_PER_WEEK));
}else {
return getYear(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.get(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,offset,getMinimumValue(),getMaximumValueForSet(instant,value));
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,DateTimeConstants.BCE,DateTimeConstants.CE);
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-MILLIS_PER_HOUR;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(getOffset(instant-3*DateTimeConstants.MILLIS_PER_HOUR)<=diff){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0){
return DateTimeZone.UTC;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("The offset cannot be zero");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
diff=offset;
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset<(iField.getMinimumValue()+offset)){
offset=field.getMinimumValue()+offset;
}else {
iMin=minValue;
}
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getDivided(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0){
return this;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return wrappedValue;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return thisValue;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return instant%serialVersionUID;
}else {
return (instant+1)%iUnitMillis+iUnitMillis-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("Specified date does not exist");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff>=0){
return instant-instant%instant;
}else {
instant+=1;
return instant-instant%iUnitMillis-iUnitMillis;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
instant+=1;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff>0){
instant-=1;
return instant-instant%instant+iUnitMillis;
}else {
return instant-instant%iUnitMillis;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
instant-=1;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=~i;
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getRemainder(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,offset,offset);
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-floor;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff<=roundCeiling(instant)-instant){
return roundFloor(instant);
}else {
return roundCeiling(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(roundCeiling(instant)-instant<=diff){
return roundCeiling(instant);
}else {
return roundFloor(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getMillisOfDay(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-months;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getOffsetFromLocal(instant);
int diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
int diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getOffsetFromLocal(instant);
int diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff==offset){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=ceiling-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,diff);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant+=getMillisOfDay(instant);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,diff);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant+=getMillisOfDay(instant);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,diff);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant+=getMillisOfDay(instant);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,diff);
instant+=getMillisOfDay(instant);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,diff);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant+=getMillisOfDay(instant);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,diff);
instant+=getMillisOfDay(instant);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,diff);
instant+=getMillisOfDay(instant);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,diff);
instant+=getMillisOfDay(instant);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return max;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff>=instant){
return iField.getMaximumValue(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
diff=iField.set(instant,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
if(diff>=instant){
offset=iField.get(iJulianField.add(iCutover,-1));
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(offset==instant){
return add(instant,i_months);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getMillisOfDay(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getMillisOfDay(instant);
long diff=instant-months;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-months;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getMillisOfDay(instant);
long diff=instant-months;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return min;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff<instant){
return iField.getMinimumValue(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
if(diff<instant){
offset=iField.get(iCutover);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return (int)((instant/getUnitMillis())%offset);
}else {
return iRange-1+(int)(((instant+1)/getUnitMillis())%iRange);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-MILLIS_YEAR_1;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return (int)((diff*CYCLE)+1L);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset<-59||minutesOffset>59){
throw new IllegalArgumentException("Minutes out of range: "+minutesOffset);
}
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return millis;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),new IllegalInstantException(iZone.convertUTCToLocal(instant),iZone.getID()).getMessage());
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),new IllegalInstantException(iZone.convertUTCToLocal(instant),iZone.getID()).getMessage()).initCause(new IllegalInstantException(iZone.convertUTCToLocal(instant),iZone.getID()));
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
serialVersionUID=iField.set(localInstant,offset);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return datePart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return timePart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("Specified date does not exist");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalInstantException(instant,getID());
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return (int)(instant%DateTimeConstants.MILLIS_PER_DAY);
}else {
return (DateTimeConstants.MILLIS_PER_DAY-1)+(int)((instant+1)%DateTimeConstants.MILLIS_PER_DAY);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),null,null);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
instant=iField.set(instant,offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff<-3){
return 7+(int)((daysSince19700101+4)%7);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
daysSince19700101=(instant-(DateTimeConstants.MILLIS_PER_DAY-1))/DateTimeConstants.MILLIS_PER_DAY;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return newInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=periodStart-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
enclosing.iZone=this.iZone;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
enclosing.iOffset=this.iOffset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
enclosing.iSavedFields=this.iSavedFields;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
enclosing.iSavedFieldsCount=this.iSavedFieldsCount;
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=iField.add(instant+diff,serialVersionUID);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetToAdd(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetToAdd(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=iField.add(instant+diff,serialVersionUID);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=iField.add(instant+diff,serialVersionUID);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetToAdd(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=iField.add(instant+diff,serialVersionUID);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=super.add(instant,serialVersionUID);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,get(instant),offset,offset);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().add(instant,serialVersionUID),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().add(instant,offset),"resulting");
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(getWrappedField().add(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(getWrappedField().add(instant,offset),"resulting");
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().add(instant,serialVersionUID),"resulting");
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(getWrappedField().add(instant,serialVersionUID),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(getWrappedField().add(instant,serialVersionUID),"resulting");
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.ZonedChronology,352
org.joda.time.chrono.ZonedChronology,354
org.joda.time.chrono.ZonedChronology,357
org.joda.time.DateTimeZone,931
========
if(instantAdjusted-prev<=instant){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted-prev<=diff){
return prev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted-millis<=diff){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted-prev<=prev){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instantAdjusted-prev<=end){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted-prev<=diff){
return offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instantAdjusted-prev<=MIN_VALUE){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.ZonedChronology,315
========
int offset=getOffsetToAdd(serialVersionUID);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iJulianField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,get(instant),offset,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iGregorianField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iGregorianChronology.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return serialVersionUID-offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return prev-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return next-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant+(value-get(instant))*serialVersionUID;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
FieldUtils.verifyValueBounds(this,value,getMinimumValue(),getMaximumValue());
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetFromLocal(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant-offset)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case ROUND_CEILING :

int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case ROUND_HALF_CEILING :

int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getMillisOfDay(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(value==serialVersionUID){
return add(instant,i_months);
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
FieldUtils.verifyValueBounds(this,value,getMinimumValue(),getMaximumValueForSet(instant,value));
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getWeekyear(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getYear(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
FieldUtils.verifyValueBounds(this,value,1,offset);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
if(instant>=instant){
return iField.getMaximumValue(instant);
}
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getDivided(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getRemainder(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return yearStart-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return MILLIS_PER_DAY-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instant^offset)>=0){
iZone=DateTimeZone.UTC;
offset=0;
adjustedInstant=instant;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=get(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant+(offset-get(instant))*getUnitMillis();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
FieldUtils.verifyValueBounds(this,value,1,getMaximumValue());
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getDayOfWeek(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return instant;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
checkLimits(instant,null);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkLimits(instant,"resulting");
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.setYear(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
if(offset>offset){
setToWeek=maxOutWeeks;
}
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getWeekOfWeekyear(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value>1){
instant-=((long)DateTimeConstants.MILLIS_PER_WEEK)*(wow-1);
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offset==0){
return instant;
}
int offset=getYear(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=field.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=getMillisOfDay(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return instant;
}
int offset=getMillisOfDay(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return instant;
}
long offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return instant;
}
long offset=getMillisOfDay(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=minuteOfHour().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
iZone=DateTimeUtils.getZone(zone);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return (instant+1)%serialVersionUID+iUnitMillis-1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return iUnitMillis-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
if(offset>(31+28)){
if(isLeapYear(value)){
if(!isLeapYear(offset)){
dayOfYear--;
}
}else {
if(isLeapYear(year)){
dayOfYear++;
}
}
}
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant+=offset;
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==1){
return getYear(instant+DateTimeConstants.MILLIS_PER_WEEK);
}else if(week>51){
return getYear(instant-(2*DateTimeConstants.MILLIS_PER_WEEK));
}else {
return value;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return firstWeekMillis1-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return MILLIS_PER_WEEK-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant<instant){
return getWeeksInYear(value-1);
}
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant>=getFirstWeekOfYearMillis(value+1)){
return 1;
}
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
if(instant<instant){
return iField.getMinimumValue(instant);
}
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().monthOfYear().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().monthOfYear().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().monthOfYear().set(instant,offset);
instant=getChronology().dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().monthOfYear().set(instant,offset);
instant=getChronology().dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return iTimeField?instant:instant-serialVersionUID;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return iTimeField?instant+serialVersionUID:instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant<instant||instant>=serialVersionUID){
return instant;
}
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant<instant||instant>=serialVersionUID){
return instant;
}
return iTimeField?instant:instant-serialVersionUID;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant<instant||instant>=serialVersionUID){
return instant;
}
return iTimeField?instant+serialVersionUID:instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 0
TESTING : time_3
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.joda.time.TestMutablePeriod_Updates::testAdd_RInterval2
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_RP_RI1
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_RI_RP1
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int1
  - org.joda.time.TestInterval_Constructors::testConstructor_RP_RI1
  - org.joda.time.TestInterval_Constructors::testConstructor_RI_RP1
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Gaza
Failing tests: 13
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return millis-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().secondOfMinute().set(instant,offset);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().secondOfMinute().set(instant,offset);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().secondOfMinute().set(instant,offset);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().secondOfMinute().set(instant,offset);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=dayOfMonth().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=hourOfDay().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=minuteOfHour().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=minuteOfHour().set(instant,value);
instant=secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=minuteOfHour().set(instant,value);
instant=secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset!=getZone().getOffset(instant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return this;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value==getValue(offset)){
return this;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,get(instant),value,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instant^offset)>=0){
iZone=DateTimeZone.UTC;
offset=0;
adjustedInstant=instant;
}
int offset=getOffset(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
int offset=getOffset(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.ZonedChronology,316
org.joda.time.chrono.ZonedChronology,317
org.joda.time.chrono.BasicYearDateTimeField,60
UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

========
if(months==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(serialVersionUID==0||years==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(duration==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(prev==0){
return prev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(prev==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(years==0){
return prev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(thisWeekyear==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetBefore==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(years==0){
return instant-1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(years==0){
return instant;
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(next==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(yearStart==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sum==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diff==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i_months==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(overlapStart==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(year==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(wyear==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(years==0){
return serialVersionUID-1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i==0){
return serialVersionUID-1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==0){
return prev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==0){
return instant;
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(years==0){
return instant;
return serialVersionUID-1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(years==0){
return instant;
return prev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==0){
return instant;
return serialVersionUID-1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==0){
return instant;
return prev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(years==0){
return iGregorianField;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(years==0){
return iJulianField;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant==0){
return iGregorianField;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant==0){
return iJulianField;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(durationToAdd==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iGapDuration==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(week==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(amount==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(adjustedInstant==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(afterStart==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(years==0){
return diff;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dayOfYear==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(weeks==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(days==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(hours==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(minutes==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(seconds==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(millis==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(years!=0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(oldEra==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(wow==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=iChronology.weekOfWeekyear().roundFloor(instant);
if(years==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(thisDom==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dayToUse==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iDayOfMonth==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.tz.CachedDateTimeZone,202
========
if(iOffset==getOffset(iPeriodStart)){
iOffset=iZoneRef.getOffset(iPeriodStart);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocalFromOriginal==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iOffset!=Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iOffset==iZone){
iOffset=iZoneRef.getOffset(iPeriodStart);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset!=Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iOffset==null){
iOffset=iZoneRef.getOffset(iPeriodStart);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iStandardOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return instantUTC;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==null){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iStandardOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iStandardOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iStandardOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iStandardOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||instant<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||instantUTC<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(serialVersionUID==iPeriodStart||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iPeriodStart=serialVersionUID;
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iStandardOffset==iOffset&&iNameKey.equals(iZone.getNameKey(iPeriodStart))){
System.out.println("*d* Error in "+iZone.getID());
return false;
}
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iStandardOffset==0){
throw new IllegalArgumentException("The offset cannot be zero");
}
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iOffset=iStandardOffset;
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iStandardOffset==0){
throw new IllegalArgumentException("The offset cannot be zero");
}
iOffset=iStandardOffset;
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||iPeriodStart<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null&&millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,iStandardOffset,iOffset,getMaximumValue());
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZone.previousTransition(millis)==millis||iZone.previousTransition(millis)<millis){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZone.previousTransition(millis)==millis||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||iZone.previousTransition(millis)<millis){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||iZone.previousTransition(millis)<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||prev<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
millis=iZone.previousTransition(millis);
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(serialVersionUID-1!=millis){
System.out.println("*r* Error in "+iZone.getID());
return false;
}
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZoneRef.nextTransition(iPeriodStart)==iPeriodStart||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||iNameKey.charAt(iStandardOffset)<='9'){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return offsetPrev;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(iPeriodStart);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||instant<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||instantUTC<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==null){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getNameKey(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iStandardOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iStandardOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iStandardOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iStandardOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getStandardOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iStandardOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getStandardOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iStandardOffset;
}
return iNextInfo.getStandardOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iStandardOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iStandardOffset;
}
return iNextInfo.getStandardOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(serialVersionUID==millis||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
millis=serialVersionUID;
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iStandardOffset==iOffset&&iNameKey.equals(iZone.getNameKey(millis))){
System.out.println("*d* Error in "+iZone.getID());
return false;
}
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNameKey!=null){
return name;
}
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iStandardOffset==0){
throw new IllegalArgumentException("The offset cannot be zero");
}
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iOffset=iStandardOffset;
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iStandardOffset==0){
throw new IllegalArgumentException("The offset cannot be zero");
}
iOffset=iStandardOffset;
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||iPeriodStart<iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||iPeriodStart<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return FieldUtils.safeAdd(FieldUtils.safeMultiply(-iPeriodStart,1000),-millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return FieldUtils.safeAdd(FieldUtils.safeMultiply(iPeriodStart,1000),millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,iStandardOffset,iOffset,getMaximumValue());
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null&&millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZone.previousTransition(millis)==millis||iZone.previousTransition(millis)<iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZone.previousTransition(millis)==millis||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||iZone.previousTransition(millis)<iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||iZone.previousTransition(millis)<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||prev<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZoneRef.nextTransition(iPeriodStart)==iPeriodStart||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||iNameKey.charAt(iStandardOffset)<='9'){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return Minutes.minutes(FieldUtils.safeToInt(millis/DateTimeConstants.MILLIS_PER_MINUTE));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.minutes(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
checkYearsAndMonths("Minutes");
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
millis+=((long)getSeconds())*DateTimeConstants.MILLIS_PER_SECOND;
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(minutes,getMinutes());
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(minutes,((long)getHours())*((long)DateTimeConstants.MINUTES_PER_HOUR));
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(minutes,((long)getDays())*((long)DateTimeConstants.MINUTES_PER_DAY));
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(minutes,((long)getWeeks())*((long)DateTimeConstants.MINUTES_PER_WEEK));
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return Hours.hours(FieldUtils.safeToInt(millis/DateTimeConstants.MILLIS_PER_HOUR));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.hours(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
checkYearsAndMonths("Hours");
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
millis+=((long)getMinutes())*DateTimeConstants.MILLIS_PER_MINUTE;
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(hours,getHours());
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(hours,((long)getDays())*((long)DateTimeConstants.HOURS_PER_DAY));
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(hours,((long)getWeeks())*((long)DateTimeConstants.HOURS_PER_WEEK));
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return Days.days(FieldUtils.safeToInt(millis/DateTimeConstants.MILLIS_PER_DAY));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.days(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
checkYearsAndMonths("Days");
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
millis+=((long)getHours())*DateTimeConstants.MILLIS_PER_HOUR;
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(days,getDays());
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(days,((long)getWeeks())*((long)DateTimeConstants.DAYS_PER_WEEK));
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
millis+=((long)getSeconds())*DateTimeConstants.MILLIS_PER_SECOND;
millis+=((long)getMinutes())*DateTimeConstants.MILLIS_PER_MINUTE;
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return Weeks.weeks(FieldUtils.safeToInt(iPeriodStart));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.weeks(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
checkYearsAndMonths("Weeks");
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
millis+=((long)getDays())*DateTimeConstants.MILLIS_PER_DAY;
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
millis+=((long)getSeconds())*DateTimeConstants.MILLIS_PER_SECOND;
millis+=((long)getHours())*DateTimeConstants.MILLIS_PER_HOUR;
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
millis+=((long)getMinutes())*DateTimeConstants.MILLIS_PER_MINUTE;
millis+=((long)getHours())*DateTimeConstants.MILLIS_PER_HOUR;
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
millis+=((long)getSeconds())*DateTimeConstants.MILLIS_PER_SECOND;
millis+=((long)getMinutes())*DateTimeConstants.MILLIS_PER_MINUTE;
millis+=((long)getHours())*DateTimeConstants.MILLIS_PER_HOUR;
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNameKey==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.joda.time.chrono.ZonedChronology,341
UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

========
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantUTC^sum)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantUTC^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^sum)<0&&(instantLocal^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instantLocal^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((val1^sum)<0&&(val1^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^serialVersionUID)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((val1^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(val1^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^val2)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^serialVersionUID)>=0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Long.MIN_VALUE cannot be negated");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalArgumentException("Specified date does not exist");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==null){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return 1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==0||offset==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==Integer.MIN_VALUE){
return subtract(instant,(long)value);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant<sum){
return getWeeksInYear(offset-1);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<0&&sum>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instant<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&sum>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(sum<0&&instant>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(sum<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&instant>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>Long.MIN_VALUE){
return instant-1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
return instant;
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==offset){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(serialVersionUID<=sum){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==sum){
return add(instant,i_months);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant<sum){
return iField.getMinimumValue(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.getMaximumValue(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant==0||sum==0){
return this;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=0){
return (int)(instant%DateTimeConstants.MILLIS_PER_DAY);
}else {
return (DateTimeConstants.MILLIS_PER_DAY-1)+(int)((instant+1)%DateTimeConstants.MILLIS_PER_DAY);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<sum||instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instant<sum&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant<sum||instant>=serialVersionUID){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<sum&&instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalArgumentException("The offset cannot be zero");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==0){
return DateTimeZone.UTC;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==0){
return this;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(serialVersionUID<sum){
return prev;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,0,getMaximumValue());
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalArgumentException("Positive hours must not have negative minutes: "+offset);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>Long.MIN_VALUE){
return prev-1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.get(instant);
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.isLeap(instant);
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.getLeapAmount(instant);
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==1){
return getYear(instant+DateTimeConstants.MILLIS_PER_WEEK);
}else if(week>51){
return getYear(instant-(2*DateTimeConstants.MILLIS_PER_WEEK));
}else {
return getYear(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,1,sum);
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getYearMonthDayMillis(offset,1,sum);
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant+=offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
UNKNOWN ASTNode type : catch (IllegalFieldValueException ex) {
  if (monthOfYear != 2 || dayOfMonth != 29) {
    throw ex;
  }
  instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,28,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
  if (instant >= iCutoverMillis) {
    throw ex;
  }
}

Timeout!
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy/src/test/java/org/joda/time/TestMutableDateTime_Adds.java

# FAILING TESTS: 1
TIMEOUT : 3600000
===========
locations= [<org.joda.time.MutableDateTime,785>, <org.joda.time.MutableDateTime,786>, <org.joda.time.chrono.ZonedChronology,351>, <org.joda.time.chrono.ZonedChronology,352>, <org.joda.time.chrono.ZonedChronology,354>, <org.joda.time.chrono.ZonedChronology,357>, <org.joda.time.DateTimeZone,931>, <org.joda.time.chrono.ZonedChronology,315>, <org.joda.time.chrono.ZonedChronology,316>, <org.joda.time.chrono.ZonedChronology,317>, <org.joda.time.chrono.BasicYearDateTimeField,60>, <org.joda.time.tz.CachedDateTimeZone,202>, <org.joda.time.chrono.ZonedChronology,341>, <org.joda.time.chrono.ZonedChronology,342>, <org.joda.time.chrono.ZonedChronology,344>, <org.joda.time.chrono.ZonedChronology,347>, <org.joda.time.field.ImpreciseDateTimeField,183>, <org.joda.time.chrono.BasicGJChronology,190>, <org.joda.time.chrono.BasicMonthOfYearDateTimeField,94>, <org.joda.time.MutableDateTime,351>, <org.joda.time.MutableDateTime,353>, <org.joda.time.format.DateTimeFormatterBuilder,1962>, <org.joda.time.format.DateTimeFormatterBuilder,1963>, <org.joda.time.format.DateTimeFormatterBuilder,1964>, <org.joda.time.format.DateTimeFormatterBuilder,1971>, <org.joda.time.format.FormatUtils,68>, <org.joda.time.format.FormatUtils,74>, <org.joda.time.format.FormatUtils,75>, <org.joda.time.format.FormatUtils,77>, <org.joda.time.format.FormatUtils,78>, <org.joda.time.MutableDateTime,639>, <org.joda.time.MutableDateTime,640>, <org.joda.time.MutableDateTime,660>, <org.joda.time.MutableDateTime,661>, <org.joda.time.MutableDateTime,702>, <org.joda.time.MutableDateTime,703>, <org.joda.time.MutableDateTime,723>, <org.joda.time.MutableDateTime,724>, <org.joda.time.MutableDateTime,764>, <org.joda.time.MutableDateTime,765>, <org.joda.time.base.BaseDateTime,223>, <org.joda.time.base.BaseDateTime,225>, <org.joda.time.format.DateTimeFormatterBuilder,2158>, <org.joda.time.format.DateTimeFormatterBuilder,2157>, <org.joda.time.format.DateTimeFormatterBuilder,2164>, <org.joda.time.format.DateTimeFormatterBuilder,2165>, <org.joda.time.format.DateTimeFormatterBuilder,2166>, <org.joda.time.format.DateTimeFormatterBuilder,2169>, <org.joda.time.format.DateTimeFormatterBuilder,2170>, <org.joda.time.format.DateTimeFormatterBuilder,2174>, <org.joda.time.format.DateTimeFormatterBuilder,2175>, <org.joda.time.format.DateTimeFormatterBuilder,2176>, <org.joda.time.format.DateTimeFormatterBuilder,2178>, <org.joda.time.format.DateTimeFormatterBuilder,2179>, <org.joda.time.format.DateTimeFormatterBuilder,2182>, <org.joda.time.format.DateTimeFormatterBuilder,2183>, <org.joda.time.format.DateTimeFormatterBuilder,2184>, <org.joda.time.field.PreciseDurationDateTimeField,128>, <org.joda.time.format.ISODateTimeFormat,725>, <org.joda.time.format.DateTimeFormatterBuilder,1913>, <org.joda.time.format.DateTimeFormatterBuilder,1916>, <org.joda.time.format.DateTimeFormatterBuilder,1917>, <org.joda.time.format.DateTimeFormatterBuilder,1946>, <org.joda.time.format.DateTimeFormatterBuilder,1947>, <org.joda.time.format.DateTimeFormatterBuilder,1951>, <org.joda.time.format.DateTimeFormatterBuilder,1959>, <org.joda.time.format.DateTimeFormatterBuilder,1961>, <org.joda.time.MutableDateTime,1229>, <org.joda.time.field.PreciseDurationDateTimeField,127>, <org.joda.time.format.DateTimeFormatterBuilder,2667>, <org.joda.time.format.DateTimeFormatterBuilder,2150>, <org.joda.time.format.DateTimeFormatterBuilder,2153>, <org.joda.time.DateTimeFieldType,522>, <org.joda.time.format.FormatUtils,63>, <org.joda.time.format.FormatUtils,64>, <org.joda.time.format.FormatUtils,66>, <org.joda.time.format.FormatUtils,80>, <org.joda.time.format.FormatUtils,82>, <org.joda.time.format.FormatUtils,83>, <org.joda.time.format.FormatUtils,87>, <org.joda.time.format.FormatUtils,90>, <org.joda.time.format.FormatUtils,67>, <org.joda.time.format.DateTimeFormatterBuilder,1475>, <org.joda.time.format.DateTimeFormatterBuilder,1476>, <org.joda.time.format.DateTimeFormatterBuilder,1479>, <org.joda.time.format.DateTimeFormatterBuilder,1480>, <org.joda.time.format.DateTimeFormatterBuilder,1218>, <org.joda.time.format.DateTimeFormatterBuilder,1219>, <org.joda.time.format.DateTimeFormatterBuilder,2654>, <org.joda.time.format.DateTimeFormatterBuilder,2660>, <org.joda.time.format.DateTimeFormatterBuilder,2661>, <org.joda.time.format.DateTimeFormatterBuilder,2665>, <org.joda.time.format.DateTimeFormatterBuilder,2670>, <org.joda.time.format.DateTimeFormatterBuilder,2671>, <org.joda.time.format.DateTimeFormatterBuilder,2672>, <org.joda.time.format.DateTimeFormatterBuilder,2674>, <org.joda.time.format.DateTimeFormatter,469>, <org.joda.time.format.DateTimeFormatter,470>, <org.joda.time.format.DateTimeFormatter,471>, <org.joda.time.format.DateTimeFormatter,472>, <org.joda.time.format.DateTimeFormatter,592>, <org.joda.time.format.DateTimeFormatter,593>, <org.joda.time.format.DateTimeFormatter,594>, <org.joda.time.format.FormatUtils,50>, <org.joda.time.format.FormatUtils,62>, <org.joda.time.format.FormatUtils,92>, <org.joda.time.format.DateTimeFormatter,628>, <org.joda.time.format.DateTimeFormatter,629>, <org.joda.time.format.DateTimeFormatter,632>, <org.joda.time.format.DateTimeFormatter,633>, <org.joda.time.format.DateTimeFormatter,634>, <org.joda.time.format.DateTimeFormatter,635>, <org.joda.time.format.DateTimeFormatter,641>, <org.joda.time.format.DateTimeFormatter,642>, <org.joda.time.format.DateTimeFormatter,667>, <org.joda.time.format.DateTimeFormatter,668>, <org.joda.time.format.DateTimeFormatter,671>, <org.joda.time.DateTimeUtils,199>, <org.joda.time.DateTimeUtils,200>, <org.joda.time.DateTimeUtils,203>, <org.joda.time.DateTimeFieldType,524>, <org.joda.time.DateTimeUtils,196>, <org.joda.time.DateTimeFieldType,520>, <org.joda.time.DurationFieldType,292>, <org.joda.time.DateTimeFieldType,516>, <org.joda.time.MutableDateTime,636>, <org.joda.time.chrono.BasicGJChronology,121>, <org.joda.time.chrono.BasicGJChronology,140>, <org.joda.time.format.FormatUtils,31>, <org.joda.time.DateTimeUtils,181>, <org.joda.time.chrono.BasicGJChronology,188>, <org.joda.time.DateTimeUtils,178>, <org.joda.time.chrono.GregorianChronology,213>, <org.joda.time.format.DateTimeFormatterBuilder,153>, <org.joda.time.format.DateTimeFormatterBuilder,154>, <org.joda.time.format.DateTimeFormatterBuilder,155>, <org.joda.time.format.DateTimeFormatterBuilder,217>, <org.joda.time.format.DateTimeFormatterBuilder,220>, <org.joda.time.format.DateTimeFormatterBuilder,257>, <org.joda.time.format.DateTimeFormatterBuilder,258>, <org.joda.time.format.DateTimeFormatterBuilder,305>, <org.joda.time.format.DateTimeFormatterBuilder,308>, <org.joda.time.format.DateTimeFormatterBuilder,311>, <org.joda.time.format.DateTimeFormatterBuilder,312>, <org.joda.time.format.DateTimeFormatterBuilder,319>, <org.joda.time.format.DateTimeFormatterBuilder,321>, <org.joda.time.format.DateTimeFormatterBuilder,322>, <org.joda.time.format.DateTimeFormatterBuilder,326>, <org.joda.time.format.DateTimeFormatterBuilder,328>, <org.joda.time.format.DateTimeFormatterBuilder,345>, <org.joda.time.format.DateTimeFormatterBuilder,346>, <org.joda.time.format.DateTimeFormatterBuilder,347>, <org.joda.time.format.DateTimeFormatterBuilder,357>, <org.joda.time.format.DateTimeFormatterBuilder,360>, <org.joda.time.format.DateTimeFormatterBuilder,383>, <org.joda.time.format.DateTimeFormatterBuilder,384>, <org.joda.time.format.DateTimeFormatterBuilder,385>, <org.joda.time.format.DateTimeFormatterBuilder,386>, <org.joda.time.format.DateTimeFormatterBuilder,464>, <org.joda.time.format.DateTimeFormatterBuilder,467>, <org.joda.time.format.DateTimeFormatterBuilder,470>, <org.joda.time.format.DateTimeFormatterBuilder,570>, <org.joda.time.format.DateTimeFormatterBuilder,573>, <org.joda.time.format.DateTimeFormatterBuilder,576>, <org.joda.time.format.DateTimeFormatterBuilder,579>, <org.joda.time.format.DateTimeFormatterBuilder,597>, <org.joda.time.format.DateTimeFormatterBuilder,614>, <org.joda.time.format.DateTimeFormatterBuilder,631>, <org.joda.time.format.DateTimeFormatterBuilder,685>, <org.joda.time.format.DateTimeFormatterBuilder,765>, <org.joda.time.format.DateTimeFormatterBuilder,785>, <org.joda.time.format.DateTimeFormatterBuilder,795>, <org.joda.time.format.DateTimeFormatterBuilder,807>, <org.joda.time.format.DateTimeFormatterBuilder,1091>, <org.joda.time.format.DateTimeFormatterBuilder,1150>, <org.joda.time.format.DateTimeFormatterBuilder,1171>, <org.joda.time.format.DateTimeFormatterBuilder,2623>, <org.joda.time.format.DateTimeFormatterBuilder,2624>, <org.joda.time.format.DateTimeFormatterBuilder,2730>, <org.joda.time.format.DateTimeFormatterBuilder,2763>, <org.joda.time.format.DateTimeFormatterBuilder,2770>, <org.joda.time.format.DateTimeFormatterBuilder,2778>, <org.joda.time.format.DateTimeFormatterBuilder,2779>, <org.joda.time.format.DateTimeFormatterBuilder,2780>, <org.joda.time.format.DateTimeFormatterBuilder,2783>, <org.joda.time.format.DateTimeFormatter,164>, <org.joda.time.format.DateTimeFormatter,182>, <org.joda.time.format.ISODateTimeFormat,662>, <org.joda.time.format.ISODateTimeFormat,784>, <org.joda.time.format.ISODateTimeFormat,995>, <org.joda.time.format.ISODateTimeFormat,1033>, <org.joda.time.format.ISODateTimeFormat,1138>, <org.joda.time.format.ISODateTimeFormat,1139>, <org.joda.time.format.ISODateTimeFormat,1140>, <org.joda.time.format.ISODateTimeFormat,1141>, <org.joda.time.format.ISODateTimeFormat,1142>, <org.joda.time.format.ISODateTimeFormat,1143>, <org.joda.time.format.ISODateTimeFormat,1144>, <org.joda.time.format.ISODateTimeFormat,1145>, <org.joda.time.format.ISODateTimeFormat,1146>]
======================org.joda.time.MutableDateTime,785
========
setEndMillis(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setStartMillis(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setChronology(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
add(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
setValues(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.MutableDateTime,786
Find no block!
org.joda.time.chrono.ZonedChronology,351
UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantUTC^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantUTC^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((val1^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((val1^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^val2)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Long.MIN_VALUE cannot be negated");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("Specified date does not exist");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==null){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return 1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0||offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==Integer.MIN_VALUE){
return subtract(instant,(long)value);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff){
return getWeeksInYear(offset-1);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&diff<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&instant<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instant<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(diff<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>Long.MIN_VALUE){
return instant-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
return instant;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==offset){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID<=diff){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset==diff){
return add(instant,i_months);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff){
return iField.getMinimumValue(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.getMaximumValue(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant==0||diff==0){
return this;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return (int)(instant%DateTimeConstants.MILLIS_PER_DAY);
}else {
return (DateTimeConstants.MILLIS_PER_DAY-1)+(int)((instant+1)%DateTimeConstants.MILLIS_PER_DAY);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<diff&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff||instant>=serialVersionUID){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("The offset cannot be zero");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset==0){
return DateTimeZone.UTC;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0){
return this;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID<diff){
return prev;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,0,getMaximumValue());
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&offset<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("Positive hours must not have negative minutes: "+offset);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&offset<0){
throw new IllegalArgumentException("Positive hours must not have negative minutes: "+offset);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>Long.MIN_VALUE){
return prev-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.get(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.isLeap(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.getLeapAmount(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==1){
return getYear(instant+DateTimeConstants.MILLIS_PER_WEEK);
}else if(week>51){
return getYear(instant-(2*DateTimeConstants.MILLIS_PER_WEEK));
}else {
return getYear(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff>=serialVersionUID){
return iTimeField?instant:instant-diff;
}else {
return earlierOrLater?instant+diff:instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,1,diff);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getYearMonthDayMillis(offset,1,diff);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant+=offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
instant=getYearMonthDayMillis(offset,1,diff);
instant+=offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return instant%diff;
}else {
return (instant+1)%iUnitMillis+iUnitMillis-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),null,null);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant+diff<instant){
instant=gregorianToJulian(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant-diff>=instant){
instant=julianToGregorian(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
id=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
convId=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID<-3){
return 7+(int)((daysSince19700101+4)%7);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
daysSince19700101=(instant-(DateTimeConstants.MILLIS_PER_DAY-1))/DateTimeConstants.MILLIS_PER_DAY;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return (int)((instant/getUnitMillis())%diff);
}else {
return iRange-1+(int)(((instant+1)/getUnitMillis())%iRange);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<diff&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<diff&&(instant^offset)<0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<offset){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
FieldUtils.verifyValueBounds(this,offset,DateTimeConstants.BCE,DateTimeConstants.CE);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return instant-instant%instant;
}else {
instant+=1;
return instant-instant%iUnitMillis-iUnitMillis;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
instant+=1;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>0){
instant-=1;
return instant-instant%instant+iUnitMillis;
}else {
return instant-instant%iUnitMillis;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
instant-=1;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalInstantException("Illegal instant due to time zone offset transition ("+iZone);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff<=serialVersionUID-instant){
return serialVersionUID;
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID-instant<=diff){
return serialVersionUID;
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalInstantException(serialVersionUID,iZone.getID());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(diff),new IllegalInstantException(serialVersionUID,iZone.getID()).getMessage());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
new IllegalFieldValueException(iField.getType(),Integer.valueOf(diff),new IllegalInstantException(serialVersionUID,iZone.getID()).getMessage()).initCause(new IllegalInstantException(serialVersionUID,iZone.getID()));
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
serialVersionUID=iField.set(localInstant,diff);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
UNKNOWN ASTNode type : catch (IllegalFieldValueException ex) {
  if (monthOfYear != 2 || dayOfMonth != 29) {
    throw ex;
  }
  instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,28,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
  if (instant >= iCutoverMillis) {
    throw ex;
  }
}

========
int offset=this.iZone.getOffset(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 0
TESTING : time_3
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapSummer_addZero
  - org.joda.time.TestDateTimeZoneCutover::testPeriod
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Gaza
Failing tests: 9
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 0
TESTING : time_3
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapSummer_addZero
  - org.joda.time.TestDateTimeZoneCutover::testPeriod
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Gaza
Failing tests: 9
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instantLocal^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instantLocal^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Long.MIN_VALUE cannot be negated");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instantUTC-offset;
if((instantUTC^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instantUTC^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instantUTC-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instantUTC^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=val1-offset;
if((val1^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-val2;
if((instant^diff)<0&&(instant^val2)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((val1^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=val1-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-val2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((val1^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^val2)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return diff;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetToAdd(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=iField.add(instant+diff,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
instant+=offset;
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalInstantException(instant,getZone().getID());
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
instant-=diff;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,offset,ERA_VALUE,ERA_VALUE);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff){
return getWeeksInYear(offset-1);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return 1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff>=instant){
return iTimeField?instant:instant-diff;
}else {
return earlierOrLater?instant+diff:instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return diff<0?-year:year;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return year;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
id=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
convId=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<diff&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<diff&&(instant^offset)<0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return (offset>diff||value<1)?getMaximumValue(instant):maxLessOne;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return maxLessOne;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getWeekyear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return value;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0||offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.get(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.isLeap(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.getLeapAmount(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff<instant){
return prev;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
FieldUtils.verifyValueBounds(this,diff,1,getMaximumValue());
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=transition-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-diff;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if(instant<diff&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff||instant>=nextTransition(serialVersionUID)+serialVersionUID-serialVersionUID){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID==0||diff==0){
return this;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>Long.MIN_VALUE){
return instant-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
return instant;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return (int)((instant-diff)/DateTimeConstants.MILLIS_PER_DAY)+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return yearStart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return MILLIS_PER_DAY;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
diff-=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
FieldUtils.verifyValueBounds(this,offset,1,diff);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
FieldUtils.verifyValueBounds(this,offset,0,getMaximumValue());
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().add(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().addWrapField(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().set(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.get(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().roundFloor(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().roundCeiling(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().roundHalfFloor(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().roundHalfCeiling(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().roundHalfEven(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().remainder(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return iLeapMonth;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(serialVersionUID,"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=super.add(instant,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,get(instant),offset,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-MILLIS_PER_SECOND;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
int diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&diff<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if(instant<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff>Long.MIN_VALUE){
return prev-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getWeekOfWeekyear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diff-=2;
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return position;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
offset++;
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
offset++;
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=getBase().getDateTimeMillis(instant,offset,offset,offset,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,"resulting");
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(instant,"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(instant,"resulting");
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return prev;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return next;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return iUnitMillis;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,offset,getMinimumValue(),getMaximumValue());
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<offset){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(offset==1){
return getYear(instant+DateTimeConstants.MILLIS_PER_WEEK);
}else if(week>51){
return getYear(instant-(2*DateTimeConstants.MILLIS_PER_WEEK));
}else {
return getYear(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.get(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,offset,getMinimumValue(),getMaximumValueForSet(instant,value));
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,DateTimeConstants.BCE,DateTimeConstants.CE);
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-MILLIS_PER_HOUR;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(getOffset(instant-3*DateTimeConstants.MILLIS_PER_HOUR)<=diff){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0){
return DateTimeZone.UTC;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("The offset cannot be zero");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
diff=offset;
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset<(iField.getMinimumValue()+offset)){
offset=field.getMinimumValue()+offset;
}else {
iMin=minValue;
}
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getDivided(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0){
return this;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return wrappedValue;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return thisValue;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return instant%serialVersionUID;
}else {
return (instant+1)%iUnitMillis+iUnitMillis-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("Specified date does not exist");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff>=0){
return instant-instant%instant;
}else {
instant+=1;
return instant-instant%iUnitMillis-iUnitMillis;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
instant+=1;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff>0){
instant-=1;
return instant-instant%instant+iUnitMillis;
}else {
return instant-instant%iUnitMillis;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
instant-=1;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=~i;
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getRemainder(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,offset,offset);
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-floor;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff<=roundCeiling(instant)-instant){
return roundFloor(instant);
}else {
return roundCeiling(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(roundCeiling(instant)-instant<=diff){
return roundCeiling(instant);
}else {
return roundFloor(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getMillisOfDay(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-months;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getOffsetFromLocal(instant);
int diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
int diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getOffsetFromLocal(instant);
int diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff==offset){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=ceiling-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,diff);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant+=getMillisOfDay(instant);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,diff);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant+=getMillisOfDay(instant);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,diff);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant+=getMillisOfDay(instant);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,diff);
instant+=getMillisOfDay(instant);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,diff);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant+=getMillisOfDay(instant);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,diff);
instant+=getMillisOfDay(instant);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,diff);
instant+=getMillisOfDay(instant);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,diff);
instant+=getMillisOfDay(instant);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return max;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff>=instant){
return iField.getMaximumValue(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
diff=iField.set(instant,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
if(diff>=instant){
offset=iField.get(iJulianField.add(iCutover,-1));
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(offset==instant){
return add(instant,i_months);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getMillisOfDay(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getMillisOfDay(instant);
long diff=instant-months;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-months;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getMillisOfDay(instant);
long diff=instant-months;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return min;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff<instant){
return iField.getMinimumValue(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
if(diff<instant){
offset=iField.get(iCutover);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return (int)((instant/getUnitMillis())%offset);
}else {
return iRange-1+(int)(((instant+1)/getUnitMillis())%iRange);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-MILLIS_YEAR_1;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return (int)((diff*CYCLE)+1L);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset<-59||minutesOffset>59){
throw new IllegalArgumentException("Minutes out of range: "+minutesOffset);
}
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return millis;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),new IllegalInstantException(iZone.convertUTCToLocal(instant),iZone.getID()).getMessage());
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),new IllegalInstantException(iZone.convertUTCToLocal(instant),iZone.getID()).getMessage()).initCause(new IllegalInstantException(iZone.convertUTCToLocal(instant),iZone.getID()));
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
serialVersionUID=iField.set(localInstant,offset);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return datePart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return timePart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("Specified date does not exist");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalInstantException(instant,getID());
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return (int)(instant%DateTimeConstants.MILLIS_PER_DAY);
}else {
return (DateTimeConstants.MILLIS_PER_DAY-1)+(int)((instant+1)%DateTimeConstants.MILLIS_PER_DAY);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),null,null);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
instant=iField.set(instant,offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff<-3){
return 7+(int)((daysSince19700101+4)%7);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
daysSince19700101=(instant-(DateTimeConstants.MILLIS_PER_DAY-1))/DateTimeConstants.MILLIS_PER_DAY;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return newInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=periodStart-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
enclosing.iZone=this.iZone;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
enclosing.iOffset=this.iOffset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
enclosing.iSavedFields=this.iSavedFields;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
enclosing.iSavedFieldsCount=this.iSavedFieldsCount;
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=iField.add(instant+diff,serialVersionUID);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetToAdd(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetToAdd(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=iField.add(instant+diff,serialVersionUID);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=iField.add(instant+diff,serialVersionUID);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetToAdd(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=iField.add(instant+diff,serialVersionUID);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=super.add(instant,serialVersionUID);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,get(instant),offset,offset);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().add(instant,serialVersionUID),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().add(instant,offset),"resulting");
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(getWrappedField().add(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(getWrappedField().add(instant,offset),"resulting");
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().add(instant,serialVersionUID),"resulting");
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(getWrappedField().add(instant,serialVersionUID),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(getWrappedField().add(instant,serialVersionUID),"resulting");
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.ZonedChronology,352
org.joda.time.chrono.ZonedChronology,354
org.joda.time.chrono.ZonedChronology,357
org.joda.time.DateTimeZone,931
========
if(instantAdjusted-prev<=instant){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted-prev<=diff){
return prev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted-millis<=diff){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted-prev<=prev){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instantAdjusted-prev<=end){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted-prev<=diff){
return offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instantAdjusted-prev<=MIN_VALUE){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.ZonedChronology,315
========
int offset=getOffsetToAdd(serialVersionUID);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iJulianField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,get(instant),offset,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iGregorianField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iGregorianChronology.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return serialVersionUID-offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return prev-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return next-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant+(value-get(instant))*serialVersionUID;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
FieldUtils.verifyValueBounds(this,value,getMinimumValue(),getMaximumValue());
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetFromLocal(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant-offset)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case ROUND_CEILING :

int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case ROUND_HALF_CEILING :

int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getMillisOfDay(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(value==serialVersionUID){
return add(instant,i_months);
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
FieldUtils.verifyValueBounds(this,value,getMinimumValue(),getMaximumValueForSet(instant,value));
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getWeekyear(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getYear(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
FieldUtils.verifyValueBounds(this,value,1,offset);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
if(instant>=instant){
return iField.getMaximumValue(instant);
}
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getDivided(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getRemainder(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return yearStart-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return MILLIS_PER_DAY-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instant^offset)>=0){
iZone=DateTimeZone.UTC;
offset=0;
adjustedInstant=instant;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=get(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant+(offset-get(instant))*getUnitMillis();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
FieldUtils.verifyValueBounds(this,value,1,getMaximumValue());
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getDayOfWeek(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return instant;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
checkLimits(instant,null);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkLimits(instant,"resulting");
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.setYear(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
if(offset>offset){
setToWeek=maxOutWeeks;
}
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getWeekOfWeekyear(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value>1){
instant-=((long)DateTimeConstants.MILLIS_PER_WEEK)*(wow-1);
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offset==0){
return instant;
}
int offset=getYear(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=field.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=getMillisOfDay(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return instant;
}
int offset=getMillisOfDay(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return instant;
}
long offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return instant;
}
long offset=getMillisOfDay(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=minuteOfHour().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
iZone=DateTimeUtils.getZone(zone);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return (instant+1)%serialVersionUID+iUnitMillis-1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return iUnitMillis-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
if(offset>(31+28)){
if(isLeapYear(value)){
if(!isLeapYear(offset)){
dayOfYear--;
}
}else {
if(isLeapYear(year)){
dayOfYear++;
}
}
}
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant+=offset;
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==1){
return getYear(instant+DateTimeConstants.MILLIS_PER_WEEK);
}else if(week>51){
return getYear(instant-(2*DateTimeConstants.MILLIS_PER_WEEK));
}else {
return value;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return firstWeekMillis1-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return MILLIS_PER_WEEK-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant<instant){
return getWeeksInYear(value-1);
}
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant>=getFirstWeekOfYearMillis(value+1)){
return 1;
}
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
if(instant<instant){
return iField.getMinimumValue(instant);
}
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().monthOfYear().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().monthOfYear().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().monthOfYear().set(instant,offset);
instant=getChronology().dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().monthOfYear().set(instant,offset);
instant=getChronology().dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return iTimeField?instant:instant-serialVersionUID;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return iTimeField?instant+serialVersionUID:instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant<instant||instant>=serialVersionUID){
return instant;
}
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant<instant||instant>=serialVersionUID){
return instant;
}
return iTimeField?instant:instant-serialVersionUID;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant<instant||instant>=serialVersionUID){
return instant;
}
return iTimeField?instant+serialVersionUID:instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 0
TESTING : time_3
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.joda.time.TestMutablePeriod_Updates::testAdd_RInterval2
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_RP_RI1
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_RI_RP1
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int1
  - org.joda.time.TestInterval_Constructors::testConstructor_RP_RI1
  - org.joda.time.TestInterval_Constructors::testConstructor_RI_RP1
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Gaza
Failing tests: 13
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return millis-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().secondOfMinute().set(instant,offset);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().secondOfMinute().set(instant,offset);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().secondOfMinute().set(instant,offset);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().secondOfMinute().set(instant,offset);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=dayOfMonth().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=hourOfDay().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=minuteOfHour().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=minuteOfHour().set(instant,value);
instant=secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=minuteOfHour().set(instant,value);
instant=secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset!=getZone().getOffset(instant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return this;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value==getValue(offset)){
return this;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,get(instant),value,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instant^offset)>=0){
iZone=DateTimeZone.UTC;
offset=0;
adjustedInstant=instant;
}
int offset=getOffset(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
int offset=getOffset(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.ZonedChronology,316
org.joda.time.chrono.ZonedChronology,317
org.joda.time.chrono.BasicYearDateTimeField,60
UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

========
if(months==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(serialVersionUID==0||years==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(duration==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(prev==0){
return prev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(prev==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(years==0){
return prev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(thisWeekyear==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetBefore==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(years==0){
return instant-1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(years==0){
return instant;
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(next==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(yearStart==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sum==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diff==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i_months==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(overlapStart==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(year==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(wyear==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(years==0){
return serialVersionUID-1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i==0){
return serialVersionUID-1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==0){
return prev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==0){
return instant;
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(years==0){
return instant;
return serialVersionUID-1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(years==0){
return instant;
return prev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==0){
return instant;
return serialVersionUID-1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==0){
return instant;
return prev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(years==0){
return iGregorianField;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(years==0){
return iJulianField;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant==0){
return iGregorianField;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant==0){
return iJulianField;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(durationToAdd==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iGapDuration==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(week==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(amount==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(adjustedInstant==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(afterStart==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(years==0){
return diff;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dayOfYear==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(weeks==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(days==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(hours==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(minutes==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(seconds==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(millis==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(years!=0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(oldEra==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(wow==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=iChronology.weekOfWeekyear().roundFloor(instant);
if(years==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(thisDom==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dayToUse==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iDayOfMonth==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.tz.CachedDateTimeZone,202
========
if(iOffset==getOffset(iPeriodStart)){
iOffset=iZoneRef.getOffset(iPeriodStart);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocalFromOriginal==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iOffset!=Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iOffset==iZone){
iOffset=iZoneRef.getOffset(iPeriodStart);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset!=Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iOffset==null){
iOffset=iZoneRef.getOffset(iPeriodStart);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iStandardOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return instantUTC;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==null){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iStandardOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iStandardOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iStandardOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iStandardOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||instant<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||instantUTC<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(serialVersionUID==iPeriodStart||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iPeriodStart=serialVersionUID;
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iStandardOffset==iOffset&&iNameKey.equals(iZone.getNameKey(iPeriodStart))){
System.out.println("*d* Error in "+iZone.getID());
return false;
}
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iStandardOffset==0){
throw new IllegalArgumentException("The offset cannot be zero");
}
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iOffset=iStandardOffset;
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iStandardOffset==0){
throw new IllegalArgumentException("The offset cannot be zero");
}
iOffset=iStandardOffset;
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||iPeriodStart<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null&&millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,iStandardOffset,iOffset,getMaximumValue());
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZone.previousTransition(millis)==millis||iZone.previousTransition(millis)<millis){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZone.previousTransition(millis)==millis||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||iZone.previousTransition(millis)<millis){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||iZone.previousTransition(millis)<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||prev<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
millis=iZone.previousTransition(millis);
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(serialVersionUID-1!=millis){
System.out.println("*r* Error in "+iZone.getID());
return false;
}
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZoneRef.nextTransition(iPeriodStart)==iPeriodStart||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||iNameKey.charAt(iStandardOffset)<='9'){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return offsetPrev;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(iPeriodStart);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||instant<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||instantUTC<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==null){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getNameKey(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iStandardOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iStandardOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iStandardOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iStandardOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getStandardOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iStandardOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getStandardOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iStandardOffset;
}
return iNextInfo.getStandardOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iStandardOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iStandardOffset;
}
return iNextInfo.getStandardOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(serialVersionUID==millis||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
millis=serialVersionUID;
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iStandardOffset==iOffset&&iNameKey.equals(iZone.getNameKey(millis))){
System.out.println("*d* Error in "+iZone.getID());
return false;
}
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNameKey!=null){
return name;
}
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iStandardOffset==0){
throw new IllegalArgumentException("The offset cannot be zero");
}
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iOffset=iStandardOffset;
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iStandardOffset==0){
throw new IllegalArgumentException("The offset cannot be zero");
}
iOffset=iStandardOffset;
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||iPeriodStart<iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||iPeriodStart<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return FieldUtils.safeAdd(FieldUtils.safeMultiply(-iPeriodStart,1000),-millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return FieldUtils.safeAdd(FieldUtils.safeMultiply(iPeriodStart,1000),millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,iStandardOffset,iOffset,getMaximumValue());
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null&&millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZone.previousTransition(millis)==millis||iZone.previousTransition(millis)<iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZone.previousTransition(millis)==millis||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||iZone.previousTransition(millis)<iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||iZone.previousTransition(millis)<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||prev<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZoneRef.nextTransition(iPeriodStart)==iPeriodStart||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||iNameKey.charAt(iStandardOffset)<='9'){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return Minutes.minutes(FieldUtils.safeToInt(millis/DateTimeConstants.MILLIS_PER_MINUTE));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.minutes(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
checkYearsAndMonths("Minutes");
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
millis+=((long)getSeconds())*DateTimeConstants.MILLIS_PER_SECOND;
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(minutes,getMinutes());
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(minutes,((long)getHours())*((long)DateTimeConstants.MINUTES_PER_HOUR));
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(minutes,((long)getDays())*((long)DateTimeConstants.MINUTES_PER_DAY));
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(minutes,((long)getWeeks())*((long)DateTimeConstants.MINUTES_PER_WEEK));
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return Hours.hours(FieldUtils.safeToInt(millis/DateTimeConstants.MILLIS_PER_HOUR));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.hours(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
checkYearsAndMonths("Hours");
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
millis+=((long)getMinutes())*DateTimeConstants.MILLIS_PER_MINUTE;
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(hours,getHours());
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(hours,((long)getDays())*((long)DateTimeConstants.HOURS_PER_DAY));
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(hours,((long)getWeeks())*((long)DateTimeConstants.HOURS_PER_WEEK));
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return Days.days(FieldUtils.safeToInt(millis/DateTimeConstants.MILLIS_PER_DAY));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.days(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
checkYearsAndMonths("Days");
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
millis+=((long)getHours())*DateTimeConstants.MILLIS_PER_HOUR;
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(days,getDays());
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(days,((long)getWeeks())*((long)DateTimeConstants.DAYS_PER_WEEK));
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
millis+=((long)getSeconds())*DateTimeConstants.MILLIS_PER_SECOND;
millis+=((long)getMinutes())*DateTimeConstants.MILLIS_PER_MINUTE;
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return Weeks.weeks(FieldUtils.safeToInt(iPeriodStart));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.weeks(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
checkYearsAndMonths("Weeks");
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
millis+=((long)getDays())*DateTimeConstants.MILLIS_PER_DAY;
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
millis+=((long)getSeconds())*DateTimeConstants.MILLIS_PER_SECOND;
millis+=((long)getHours())*DateTimeConstants.MILLIS_PER_HOUR;
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
millis+=((long)getMinutes())*DateTimeConstants.MILLIS_PER_MINUTE;
millis+=((long)getHours())*DateTimeConstants.MILLIS_PER_HOUR;
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
millis+=((long)getSeconds())*DateTimeConstants.MILLIS_PER_SECOND;
millis+=((long)getMinutes())*DateTimeConstants.MILLIS_PER_MINUTE;
millis+=((long)getHours())*DateTimeConstants.MILLIS_PER_HOUR;
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNameKey==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.joda.time.chrono.ZonedChronology,341
UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

========
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
UNKNOWN ASTNode type : catch (IllegalFieldValueException ex) {
  if (monthOfYear != 2 || dayOfMonth != 29) {
    throw ex;
  }
  instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,28,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
  if (instant >= iCutoverMillis) {
    throw ex;
  }
}

Timeout!
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy/src/test/java/org/joda/time/TestMutableDateTime_Adds.java

# FAILING TESTS: 1
TIMEOUT : 3600000
===========
locations= [<org.joda.time.MutableDateTime,785>, <org.joda.time.MutableDateTime,786>, <org.joda.time.chrono.ZonedChronology,351>, <org.joda.time.chrono.ZonedChronology,352>, <org.joda.time.chrono.ZonedChronology,354>, <org.joda.time.chrono.ZonedChronology,357>, <org.joda.time.DateTimeZone,931>, <org.joda.time.chrono.ZonedChronology,315>, <org.joda.time.chrono.ZonedChronology,316>, <org.joda.time.chrono.ZonedChronology,317>, <org.joda.time.chrono.BasicYearDateTimeField,60>, <org.joda.time.tz.CachedDateTimeZone,202>, <org.joda.time.chrono.ZonedChronology,341>, <org.joda.time.chrono.ZonedChronology,342>, <org.joda.time.chrono.ZonedChronology,344>, <org.joda.time.chrono.ZonedChronology,347>, <org.joda.time.field.ImpreciseDateTimeField,183>, <org.joda.time.chrono.BasicGJChronology,190>, <org.joda.time.chrono.BasicMonthOfYearDateTimeField,94>, <org.joda.time.MutableDateTime,351>, <org.joda.time.MutableDateTime,353>, <org.joda.time.format.DateTimeFormatterBuilder,1962>, <org.joda.time.format.DateTimeFormatterBuilder,1963>, <org.joda.time.format.DateTimeFormatterBuilder,1964>, <org.joda.time.format.DateTimeFormatterBuilder,1971>, <org.joda.time.format.FormatUtils,68>, <org.joda.time.format.FormatUtils,74>, <org.joda.time.format.FormatUtils,75>, <org.joda.time.format.FormatUtils,77>, <org.joda.time.format.FormatUtils,78>, <org.joda.time.MutableDateTime,639>, <org.joda.time.MutableDateTime,640>, <org.joda.time.MutableDateTime,660>, <org.joda.time.MutableDateTime,661>, <org.joda.time.MutableDateTime,702>, <org.joda.time.MutableDateTime,703>, <org.joda.time.MutableDateTime,723>, <org.joda.time.MutableDateTime,724>, <org.joda.time.MutableDateTime,764>, <org.joda.time.MutableDateTime,765>, <org.joda.time.base.BaseDateTime,223>, <org.joda.time.base.BaseDateTime,225>, <org.joda.time.format.DateTimeFormatterBuilder,2158>, <org.joda.time.format.DateTimeFormatterBuilder,2157>, <org.joda.time.format.DateTimeFormatterBuilder,2164>, <org.joda.time.format.DateTimeFormatterBuilder,2165>, <org.joda.time.format.DateTimeFormatterBuilder,2166>, <org.joda.time.format.DateTimeFormatterBuilder,2169>, <org.joda.time.format.DateTimeFormatterBuilder,2170>, <org.joda.time.format.DateTimeFormatterBuilder,2174>, <org.joda.time.format.DateTimeFormatterBuilder,2175>, <org.joda.time.format.DateTimeFormatterBuilder,2176>, <org.joda.time.format.DateTimeFormatterBuilder,2178>, <org.joda.time.format.DateTimeFormatterBuilder,2179>, <org.joda.time.format.DateTimeFormatterBuilder,2182>, <org.joda.time.format.DateTimeFormatterBuilder,2183>, <org.joda.time.format.DateTimeFormatterBuilder,2184>, <org.joda.time.field.PreciseDurationDateTimeField,128>, <org.joda.time.format.ISODateTimeFormat,725>, <org.joda.time.format.DateTimeFormatterBuilder,1913>, <org.joda.time.format.DateTimeFormatterBuilder,1916>, <org.joda.time.format.DateTimeFormatterBuilder,1917>, <org.joda.time.format.DateTimeFormatterBuilder,1946>, <org.joda.time.format.DateTimeFormatterBuilder,1947>, <org.joda.time.format.DateTimeFormatterBuilder,1951>, <org.joda.time.format.DateTimeFormatterBuilder,1959>, <org.joda.time.format.DateTimeFormatterBuilder,1961>, <org.joda.time.MutableDateTime,1229>, <org.joda.time.field.PreciseDurationDateTimeField,127>, <org.joda.time.format.DateTimeFormatterBuilder,2667>, <org.joda.time.format.DateTimeFormatterBuilder,2150>, <org.joda.time.format.DateTimeFormatterBuilder,2153>, <org.joda.time.DateTimeFieldType,522>, <org.joda.time.format.FormatUtils,63>, <org.joda.time.format.FormatUtils,64>, <org.joda.time.format.FormatUtils,66>, <org.joda.time.format.FormatUtils,80>, <org.joda.time.format.FormatUtils,82>, <org.joda.time.format.FormatUtils,83>, <org.joda.time.format.FormatUtils,87>, <org.joda.time.format.FormatUtils,90>, <org.joda.time.format.FormatUtils,67>, <org.joda.time.format.DateTimeFormatterBuilder,1475>, <org.joda.time.format.DateTimeFormatterBuilder,1476>, <org.joda.time.format.DateTimeFormatterBuilder,1479>, <org.joda.time.format.DateTimeFormatterBuilder,1480>, <org.joda.time.format.DateTimeFormatterBuilder,1218>, <org.joda.time.format.DateTimeFormatterBuilder,1219>, <org.joda.time.format.DateTimeFormatterBuilder,2654>, <org.joda.time.format.DateTimeFormatterBuilder,2660>, <org.joda.time.format.DateTimeFormatterBuilder,2661>, <org.joda.time.format.DateTimeFormatterBuilder,2665>, <org.joda.time.format.DateTimeFormatterBuilder,2670>, <org.joda.time.format.DateTimeFormatterBuilder,2671>, <org.joda.time.format.DateTimeFormatterBuilder,2672>, <org.joda.time.format.DateTimeFormatterBuilder,2674>, <org.joda.time.format.DateTimeFormatter,469>, <org.joda.time.format.DateTimeFormatter,470>, <org.joda.time.format.DateTimeFormatter,471>, <org.joda.time.format.DateTimeFormatter,472>, <org.joda.time.format.DateTimeFormatter,592>, <org.joda.time.format.DateTimeFormatter,593>, <org.joda.time.format.DateTimeFormatter,594>, <org.joda.time.format.FormatUtils,50>, <org.joda.time.format.FormatUtils,62>, <org.joda.time.format.FormatUtils,92>, <org.joda.time.format.DateTimeFormatter,628>, <org.joda.time.format.DateTimeFormatter,629>, <org.joda.time.format.DateTimeFormatter,632>, <org.joda.time.format.DateTimeFormatter,633>, <org.joda.time.format.DateTimeFormatter,634>, <org.joda.time.format.DateTimeFormatter,635>, <org.joda.time.format.DateTimeFormatter,641>, <org.joda.time.format.DateTimeFormatter,642>, <org.joda.time.format.DateTimeFormatter,667>, <org.joda.time.format.DateTimeFormatter,668>, <org.joda.time.format.DateTimeFormatter,671>, <org.joda.time.DateTimeUtils,199>, <org.joda.time.DateTimeUtils,200>, <org.joda.time.DateTimeUtils,203>, <org.joda.time.DateTimeFieldType,524>, <org.joda.time.DateTimeUtils,196>, <org.joda.time.DateTimeFieldType,520>, <org.joda.time.DurationFieldType,292>, <org.joda.time.DateTimeFieldType,516>, <org.joda.time.MutableDateTime,636>, <org.joda.time.chrono.BasicGJChronology,121>, <org.joda.time.chrono.BasicGJChronology,140>, <org.joda.time.format.FormatUtils,31>, <org.joda.time.DateTimeUtils,181>, <org.joda.time.chrono.BasicGJChronology,188>, <org.joda.time.DateTimeUtils,178>, <org.joda.time.chrono.GregorianChronology,213>, <org.joda.time.format.DateTimeFormatterBuilder,153>, <org.joda.time.format.DateTimeFormatterBuilder,154>, <org.joda.time.format.DateTimeFormatterBuilder,155>, <org.joda.time.format.DateTimeFormatterBuilder,217>, <org.joda.time.format.DateTimeFormatterBuilder,220>, <org.joda.time.format.DateTimeFormatterBuilder,257>, <org.joda.time.format.DateTimeFormatterBuilder,258>, <org.joda.time.format.DateTimeFormatterBuilder,305>, <org.joda.time.format.DateTimeFormatterBuilder,308>, <org.joda.time.format.DateTimeFormatterBuilder,311>, <org.joda.time.format.DateTimeFormatterBuilder,312>, <org.joda.time.format.DateTimeFormatterBuilder,319>, <org.joda.time.format.DateTimeFormatterBuilder,321>, <org.joda.time.format.DateTimeFormatterBuilder,322>, <org.joda.time.format.DateTimeFormatterBuilder,326>, <org.joda.time.format.DateTimeFormatterBuilder,328>, <org.joda.time.format.DateTimeFormatterBuilder,345>, <org.joda.time.format.DateTimeFormatterBuilder,346>, <org.joda.time.format.DateTimeFormatterBuilder,347>, <org.joda.time.format.DateTimeFormatterBuilder,357>, <org.joda.time.format.DateTimeFormatterBuilder,360>, <org.joda.time.format.DateTimeFormatterBuilder,383>, <org.joda.time.format.DateTimeFormatterBuilder,384>, <org.joda.time.format.DateTimeFormatterBuilder,385>, <org.joda.time.format.DateTimeFormatterBuilder,386>, <org.joda.time.format.DateTimeFormatterBuilder,464>, <org.joda.time.format.DateTimeFormatterBuilder,467>, <org.joda.time.format.DateTimeFormatterBuilder,470>, <org.joda.time.format.DateTimeFormatterBuilder,570>, <org.joda.time.format.DateTimeFormatterBuilder,573>, <org.joda.time.format.DateTimeFormatterBuilder,576>, <org.joda.time.format.DateTimeFormatterBuilder,579>, <org.joda.time.format.DateTimeFormatterBuilder,597>, <org.joda.time.format.DateTimeFormatterBuilder,614>, <org.joda.time.format.DateTimeFormatterBuilder,631>, <org.joda.time.format.DateTimeFormatterBuilder,685>, <org.joda.time.format.DateTimeFormatterBuilder,765>, <org.joda.time.format.DateTimeFormatterBuilder,785>, <org.joda.time.format.DateTimeFormatterBuilder,795>, <org.joda.time.format.DateTimeFormatterBuilder,807>, <org.joda.time.format.DateTimeFormatterBuilder,1091>, <org.joda.time.format.DateTimeFormatterBuilder,1150>, <org.joda.time.format.DateTimeFormatterBuilder,1171>, <org.joda.time.format.DateTimeFormatterBuilder,2623>, <org.joda.time.format.DateTimeFormatterBuilder,2624>, <org.joda.time.format.DateTimeFormatterBuilder,2730>, <org.joda.time.format.DateTimeFormatterBuilder,2763>, <org.joda.time.format.DateTimeFormatterBuilder,2770>, <org.joda.time.format.DateTimeFormatterBuilder,2778>, <org.joda.time.format.DateTimeFormatterBuilder,2779>, <org.joda.time.format.DateTimeFormatterBuilder,2780>, <org.joda.time.format.DateTimeFormatterBuilder,2783>, <org.joda.time.format.DateTimeFormatter,164>, <org.joda.time.format.DateTimeFormatter,182>, <org.joda.time.format.ISODateTimeFormat,662>, <org.joda.time.format.ISODateTimeFormat,784>, <org.joda.time.format.ISODateTimeFormat,995>, <org.joda.time.format.ISODateTimeFormat,1033>, <org.joda.time.format.ISODateTimeFormat,1138>, <org.joda.time.format.ISODateTimeFormat,1139>, <org.joda.time.format.ISODateTimeFormat,1140>, <org.joda.time.format.ISODateTimeFormat,1141>, <org.joda.time.format.ISODateTimeFormat,1142>, <org.joda.time.format.ISODateTimeFormat,1143>, <org.joda.time.format.ISODateTimeFormat,1144>, <org.joda.time.format.ISODateTimeFormat,1145>, <org.joda.time.format.ISODateTimeFormat,1146>]
======================org.joda.time.MutableDateTime,785
========
setEndMillis(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setStartMillis(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setChronology(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
add(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
setValues(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.MutableDateTime,786
Find no block!
org.joda.time.chrono.ZonedChronology,351
UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantUTC^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantUTC^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((val1^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((val1^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^val2)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Long.MIN_VALUE cannot be negated");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("Specified date does not exist");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==null){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return 1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0||offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==Integer.MIN_VALUE){
return subtract(instant,(long)value);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff){
return getWeeksInYear(offset-1);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&diff<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&instant<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instant<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(diff<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>Long.MIN_VALUE){
return instant-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
return instant;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==offset){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID<=diff){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset==diff){
return add(instant,i_months);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff){
return iField.getMinimumValue(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.getMaximumValue(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant==0||diff==0){
return this;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return (int)(instant%DateTimeConstants.MILLIS_PER_DAY);
}else {
return (DateTimeConstants.MILLIS_PER_DAY-1)+(int)((instant+1)%DateTimeConstants.MILLIS_PER_DAY);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<diff&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff||instant>=serialVersionUID){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("The offset cannot be zero");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset==0){
return DateTimeZone.UTC;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0){
return this;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID<diff){
return prev;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,0,getMaximumValue());
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&offset<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("Positive hours must not have negative minutes: "+offset);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&offset<0){
throw new IllegalArgumentException("Positive hours must not have negative minutes: "+offset);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>Long.MIN_VALUE){
return prev-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.get(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.isLeap(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.getLeapAmount(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==1){
return getYear(instant+DateTimeConstants.MILLIS_PER_WEEK);
}else if(week>51){
return getYear(instant-(2*DateTimeConstants.MILLIS_PER_WEEK));
}else {
return getYear(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff>=serialVersionUID){
return iTimeField?instant:instant-diff;
}else {
return earlierOrLater?instant+diff:instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,1,diff);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getYearMonthDayMillis(offset,1,diff);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant+=offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
instant=getYearMonthDayMillis(offset,1,diff);
instant+=offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return instant%diff;
}else {
return (instant+1)%iUnitMillis+iUnitMillis-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),null,null);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant+diff<instant){
instant=gregorianToJulian(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant-diff>=instant){
instant=julianToGregorian(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
id=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
convId=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID<-3){
return 7+(int)((daysSince19700101+4)%7);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
daysSince19700101=(instant-(DateTimeConstants.MILLIS_PER_DAY-1))/DateTimeConstants.MILLIS_PER_DAY;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return (int)((instant/getUnitMillis())%diff);
}else {
return iRange-1+(int)(((instant+1)/getUnitMillis())%iRange);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<diff&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<diff&&(instant^offset)<0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<offset){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
FieldUtils.verifyValueBounds(this,offset,DateTimeConstants.BCE,DateTimeConstants.CE);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return instant-instant%instant;
}else {
instant+=1;
return instant-instant%iUnitMillis-iUnitMillis;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
instant+=1;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>0){
instant-=1;
return instant-instant%instant+iUnitMillis;
}else {
return instant-instant%iUnitMillis;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
instant-=1;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalInstantException("Illegal instant due to time zone offset transition ("+iZone);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff<=serialVersionUID-instant){
return serialVersionUID;
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID-instant<=diff){
return serialVersionUID;
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalInstantException(serialVersionUID,iZone.getID());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(diff),new IllegalInstantException(serialVersionUID,iZone.getID()).getMessage());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
new IllegalFieldValueException(iField.getType(),Integer.valueOf(diff),new IllegalInstantException(serialVersionUID,iZone.getID()).getMessage()).initCause(new IllegalInstantException(serialVersionUID,iZone.getID()));
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
serialVersionUID=iField.set(localInstant,diff);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
UNKNOWN ASTNode type : catch (IllegalFieldValueException ex) {
  if (monthOfYear != 2 || dayOfMonth != 29) {
    throw ex;
  }
  instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,28,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
  if (instant >= iCutoverMillis) {
    throw ex;
  }
}

========
int offset=this.iZone.getOffset(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 0
TESTING : time_3
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapSummer_addZero
  - org.joda.time.TestDateTimeZoneCutover::testPeriod
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Gaza
Failing tests: 9
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 0
TESTING : time_3
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapSummer_addZero
  - org.joda.time.TestDateTimeZoneCutover::testPeriod
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Gaza
Failing tests: 9
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instantLocal^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instantLocal^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Long.MIN_VALUE cannot be negated");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instantUTC-offset;
if((instantUTC^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instantUTC^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instantUTC-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instantUTC^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=val1-offset;
if((val1^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-val2;
if((instant^diff)<0&&(instant^val2)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((val1^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=val1-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-val2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((val1^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^val2)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return diff;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetToAdd(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=iField.add(instant+diff,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
instant+=offset;
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalInstantException(instant,getZone().getID());
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
instant-=diff;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,offset,ERA_VALUE,ERA_VALUE);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff){
return getWeeksInYear(offset-1);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return 1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff>=instant){
return iTimeField?instant:instant-diff;
}else {
return earlierOrLater?instant+diff:instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return diff<0?-year:year;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return year;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
id=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
convId=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<diff&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<diff&&(instant^offset)<0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return (offset>diff||value<1)?getMaximumValue(instant):maxLessOne;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return maxLessOne;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getWeekyear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return value;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0||offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.get(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.isLeap(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.getLeapAmount(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff<instant){
return prev;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
FieldUtils.verifyValueBounds(this,diff,1,getMaximumValue());
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=transition-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-diff;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if(instant<diff&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff||instant>=nextTransition(serialVersionUID)+serialVersionUID-serialVersionUID){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID==0||diff==0){
return this;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>Long.MIN_VALUE){
return instant-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
return instant;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return (int)((instant-diff)/DateTimeConstants.MILLIS_PER_DAY)+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return yearStart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return MILLIS_PER_DAY;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
diff-=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
FieldUtils.verifyValueBounds(this,offset,1,diff);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
FieldUtils.verifyValueBounds(this,offset,0,getMaximumValue());
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().add(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().addWrapField(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().set(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.get(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().roundFloor(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().roundCeiling(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().roundHalfFloor(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().roundHalfCeiling(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().roundHalfEven(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().remainder(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return iLeapMonth;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(serialVersionUID,"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=super.add(instant,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,get(instant),offset,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-MILLIS_PER_SECOND;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
int diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&diff<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if(instant<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff>Long.MIN_VALUE){
return prev-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getWeekOfWeekyear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diff-=2;
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return position;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
offset++;
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
offset++;
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=getBase().getDateTimeMillis(instant,offset,offset,offset,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,"resulting");
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(instant,"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(instant,"resulting");
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return prev;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return next;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return iUnitMillis;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,offset,getMinimumValue(),getMaximumValue());
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<offset){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Timeout!
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy/src/test/java/org/joda/time/TestMutableDateTime_Adds.java

# FAILING TESTS: 1
TIMEOUT : 3600000
===========
locations= [<org.joda.time.MutableDateTime,785>, <org.joda.time.MutableDateTime,786>, <org.joda.time.chrono.ZonedChronology,351>, <org.joda.time.chrono.ZonedChronology,352>, <org.joda.time.chrono.ZonedChronology,354>, <org.joda.time.chrono.ZonedChronology,357>, <org.joda.time.DateTimeZone,931>, <org.joda.time.chrono.ZonedChronology,315>, <org.joda.time.chrono.ZonedChronology,316>, <org.joda.time.chrono.ZonedChronology,317>, <org.joda.time.chrono.BasicYearDateTimeField,60>, <org.joda.time.tz.CachedDateTimeZone,202>, <org.joda.time.chrono.ZonedChronology,341>, <org.joda.time.chrono.ZonedChronology,342>, <org.joda.time.chrono.ZonedChronology,344>, <org.joda.time.chrono.ZonedChronology,347>, <org.joda.time.field.ImpreciseDateTimeField,183>, <org.joda.time.chrono.BasicGJChronology,190>, <org.joda.time.chrono.BasicMonthOfYearDateTimeField,94>, <org.joda.time.MutableDateTime,351>, <org.joda.time.MutableDateTime,353>, <org.joda.time.format.DateTimeFormatterBuilder,1962>, <org.joda.time.format.DateTimeFormatterBuilder,1963>, <org.joda.time.format.DateTimeFormatterBuilder,1964>, <org.joda.time.format.DateTimeFormatterBuilder,1971>, <org.joda.time.format.FormatUtils,68>, <org.joda.time.format.FormatUtils,74>, <org.joda.time.format.FormatUtils,75>, <org.joda.time.format.FormatUtils,77>, <org.joda.time.format.FormatUtils,78>, <org.joda.time.MutableDateTime,639>, <org.joda.time.MutableDateTime,640>, <org.joda.time.MutableDateTime,660>, <org.joda.time.MutableDateTime,661>, <org.joda.time.MutableDateTime,702>, <org.joda.time.MutableDateTime,703>, <org.joda.time.MutableDateTime,723>, <org.joda.time.MutableDateTime,724>, <org.joda.time.MutableDateTime,764>, <org.joda.time.MutableDateTime,765>, <org.joda.time.base.BaseDateTime,223>, <org.joda.time.base.BaseDateTime,225>, <org.joda.time.format.DateTimeFormatterBuilder,2158>, <org.joda.time.format.DateTimeFormatterBuilder,2157>, <org.joda.time.format.DateTimeFormatterBuilder,2164>, <org.joda.time.format.DateTimeFormatterBuilder,2165>, <org.joda.time.format.DateTimeFormatterBuilder,2166>, <org.joda.time.format.DateTimeFormatterBuilder,2169>, <org.joda.time.format.DateTimeFormatterBuilder,2170>, <org.joda.time.format.DateTimeFormatterBuilder,2174>, <org.joda.time.format.DateTimeFormatterBuilder,2175>, <org.joda.time.format.DateTimeFormatterBuilder,2176>, <org.joda.time.format.DateTimeFormatterBuilder,2178>, <org.joda.time.format.DateTimeFormatterBuilder,2179>, <org.joda.time.format.DateTimeFormatterBuilder,2182>, <org.joda.time.format.DateTimeFormatterBuilder,2183>, <org.joda.time.format.DateTimeFormatterBuilder,2184>, <org.joda.time.field.PreciseDurationDateTimeField,128>, <org.joda.time.format.ISODateTimeFormat,725>, <org.joda.time.format.DateTimeFormatterBuilder,1913>, <org.joda.time.format.DateTimeFormatterBuilder,1916>, <org.joda.time.format.DateTimeFormatterBuilder,1917>, <org.joda.time.format.DateTimeFormatterBuilder,1946>, <org.joda.time.format.DateTimeFormatterBuilder,1947>, <org.joda.time.format.DateTimeFormatterBuilder,1951>, <org.joda.time.format.DateTimeFormatterBuilder,1959>, <org.joda.time.format.DateTimeFormatterBuilder,1961>, <org.joda.time.MutableDateTime,1229>, <org.joda.time.field.PreciseDurationDateTimeField,127>, <org.joda.time.format.DateTimeFormatterBuilder,2667>, <org.joda.time.format.DateTimeFormatterBuilder,2150>, <org.joda.time.format.DateTimeFormatterBuilder,2153>, <org.joda.time.DateTimeFieldType,522>, <org.joda.time.format.FormatUtils,63>, <org.joda.time.format.FormatUtils,64>, <org.joda.time.format.FormatUtils,66>, <org.joda.time.format.FormatUtils,80>, <org.joda.time.format.FormatUtils,82>, <org.joda.time.format.FormatUtils,83>, <org.joda.time.format.FormatUtils,87>, <org.joda.time.format.FormatUtils,90>, <org.joda.time.format.FormatUtils,67>, <org.joda.time.format.DateTimeFormatterBuilder,1475>, <org.joda.time.format.DateTimeFormatterBuilder,1476>, <org.joda.time.format.DateTimeFormatterBuilder,1479>, <org.joda.time.format.DateTimeFormatterBuilder,1480>, <org.joda.time.format.DateTimeFormatterBuilder,1218>, <org.joda.time.format.DateTimeFormatterBuilder,1219>, <org.joda.time.format.DateTimeFormatterBuilder,2654>, <org.joda.time.format.DateTimeFormatterBuilder,2660>, <org.joda.time.format.DateTimeFormatterBuilder,2661>, <org.joda.time.format.DateTimeFormatterBuilder,2665>, <org.joda.time.format.DateTimeFormatterBuilder,2670>, <org.joda.time.format.DateTimeFormatterBuilder,2671>, <org.joda.time.format.DateTimeFormatterBuilder,2672>, <org.joda.time.format.DateTimeFormatterBuilder,2674>, <org.joda.time.format.DateTimeFormatter,469>, <org.joda.time.format.DateTimeFormatter,470>, <org.joda.time.format.DateTimeFormatter,471>, <org.joda.time.format.DateTimeFormatter,472>, <org.joda.time.format.DateTimeFormatter,592>, <org.joda.time.format.DateTimeFormatter,593>, <org.joda.time.format.DateTimeFormatter,594>, <org.joda.time.format.FormatUtils,50>, <org.joda.time.format.FormatUtils,62>, <org.joda.time.format.FormatUtils,92>, <org.joda.time.format.DateTimeFormatter,628>, <org.joda.time.format.DateTimeFormatter,629>, <org.joda.time.format.DateTimeFormatter,632>, <org.joda.time.format.DateTimeFormatter,633>, <org.joda.time.format.DateTimeFormatter,634>, <org.joda.time.format.DateTimeFormatter,635>, <org.joda.time.format.DateTimeFormatter,641>, <org.joda.time.format.DateTimeFormatter,642>, <org.joda.time.format.DateTimeFormatter,667>, <org.joda.time.format.DateTimeFormatter,668>, <org.joda.time.format.DateTimeFormatter,671>, <org.joda.time.DateTimeUtils,199>, <org.joda.time.DateTimeUtils,200>, <org.joda.time.DateTimeUtils,203>, <org.joda.time.DateTimeFieldType,524>, <org.joda.time.DateTimeUtils,196>, <org.joda.time.DateTimeFieldType,520>, <org.joda.time.DurationFieldType,292>, <org.joda.time.DateTimeFieldType,516>, <org.joda.time.MutableDateTime,636>, <org.joda.time.chrono.BasicGJChronology,121>, <org.joda.time.chrono.BasicGJChronology,140>, <org.joda.time.format.FormatUtils,31>, <org.joda.time.DateTimeUtils,181>, <org.joda.time.chrono.BasicGJChronology,188>, <org.joda.time.DateTimeUtils,178>, <org.joda.time.chrono.GregorianChronology,213>, <org.joda.time.format.DateTimeFormatterBuilder,153>, <org.joda.time.format.DateTimeFormatterBuilder,154>, <org.joda.time.format.DateTimeFormatterBuilder,155>, <org.joda.time.format.DateTimeFormatterBuilder,217>, <org.joda.time.format.DateTimeFormatterBuilder,220>, <org.joda.time.format.DateTimeFormatterBuilder,257>, <org.joda.time.format.DateTimeFormatterBuilder,258>, <org.joda.time.format.DateTimeFormatterBuilder,305>, <org.joda.time.format.DateTimeFormatterBuilder,308>, <org.joda.time.format.DateTimeFormatterBuilder,311>, <org.joda.time.format.DateTimeFormatterBuilder,312>, <org.joda.time.format.DateTimeFormatterBuilder,319>, <org.joda.time.format.DateTimeFormatterBuilder,321>, <org.joda.time.format.DateTimeFormatterBuilder,322>, <org.joda.time.format.DateTimeFormatterBuilder,326>, <org.joda.time.format.DateTimeFormatterBuilder,328>, <org.joda.time.format.DateTimeFormatterBuilder,345>, <org.joda.time.format.DateTimeFormatterBuilder,346>, <org.joda.time.format.DateTimeFormatterBuilder,347>, <org.joda.time.format.DateTimeFormatterBuilder,357>, <org.joda.time.format.DateTimeFormatterBuilder,360>, <org.joda.time.format.DateTimeFormatterBuilder,383>, <org.joda.time.format.DateTimeFormatterBuilder,384>, <org.joda.time.format.DateTimeFormatterBuilder,385>, <org.joda.time.format.DateTimeFormatterBuilder,386>, <org.joda.time.format.DateTimeFormatterBuilder,464>, <org.joda.time.format.DateTimeFormatterBuilder,467>, <org.joda.time.format.DateTimeFormatterBuilder,470>, <org.joda.time.format.DateTimeFormatterBuilder,570>, <org.joda.time.format.DateTimeFormatterBuilder,573>, <org.joda.time.format.DateTimeFormatterBuilder,576>, <org.joda.time.format.DateTimeFormatterBuilder,579>, <org.joda.time.format.DateTimeFormatterBuilder,597>, <org.joda.time.format.DateTimeFormatterBuilder,614>, <org.joda.time.format.DateTimeFormatterBuilder,631>, <org.joda.time.format.DateTimeFormatterBuilder,685>, <org.joda.time.format.DateTimeFormatterBuilder,765>, <org.joda.time.format.DateTimeFormatterBuilder,785>, <org.joda.time.format.DateTimeFormatterBuilder,795>, <org.joda.time.format.DateTimeFormatterBuilder,807>, <org.joda.time.format.DateTimeFormatterBuilder,1091>, <org.joda.time.format.DateTimeFormatterBuilder,1150>, <org.joda.time.format.DateTimeFormatterBuilder,1171>, <org.joda.time.format.DateTimeFormatterBuilder,2623>, <org.joda.time.format.DateTimeFormatterBuilder,2624>, <org.joda.time.format.DateTimeFormatterBuilder,2730>, <org.joda.time.format.DateTimeFormatterBuilder,2763>, <org.joda.time.format.DateTimeFormatterBuilder,2770>, <org.joda.time.format.DateTimeFormatterBuilder,2778>, <org.joda.time.format.DateTimeFormatterBuilder,2779>, <org.joda.time.format.DateTimeFormatterBuilder,2780>, <org.joda.time.format.DateTimeFormatterBuilder,2783>, <org.joda.time.format.DateTimeFormatter,164>, <org.joda.time.format.DateTimeFormatter,182>, <org.joda.time.format.ISODateTimeFormat,662>, <org.joda.time.format.ISODateTimeFormat,784>, <org.joda.time.format.ISODateTimeFormat,995>, <org.joda.time.format.ISODateTimeFormat,1033>, <org.joda.time.format.ISODateTimeFormat,1138>, <org.joda.time.format.ISODateTimeFormat,1139>, <org.joda.time.format.ISODateTimeFormat,1140>, <org.joda.time.format.ISODateTimeFormat,1141>, <org.joda.time.format.ISODateTimeFormat,1142>, <org.joda.time.format.ISODateTimeFormat,1143>, <org.joda.time.format.ISODateTimeFormat,1144>, <org.joda.time.format.ISODateTimeFormat,1145>, <org.joda.time.format.ISODateTimeFormat,1146>]
======================org.joda.time.MutableDateTime,785
========
setEndMillis(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setStartMillis(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setChronology(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
add(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
setValues(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.MutableDateTime,786
Find no block!
org.joda.time.chrono.ZonedChronology,351
UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantUTC^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantUTC^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((val1^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((val1^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^val2)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Long.MIN_VALUE cannot be negated");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("Specified date does not exist");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==null){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return 1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0||offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==Integer.MIN_VALUE){
return subtract(instant,(long)value);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff){
return getWeeksInYear(offset-1);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&diff<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&instant<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instant<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(diff<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>Long.MIN_VALUE){
return instant-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
return instant;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==offset){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID<=diff){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset==diff){
return add(instant,i_months);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff){
return iField.getMinimumValue(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.getMaximumValue(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant==0||diff==0){
return this;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return (int)(instant%DateTimeConstants.MILLIS_PER_DAY);
}else {
return (DateTimeConstants.MILLIS_PER_DAY-1)+(int)((instant+1)%DateTimeConstants.MILLIS_PER_DAY);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<diff&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff||instant>=serialVersionUID){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("The offset cannot be zero");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset==0){
return DateTimeZone.UTC;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0){
return this;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID<diff){
return prev;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,0,getMaximumValue());
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&offset<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("Positive hours must not have negative minutes: "+offset);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&offset<0){
throw new IllegalArgumentException("Positive hours must not have negative minutes: "+offset);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>Long.MIN_VALUE){
return prev-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.get(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.isLeap(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.getLeapAmount(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==1){
return getYear(instant+DateTimeConstants.MILLIS_PER_WEEK);
}else if(week>51){
return getYear(instant-(2*DateTimeConstants.MILLIS_PER_WEEK));
}else {
return getYear(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff>=serialVersionUID){
return iTimeField?instant:instant-diff;
}else {
return earlierOrLater?instant+diff:instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,1,diff);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getYearMonthDayMillis(offset,1,diff);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant+=offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
instant=getYearMonthDayMillis(offset,1,diff);
instant+=offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return instant%diff;
}else {
return (instant+1)%iUnitMillis+iUnitMillis-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),null,null);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant+diff<instant){
instant=gregorianToJulian(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant-diff>=instant){
instant=julianToGregorian(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
id=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
convId=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID<-3){
return 7+(int)((daysSince19700101+4)%7);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
daysSince19700101=(instant-(DateTimeConstants.MILLIS_PER_DAY-1))/DateTimeConstants.MILLIS_PER_DAY;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return (int)((instant/getUnitMillis())%diff);
}else {
return iRange-1+(int)(((instant+1)/getUnitMillis())%iRange);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<diff&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<diff&&(instant^offset)<0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<offset){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
FieldUtils.verifyValueBounds(this,offset,DateTimeConstants.BCE,DateTimeConstants.CE);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return instant-instant%instant;
}else {
instant+=1;
return instant-instant%iUnitMillis-iUnitMillis;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
instant+=1;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>0){
instant-=1;
return instant-instant%instant+iUnitMillis;
}else {
return instant-instant%iUnitMillis;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
instant-=1;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalInstantException("Illegal instant due to time zone offset transition ("+iZone);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff<=serialVersionUID-instant){
return serialVersionUID;
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID-instant<=diff){
return serialVersionUID;
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalInstantException(serialVersionUID,iZone.getID());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(diff),new IllegalInstantException(serialVersionUID,iZone.getID()).getMessage());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
new IllegalFieldValueException(iField.getType(),Integer.valueOf(diff),new IllegalInstantException(serialVersionUID,iZone.getID()).getMessage()).initCause(new IllegalInstantException(serialVersionUID,iZone.getID()));
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
serialVersionUID=iField.set(localInstant,diff);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
UNKNOWN ASTNode type : catch (IllegalFieldValueException ex) {
  if (monthOfYear != 2 || dayOfMonth != 29) {
    throw ex;
  }
  instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,28,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
  if (instant >= iCutoverMillis) {
    throw ex;
  }
}

========
int offset=this.iZone.getOffset(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 0
TESTING : time_3
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapSummer_addZero
  - org.joda.time.TestDateTimeZoneCutover::testPeriod
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Gaza
Failing tests: 9
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 0
TESTING : time_3
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapSummer_addZero
  - org.joda.time.TestDateTimeZoneCutover::testPeriod
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Gaza
Failing tests: 9
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instantLocal^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instantLocal^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Long.MIN_VALUE cannot be negated");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instantUTC-offset;
if((instantUTC^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instantUTC^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instantUTC-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instantUTC^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=val1-offset;
if((val1^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-val2;
if((instant^diff)<0&&(instant^val2)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((val1^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=val1-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-val2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((val1^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^val2)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return diff;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetToAdd(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=iField.add(instant+diff,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
instant+=offset;
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalInstantException(instant,getZone().getID());
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
instant-=diff;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,offset,ERA_VALUE,ERA_VALUE);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff){
return getWeeksInYear(offset-1);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return 1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff>=instant){
return iTimeField?instant:instant-diff;
}else {
return earlierOrLater?instant+diff:instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return diff<0?-year:year;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return year;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
id=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
convId=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<diff&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<diff&&(instant^offset)<0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return (offset>diff||value<1)?getMaximumValue(instant):maxLessOne;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return maxLessOne;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getWeekyear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return value;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0||offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.get(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.isLeap(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.getLeapAmount(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff<instant){
return prev;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
FieldUtils.verifyValueBounds(this,diff,1,getMaximumValue());
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=transition-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-diff;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if(instant<diff&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff||instant>=nextTransition(serialVersionUID)+serialVersionUID-serialVersionUID){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID==0||diff==0){
return this;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>Long.MIN_VALUE){
return instant-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
return instant;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return (int)((instant-diff)/DateTimeConstants.MILLIS_PER_DAY)+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return yearStart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return MILLIS_PER_DAY;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
diff-=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
FieldUtils.verifyValueBounds(this,offset,1,diff);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
FieldUtils.verifyValueBounds(this,offset,0,getMaximumValue());
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().add(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().addWrapField(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().set(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.get(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().roundFloor(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().roundCeiling(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().roundHalfFloor(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().roundHalfCeiling(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().roundHalfEven(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().remainder(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return iLeapMonth;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(serialVersionUID,"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=super.add(instant,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,get(instant),offset,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-MILLIS_PER_SECOND;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
int diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&diff<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if(instant<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff>Long.MIN_VALUE){
return prev-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getWeekOfWeekyear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diff-=2;
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return position;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
offset++;
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
offset++;
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=getBase().getDateTimeMillis(instant,offset,offset,offset,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,"resulting");
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(instant,"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(instant,"resulting");
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return prev;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return next;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return iUnitMillis;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,offset,getMinimumValue(),getMaximumValue());
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<offset){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(offset==1){
return getYear(instant+DateTimeConstants.MILLIS_PER_WEEK);
}else if(week>51){
return getYear(instant-(2*DateTimeConstants.MILLIS_PER_WEEK));
}else {
return getYear(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.get(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,offset,getMinimumValue(),getMaximumValueForSet(instant,value));
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,DateTimeConstants.BCE,DateTimeConstants.CE);
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-MILLIS_PER_HOUR;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(getOffset(instant-3*DateTimeConstants.MILLIS_PER_HOUR)<=diff){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0){
return DateTimeZone.UTC;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("The offset cannot be zero");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
diff=offset;
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset<(iField.getMinimumValue()+offset)){
offset=field.getMinimumValue()+offset;
}else {
iMin=minValue;
}
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getDivided(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0){
return this;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return wrappedValue;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return thisValue;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return instant%serialVersionUID;
}else {
return (instant+1)%iUnitMillis+iUnitMillis-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("Specified date does not exist");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff>=0){
return instant-instant%instant;
}else {
instant+=1;
return instant-instant%iUnitMillis-iUnitMillis;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
instant+=1;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff>0){
instant-=1;
return instant-instant%instant+iUnitMillis;
}else {
return instant-instant%iUnitMillis;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
instant-=1;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=~i;
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getRemainder(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,offset,offset);
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-floor;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff<=roundCeiling(instant)-instant){
return roundFloor(instant);
}else {
return roundCeiling(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(roundCeiling(instant)-instant<=diff){
return roundCeiling(instant);
}else {
return roundFloor(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getMillisOfDay(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-months;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getOffsetFromLocal(instant);
int diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
int diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getOffsetFromLocal(instant);
int diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff==offset){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=ceiling-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,diff);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant+=getMillisOfDay(instant);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,diff);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant+=getMillisOfDay(instant);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,diff);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant+=getMillisOfDay(instant);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,diff);
instant+=getMillisOfDay(instant);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,diff);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant+=getMillisOfDay(instant);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,diff);
instant+=getMillisOfDay(instant);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,diff);
instant+=getMillisOfDay(instant);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,diff);
instant+=getMillisOfDay(instant);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return max;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff>=instant){
return iField.getMaximumValue(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
diff=iField.set(instant,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
if(diff>=instant){
offset=iField.get(iJulianField.add(iCutover,-1));
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(offset==instant){
return add(instant,i_months);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getMillisOfDay(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getMillisOfDay(instant);
long diff=instant-months;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-months;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getMillisOfDay(instant);
long diff=instant-months;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return min;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff<instant){
return iField.getMinimumValue(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
if(diff<instant){
offset=iField.get(iCutover);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return (int)((instant/getUnitMillis())%offset);
}else {
return iRange-1+(int)(((instant+1)/getUnitMillis())%iRange);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-MILLIS_YEAR_1;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return (int)((diff*CYCLE)+1L);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset<-59||minutesOffset>59){
throw new IllegalArgumentException("Minutes out of range: "+minutesOffset);
}
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return millis;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),new IllegalInstantException(iZone.convertUTCToLocal(instant),iZone.getID()).getMessage());
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),new IllegalInstantException(iZone.convertUTCToLocal(instant),iZone.getID()).getMessage()).initCause(new IllegalInstantException(iZone.convertUTCToLocal(instant),iZone.getID()));
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
serialVersionUID=iField.set(localInstant,offset);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return datePart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return timePart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("Specified date does not exist");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalInstantException(instant,getID());
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return (int)(instant%DateTimeConstants.MILLIS_PER_DAY);
}else {
return (DateTimeConstants.MILLIS_PER_DAY-1)+(int)((instant+1)%DateTimeConstants.MILLIS_PER_DAY);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),null,null);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
instant=iField.set(instant,offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff<-3){
return 7+(int)((daysSince19700101+4)%7);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
daysSince19700101=(instant-(DateTimeConstants.MILLIS_PER_DAY-1))/DateTimeConstants.MILLIS_PER_DAY;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return newInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=periodStart-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
enclosing.iZone=this.iZone;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
enclosing.iOffset=this.iOffset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
enclosing.iSavedFields=this.iSavedFields;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
enclosing.iSavedFieldsCount=this.iSavedFieldsCount;
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=iField.add(instant+diff,serialVersionUID);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetToAdd(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetToAdd(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=iField.add(instant+diff,serialVersionUID);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=iField.add(instant+diff,serialVersionUID);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetToAdd(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=iField.add(instant+diff,serialVersionUID);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=super.add(instant,serialVersionUID);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,get(instant),offset,offset);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().add(instant,serialVersionUID),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().add(instant,offset),"resulting");
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(getWrappedField().add(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(getWrappedField().add(instant,offset),"resulting");
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().add(instant,serialVersionUID),"resulting");
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(getWrappedField().add(instant,serialVersionUID),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(getWrappedField().add(instant,serialVersionUID),"resulting");
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.ZonedChronology,352
org.joda.time.chrono.ZonedChronology,354
org.joda.time.chrono.ZonedChronology,357
org.joda.time.DateTimeZone,931
========
if(instantAdjusted-prev<=instant){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted-prev<=diff){
return prev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted-millis<=diff){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted-prev<=prev){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instantAdjusted-prev<=end){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted-prev<=diff){
return offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instantAdjusted-prev<=MIN_VALUE){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.ZonedChronology,315
========
int offset=getOffsetToAdd(serialVersionUID);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iJulianField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,get(instant),offset,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iGregorianField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iGregorianChronology.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return serialVersionUID-offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return prev-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return next-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant+(value-get(instant))*serialVersionUID;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
FieldUtils.verifyValueBounds(this,value,getMinimumValue(),getMaximumValue());
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetFromLocal(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant-offset)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case ROUND_CEILING :

int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case ROUND_HALF_CEILING :

int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getMillisOfDay(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(value==serialVersionUID){
return add(instant,i_months);
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
FieldUtils.verifyValueBounds(this,value,getMinimumValue(),getMaximumValueForSet(instant,value));
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getWeekyear(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getYear(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
FieldUtils.verifyValueBounds(this,value,1,offset);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
if(instant>=instant){
return iField.getMaximumValue(instant);
}
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getDivided(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getRemainder(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return yearStart-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return MILLIS_PER_DAY-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instant^offset)>=0){
iZone=DateTimeZone.UTC;
offset=0;
adjustedInstant=instant;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=get(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant+(offset-get(instant))*getUnitMillis();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
FieldUtils.verifyValueBounds(this,value,1,getMaximumValue());
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getDayOfWeek(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return instant;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
checkLimits(instant,null);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkLimits(instant,"resulting");
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.setYear(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
if(offset>offset){
setToWeek=maxOutWeeks;
}
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getWeekOfWeekyear(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value>1){
instant-=((long)DateTimeConstants.MILLIS_PER_WEEK)*(wow-1);
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offset==0){
return instant;
}
int offset=getYear(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=field.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=getMillisOfDay(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return instant;
}
int offset=getMillisOfDay(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return instant;
}
long offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return instant;
}
long offset=getMillisOfDay(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=minuteOfHour().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
iZone=DateTimeUtils.getZone(zone);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return (instant+1)%serialVersionUID+iUnitMillis-1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return iUnitMillis-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
if(offset>(31+28)){
if(isLeapYear(value)){
if(!isLeapYear(offset)){
dayOfYear--;
}
}else {
if(isLeapYear(year)){
dayOfYear++;
}
}
}
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant+=offset;
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==1){
return getYear(instant+DateTimeConstants.MILLIS_PER_WEEK);
}else if(week>51){
return getYear(instant-(2*DateTimeConstants.MILLIS_PER_WEEK));
}else {
return value;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return firstWeekMillis1-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return MILLIS_PER_WEEK-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant<instant){
return getWeeksInYear(value-1);
}
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant>=getFirstWeekOfYearMillis(value+1)){
return 1;
}
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
if(instant<instant){
return iField.getMinimumValue(instant);
}
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().monthOfYear().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().monthOfYear().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().monthOfYear().set(instant,offset);
instant=getChronology().dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().monthOfYear().set(instant,offset);
instant=getChronology().dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return iTimeField?instant:instant-serialVersionUID;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return iTimeField?instant+serialVersionUID:instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant<instant||instant>=serialVersionUID){
return instant;
}
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant<instant||instant>=serialVersionUID){
return instant;
}
return iTimeField?instant:instant-serialVersionUID;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant<instant||instant>=serialVersionUID){
return instant;
}
return iTimeField?instant+serialVersionUID:instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 0
TESTING : time_3
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.joda.time.TestMutablePeriod_Updates::testAdd_RInterval2
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_RP_RI1
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_RI_RP1
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int1
  - org.joda.time.TestInterval_Constructors::testConstructor_RP_RI1
  - org.joda.time.TestInterval_Constructors::testConstructor_RI_RP1
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Gaza
Failing tests: 13
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return millis-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().secondOfMinute().set(instant,offset);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().secondOfMinute().set(instant,offset);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().secondOfMinute().set(instant,offset);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().secondOfMinute().set(instant,offset);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=dayOfMonth().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=hourOfDay().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=minuteOfHour().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=minuteOfHour().set(instant,value);
instant=secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=minuteOfHour().set(instant,value);
instant=secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset!=getZone().getOffset(instant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return this;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value==getValue(offset)){
return this;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,get(instant),value,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instant^offset)>=0){
iZone=DateTimeZone.UTC;
offset=0;
adjustedInstant=instant;
}
int offset=getOffset(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
int offset=getOffset(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.ZonedChronology,316
org.joda.time.chrono.ZonedChronology,317
org.joda.time.chrono.BasicYearDateTimeField,60
UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

========
if(months==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(serialVersionUID==0||years==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(duration==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(prev==0){
return prev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(prev==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(years==0){
return prev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(thisWeekyear==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetBefore==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(years==0){
return instant-1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(years==0){
return instant;
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(next==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(yearStart==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sum==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diff==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i_months==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(overlapStart==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(year==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(wyear==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(years==0){
return serialVersionUID-1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i==0){
return serialVersionUID-1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==0){
return prev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==0){
return instant;
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(years==0){
return instant;
return serialVersionUID-1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(years==0){
return instant;
return prev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==0){
return instant;
return serialVersionUID-1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==0){
return instant;
return prev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(years==0){
return iGregorianField;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(years==0){
return iJulianField;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant==0){
return iGregorianField;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant==0){
return iJulianField;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(durationToAdd==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iGapDuration==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(week==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(amount==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(adjustedInstant==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(afterStart==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(years==0){
return diff;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dayOfYear==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(weeks==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(days==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(hours==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(minutes==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(seconds==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(millis==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(years!=0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(oldEra==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(wow==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=iChronology.weekOfWeekyear().roundFloor(instant);
if(years==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(thisDom==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dayToUse==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iDayOfMonth==0){
return instant;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.tz.CachedDateTimeZone,202
========
if(iOffset==getOffset(iPeriodStart)){
iOffset=iZoneRef.getOffset(iPeriodStart);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocalFromOriginal==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iOffset!=Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iOffset==iZone){
iOffset=iZoneRef.getOffset(iPeriodStart);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset!=Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iOffset==null){
iOffset=iZoneRef.getOffset(iPeriodStart);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iStandardOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return instantUTC;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==null){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iStandardOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iStandardOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iStandardOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iStandardOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||instant<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||instantUTC<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(serialVersionUID==iPeriodStart||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iPeriodStart=serialVersionUID;
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iStandardOffset==iOffset&&iNameKey.equals(iZone.getNameKey(iPeriodStart))){
System.out.println("*d* Error in "+iZone.getID());
return false;
}
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iStandardOffset==0){
throw new IllegalArgumentException("The offset cannot be zero");
}
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iOffset=iStandardOffset;
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iStandardOffset==0){
throw new IllegalArgumentException("The offset cannot be zero");
}
iOffset=iStandardOffset;
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||iPeriodStart<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null&&millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,iStandardOffset,iOffset,getMaximumValue());
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZone.previousTransition(millis)==millis||iZone.previousTransition(millis)<millis){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZone.previousTransition(millis)==millis||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||iZone.previousTransition(millis)<millis){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||iZone.previousTransition(millis)<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||prev<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
millis=iZone.previousTransition(millis);
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(serialVersionUID-1!=millis){
System.out.println("*r* Error in "+iZone.getID());
return false;
}
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZoneRef.nextTransition(iPeriodStart)==iPeriodStart||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||iNameKey.charAt(iStandardOffset)<='9'){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return offsetPrev;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(iPeriodStart);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||instant<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||instantUTC<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==null){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getNameKey(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iStandardOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iStandardOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iStandardOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iStandardOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getStandardOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iStandardOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getStandardOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iStandardOffset;
}
return iNextInfo.getStandardOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iStandardOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iStandardOffset;
}
return iNextInfo.getStandardOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(serialVersionUID==millis||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
millis=serialVersionUID;
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iStandardOffset==iOffset&&iNameKey.equals(iZone.getNameKey(millis))){
System.out.println("*d* Error in "+iZone.getID());
return false;
}
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNameKey!=null){
return name;
}
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iStandardOffset==0){
throw new IllegalArgumentException("The offset cannot be zero");
}
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iOffset=iStandardOffset;
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iStandardOffset==0){
throw new IllegalArgumentException("The offset cannot be zero");
}
iOffset=iStandardOffset;
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||iPeriodStart<iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||iPeriodStart<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return FieldUtils.safeAdd(FieldUtils.safeMultiply(-iPeriodStart,1000),-millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return FieldUtils.safeAdd(FieldUtils.safeMultiply(iPeriodStart,1000),millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,iStandardOffset,iOffset,getMaximumValue());
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null&&millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZone.previousTransition(millis)==millis||iZone.previousTransition(millis)<iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZone.previousTransition(millis)==millis||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||iZone.previousTransition(millis)<iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||iZone.previousTransition(millis)<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||prev<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZoneRef.nextTransition(iPeriodStart)==iPeriodStart||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||iNameKey.charAt(iStandardOffset)<='9'){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return Minutes.minutes(FieldUtils.safeToInt(millis/DateTimeConstants.MILLIS_PER_MINUTE));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.minutes(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
checkYearsAndMonths("Minutes");
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
millis+=((long)getSeconds())*DateTimeConstants.MILLIS_PER_SECOND;
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(minutes,getMinutes());
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(minutes,((long)getHours())*((long)DateTimeConstants.MINUTES_PER_HOUR));
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(minutes,((long)getDays())*((long)DateTimeConstants.MINUTES_PER_DAY));
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(minutes,((long)getWeeks())*((long)DateTimeConstants.MINUTES_PER_WEEK));
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return Hours.hours(FieldUtils.safeToInt(millis/DateTimeConstants.MILLIS_PER_HOUR));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.hours(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
checkYearsAndMonths("Hours");
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
millis+=((long)getMinutes())*DateTimeConstants.MILLIS_PER_MINUTE;
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(hours,getHours());
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(hours,((long)getDays())*((long)DateTimeConstants.HOURS_PER_DAY));
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(hours,((long)getWeeks())*((long)DateTimeConstants.HOURS_PER_WEEK));
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return Days.days(FieldUtils.safeToInt(millis/DateTimeConstants.MILLIS_PER_DAY));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.days(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
checkYearsAndMonths("Days");
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
millis+=((long)getHours())*DateTimeConstants.MILLIS_PER_HOUR;
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(days,getDays());
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(days,((long)getWeeks())*((long)DateTimeConstants.DAYS_PER_WEEK));
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
millis+=((long)getSeconds())*DateTimeConstants.MILLIS_PER_SECOND;
millis+=((long)getMinutes())*DateTimeConstants.MILLIS_PER_MINUTE;
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return Weeks.weeks(FieldUtils.safeToInt(iPeriodStart));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.weeks(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
checkYearsAndMonths("Weeks");
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
millis+=((long)getDays())*DateTimeConstants.MILLIS_PER_DAY;
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
millis+=((long)getSeconds())*DateTimeConstants.MILLIS_PER_SECOND;
millis+=((long)getHours())*DateTimeConstants.MILLIS_PER_HOUR;
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
millis+=((long)getMinutes())*DateTimeConstants.MILLIS_PER_MINUTE;
millis+=((long)getHours())*DateTimeConstants.MILLIS_PER_HOUR;
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
millis+=((long)getSeconds())*DateTimeConstants.MILLIS_PER_SECOND;
millis+=((long)getMinutes())*DateTimeConstants.MILLIS_PER_MINUTE;
millis+=((long)getHours())*DateTimeConstants.MILLIS_PER_HOUR;
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNameKey==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.joda.time.chrono.ZonedChronology,341
UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

========
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantUTC^sum)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantUTC^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^sum)<0&&(instantLocal^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instantLocal^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((val1^sum)<0&&(val1^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^serialVersionUID)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((val1^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(val1^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^val2)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^serialVersionUID)>=0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Long.MIN_VALUE cannot be negated");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalArgumentException("Specified date does not exist");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==null){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return 1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==0||offset==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==Integer.MIN_VALUE){
return subtract(instant,(long)value);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant<sum){
return getWeeksInYear(offset-1);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<0&&sum>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instant<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&sum>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(sum<0&&instant>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(sum<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&instant>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>Long.MIN_VALUE){
return instant-1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
return instant;
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==offset){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(serialVersionUID<=sum){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==sum){
return add(instant,i_months);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant<sum){
return iField.getMinimumValue(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.getMaximumValue(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant==0||sum==0){
return this;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=0){
return (int)(instant%DateTimeConstants.MILLIS_PER_DAY);
}else {
return (DateTimeConstants.MILLIS_PER_DAY-1)+(int)((instant+1)%DateTimeConstants.MILLIS_PER_DAY);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<sum||instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instant<sum&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant<sum||instant>=serialVersionUID){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<sum&&instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalArgumentException("The offset cannot be zero");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==0){
return DateTimeZone.UTC;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==0){
return this;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(serialVersionUID<sum){
return prev;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,0,getMaximumValue());
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalArgumentException("Positive hours must not have negative minutes: "+offset);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>Long.MIN_VALUE){
return prev-1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.get(instant);
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.isLeap(instant);
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.getLeapAmount(instant);
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==1){
return getYear(instant+DateTimeConstants.MILLIS_PER_WEEK);
}else if(week>51){
return getYear(instant-(2*DateTimeConstants.MILLIS_PER_WEEK));
}else {
return getYear(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,1,sum);
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getYearMonthDayMillis(offset,1,sum);
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant+=offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
instant=getYearMonthDayMillis(offset,1,sum);
instant+=offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=0){
return instant%sum;
}else {
return (instant+1)%iUnitMillis+iUnitMillis-1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),null,null);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant+sum<instant){
instant=gregorianToJulian(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant-sum>=instant){
instant=julianToGregorian(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
id=printOffset(offset);
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
convId=printOffset(offset);
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(serialVersionUID<-3){
return 7+(int)((daysSince19700101+4)%7);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
daysSince19700101=(instant-(DateTimeConstants.MILLIS_PER_DAY-1))/DateTimeConstants.MILLIS_PER_DAY;
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ3_time3_5_0/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Timeout!
