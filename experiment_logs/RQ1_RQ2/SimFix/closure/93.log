=================================================
Project : closure_93	start : 19/09/02 17:41
Current failed test : com.google.javascript.jscomp.ProcessClosurePrimitivesTest::testProvideInIndependentModules4 | 19/09/02 17:41
Mon Sep 02 17:42:37 EDT 2019 Mon Sep 02 17:42:37 EDT 2019 : com.google.javascript.rhino.Node,175=>Find no block
Mon Sep 02 17:42:38 EDT 2019 com.google.javascript.rhino.Node,195
Mon Sep 02 17:42:47 EDT 2019 com.google.javascript.rhino.Node,220
Mon Sep 02 17:42:55 EDT 2019 com.google.javascript.rhino.Node,222
Mon Sep 02 17:43:04 EDT 2019 com.google.javascript.rhino.Node,225
Mon Sep 02 17:43:12 EDT 2019 com.google.javascript.rhino.Node,228
Mon Sep 02 17:43:20 EDT 2019 com.google.javascript.rhino.Node,843
Mon Sep 02 17:51:24 EDT 2019 com.google.javascript.rhino.Node,844
Mon Sep 02 17:51:25 EDT 2019 com.google.javascript.rhino.Node,845
Mon Sep 02 17:51:26 EDT 2019 com.google.javascript.rhino.Node,848
Mon Sep 02 17:51:27 EDT 2019 com.google.javascript.rhino.Node,849
Mon Sep 02 17:51:27 EDT 2019 com.google.javascript.rhino.Node,850
Mon Sep 02 17:51:28 EDT 2019 com.google.javascript.rhino.Node,851
Mon Sep 02 17:51:29 EDT 2019 com.google.javascript.rhino.Node,854
Mon Sep 02 17:51:29 EDT 2019 com.google.javascript.rhino.Node,855
Mon Sep 02 17:51:30 EDT 2019 com.google.javascript.rhino.Node,908
Mon Sep 02 17:51:33 EDT 2019 com.google.javascript.rhino.Node,916
Mon Sep 02 17:53:43 EDT 2019 com.google.javascript.rhino.Node,917
Mon Sep 02 17:53:44 EDT 2019 com.google.javascript.rhino.Node,918
Mon Sep 02 17:53:44 EDT 2019 com.google.javascript.rhino.Node,929
Mon Sep 02 19:21:01 EDT 2019 com.google.javascript.rhino.Node,930
Mon Sep 02 19:21:02 EDT 2019 com.google.javascript.rhino.Node,931
Mon Sep 02 19:21:21 EDT 2019 com.google.javascript.rhino.Node,932
Mon Sep 02 19:21:21 EDT 2019 com.google.javascript.rhino.Node,933
Mon Sep 02 19:21:22 EDT 2019 com.google.javascript.rhino.Node,941
Mon Sep 02 19:21:23 EDT 2019 com.google.javascript.rhino.Node,963
Mon Sep 02 19:21:23 EDT 2019 com.google.javascript.rhino.Node,964
Mon Sep 02 19:21:24 EDT 2019 com.google.javascript.rhino.Node,965
Mon Sep 02 19:21:25 EDT 2019 com.google.javascript.rhino.Node,966
Mon Sep 02 19:21:25 EDT 2019 com.google.javascript.rhino.Node,967
Mon Sep 02 19:21:26 EDT 2019 com.google.javascript.rhino.Node,971
Mon Sep 02 19:21:27 EDT 2019 com.google.javascript.rhino.Node,972
Mon Sep 02 19:21:33 EDT 2019 com.google.javascript.rhino.Node,973
Mon Sep 02 19:21:34 EDT 2019 com.google.javascript.rhino.Node,974
Mon Sep 02 19:30:19 EDT 2019 com.google.javascript.rhino.Node,975
Mon Sep 02 19:30:19 EDT 2019 com.google.javascript.rhino.Node,976
Mon Sep 02 19:37:21 EDT 2019 com.google.javascript.rhino.Node,977
Mon Sep 02 19:43:36 EDT 2019 com.google.javascript.rhino.Node,978
Mon Sep 02 19:50:28 EDT 2019 Mon Sep 02 19:50:28 EDT 2019 : com.google.javascript.rhino.Node,980=>Find no block
Mon Sep 02 19:50:29 EDT 2019 com.google.javascript.rhino.Node,1016
Mon Sep 02 19:52:58 EDT 2019 com.google.javascript.rhino.Node,1017
Mon Sep 02 19:52:59 EDT 2019 com.google.javascript.rhino.Node,1018
Mon Sep 02 19:53:00 EDT 2019 com.google.javascript.rhino.Node,1020
Mon Sep 02 19:53:00 EDT 2019 com.google.javascript.rhino.Node,1024
Mon Sep 02 20:08:17 EDT 2019 com.google.javascript.rhino.Node,1025
Mon Sep 02 20:08:18 EDT 2019 com.google.javascript.rhino.Node,1029
Mon Sep 02 20:10:15 EDT 2019 com.google.javascript.rhino.Node,1030
Mon Sep 02 20:10:16 EDT 2019 com.google.javascript.rhino.Node,1031
Mon Sep 02 20:10:17 EDT 2019 com.google.javascript.rhino.Node,1032
Mon Sep 02 20:10:17 EDT 2019 com.google.javascript.rhino.Node,1033
Mon Sep 02 20:10:18 EDT 2019 com.google.javascript.rhino.Node,1034
Mon Sep 02 20:10:19 EDT 2019 Mon Sep 02 20:10:19 EDT 2019 : com.google.javascript.rhino.Node,1039=>Find no block
Mon Sep 02 20:10:19 EDT 2019 com.google.javascript.rhino.Node,1043
Mon Sep 02 20:10:22 EDT 2019 com.google.javascript.rhino.Node,1048
Mon Sep 02 20:10:34 EDT 2019 com.google.javascript.rhino.Node,1049
Mon Sep 02 20:10:34 EDT 2019 com.google.javascript.rhino.Node,1050
Mon Sep 02 20:10:35 EDT 2019 com.google.javascript.rhino.Node,1057
Mon Sep 02 20:10:38 EDT 2019 Mon Sep 02 20:10:38 EDT 2019 : com.google.javascript.rhino.Node,1058=>Find no block
Mon Sep 02 20:10:39 EDT 2019 com.google.javascript.rhino.Node,1063
Mon Sep 02 20:18:44 EDT 2019 com.google.javascript.rhino.Node,1064
Mon Sep 02 20:18:44 EDT 2019 com.google.javascript.rhino.Node,1066
Mon Sep 02 20:58:20 EDT 2019 com.google.javascript.rhino.Node,1067
Mon Sep 02 20:58:21 EDT 2019 Mon Sep 02 20:58:21 EDT 2019 : com.google.javascript.rhino.Node,1068=>Find no block
Mon Sep 02 20:58:21 EDT 2019 com.google.javascript.rhino.Node,1069
Mon Sep 02 20:58:22 EDT 2019 com.google.javascript.rhino.Node,1071
Mon Sep 02 20:58:23 EDT 2019 Mon Sep 02 20:58:23 EDT 2019 : com.google.javascript.rhino.Node,1070=>Find no block
Mon Sep 02 20:58:23 EDT 2019 Mon Sep 02 20:58:23 EDT 2019 : com.google.javascript.rhino.Node,1074=>Find no block
Mon Sep 02 20:58:24 EDT 2019 com.google.javascript.rhino.Node,1369
Mon Sep 02 20:58:27 EDT 2019 com.google.javascript.rhino.jstype.PrototypeObjectType,330
Mon Sep 02 21:19:01 EDT 2019 com.google.javascript.rhino.jstype.PrototypeObjectType,332
Mon Sep 02 21:20:56 EDT 2019 Mon Sep 02 21:20:56 EDT 2019 : com.google.javascript.rhino.jstype.PrototypeObjectType,333=>Find no block
Mon Sep 02 21:20:57 EDT 2019 com.google.javascript.rhino.jstype.PrototypeObjectType,334
Mon Sep 02 21:20:58 EDT 2019 com.google.javascript.rhino.jstype.PrototypeObjectType,337
Mon Sep 02 21:20:58 EDT 2019 Mon Sep 02 21:20:58 EDT 2019 : com.google.javascript.rhino.jstype.PrototypeObjectType,336=>Find no block
Mon Sep 02 21:20:59 EDT 2019 com.google.javascript.rhino.jstype.PrototypeObjectType,340
Mon Sep 02 21:33:33 EDT 2019 com.google.javascript.rhino.jstype.PrototypeObjectType,341
Mon Sep 02 21:41:23 EDT 2019 com.google.javascript.rhino.jstype.PrototypeObjectType,343
Mon Sep 02 21:41:24 EDT 2019 com.google.javascript.rhino.jstype.PrototypeObjectType,344
Mon Sep 02 21:41:24 EDT 2019 com.google.javascript.rhino.jstype.PrototypeObjectType,360
Mon Sep 02 21:53:03 EDT 2019 com.google.javascript.rhino.jstype.PrototypeObjectType,361
Mon Sep 02 21:53:03 EDT 2019 com.google.javascript.jscomp.ProcessClosurePrimitives,796

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(indexOfDot!=-1){
compiler.getNodeForCodeInsertion(minimumModule).addChildToBack(replacementNode);
}else {
ProvidedName parentName=providedNames.get(namespace.substring(0,indexOfDot));
Preconditions.checkNotNull(parentName);
Preconditions.checkNotNull(parentName.replacementNode);
parentName.replacementNode.getParent().addChildAfter(replacementNode,parentName.replacementNode);
}

Time : 19/09/02 21:53
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
compiler.reportCodeChange();
if(indexOfDot!=-1){
compiler.getNodeForCodeInsertion(minimumModule).addChildToBack(replacementNode);
}else {
ProvidedName parentName=providedNames.get(namespace.substring(0,indexOfDot));
Preconditions.checkNotNull(parentName);
Preconditions.checkNotNull(parentName.replacementNode);
parentName.replacementNode.getParent().addChildAfter(replacementNode,parentName.replacementNode);
}

Time : 19/09/02 21:59
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(indexOfDot!=-1){
compiler.getNodeForCodeInsertion(minimumModule).addChildToBack(replacementNode);
}else {
ProvidedName parentName=providedNames.get(namespace.substring(0,indexOfDot));
Preconditions.checkNotNull(parentName);
Preconditions.checkNotNull(parentName.replacementNode);
parentName.replacementNode.getParent().addChildAfter(candidateDefinition,parentName.replacementNode);
}

Time : 19/09/02 22:01
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(indexOfDot!=-1){
compiler.getNodeForCodeInsertion(minimumModule).addChildToBack(replacementNode);
}else {
ProvidedName parentName=providedNames.get(namespace.substring(0,indexOfDot));
Preconditions.checkNotNull(parentName);
Preconditions.checkNotNull(parentName.replacementNode);
parentName.replacementNode.getParent().addChildAfter(replacementNode,replacementNode);
}

Time : 19/09/02 22:02
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(indexOfDot!=-1){
compiler.getNodeForCodeInsertion(minimumModule).addChildToBack(replacementNode);
}else {
ProvidedName parentName=providedNames.get(namespace.substring(0,indexOfDot));
Preconditions.checkNotNull(parentName);
Preconditions.checkNotNull(parentName.replacementNode);
parentName.replacementNode.getParent().addChildAfter(candidateDefinition,replacementNode);
}

Time : 19/09/02 22:03
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
compiler.reportCodeChange();
if(indexOfDot!=-1){
compiler.getNodeForCodeInsertion(minimumModule).addChildToBack(replacementNode);
}else {
ProvidedName parentName=providedNames.get(namespace.substring(0,indexOfDot));
Preconditions.checkNotNull(parentName);
Preconditions.checkNotNull(parentName.replacementNode);
parentName.replacementNode.getParent().addChildAfter(candidateDefinition,parentName.replacementNode);
}

Time : 19/09/02 22:05
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
compiler.reportCodeChange();
if(indexOfDot!=-1){
compiler.getNodeForCodeInsertion(minimumModule).addChildToBack(replacementNode);
}else {
ProvidedName parentName=providedNames.get(namespace.substring(0,indexOfDot));
Preconditions.checkNotNull(parentName);
Preconditions.checkNotNull(parentName.replacementNode);
parentName.replacementNode.getParent().addChildAfter(replacementNode,replacementNode);
}

Time : 19/09/02 22:06
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
compiler.reportCodeChange();
if(indexOfDot!=-1){
compiler.getNodeForCodeInsertion(minimumModule).addChildToBack(replacementNode);
}else {
ProvidedName parentName=providedNames.get(namespace.substring(0,indexOfDot));
Preconditions.checkNotNull(parentName);
Preconditions.checkNotNull(parentName.replacementNode);
parentName.replacementNode.getParent().addChildAfter(candidateDefinition,replacementNode);
}

Time : 19/09/02 22:07
----------------------------------------
Mon Sep 02 22:14:18 EDT 2019 com.google.javascript.jscomp.ProcessClosurePrimitives,798
Mon Sep 02 22:14:19 EDT 2019 com.google.javascript.jscomp.ProcessClosurePrimitives,799
Mon Sep 02 22:14:20 EDT 2019 com.google.javascript.jscomp.ProcessClosurePrimitives,800
Mon Sep 02 22:14:20 EDT 2019 com.google.javascript.jscomp.ProcessClosurePrimitives,789

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
int indexOfDot=namespace.indexOf('.');
if(indexOfDot!=-1){
compiler.getNodeForCodeInsertion(minimumModule).addChildToBack(replacementNode);
}else {
ProvidedName parentName=providedNames.get(namespace.substring(0,indexOfDot));
Preconditions.checkNotNull(parentName);
Preconditions.checkNotNull(parentName.replacementNode);
parentName.replacementNode.getParent().addChildAfter(replacementNode,parentName.replacementNode);
}

Time : 19/09/02 22:15
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
int indexOfDot=namespace.lastIndexOf('.');
if(indexOfDot==-1){
compiler.getNodeForCodeInsertion(minimumModule).addChildToBack(replacementNode);
}else {
ProvidedName parentName=providedNames.get(namespace.substring(0,indexOfDot));
Preconditions.checkNotNull(parentName);
Preconditions.checkNotNull(parentName.replacementNode);
parentName.replacementNode.getParent().addChildAfter(replacementNode,parentName.replacementNode);
}

Time : 19/09/02 22:22
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2217409186509385 : [/home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ1/closure/closure_93_buggy/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java=>0,0]
for(String line : lines){
int pos=line.lastIndexOf(SEPARATOR);
if(pos<=0||pos==line.length()-1){
throw new ParseException("Bad line: "+line,0);
}
map.put(line.substring(0,pos),line.substring(pos+1));
}

Time : 19/09/02 22:23
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ1/closure/closure_93_buggy/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java=>789,802]
int indexOfDot=namespace.indexOf('.');
if(indexOfDot==-1){
compiler.getNodeForCodeInsertion(minimumModule).addChildToBack(replacementNode);
}else {
ProvidedName parentName=providedNames.get(namespace.substring(0,indexOfDot));
Preconditions.checkNotNull(parentName);
Preconditions.checkNotNull(parentName.replacementNode);
parentName.replacementNode.getParent().addChildAfter(replacementNode,parentName.replacementNode);
}

Time : 19/09/02 22:23
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ1/closure/closure_93_buggy/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java=>789,802]
int indexOfDot=namespace.lastIndexOf('.');
if(indexOfDot==-1){
compiler.getNodeForCodeInsertion(minimumModule).addChildToBack(replacementNode);
}else {
ProvidedName parentName=providedNames.get(namespace.substring(0,indexOfDot));
Preconditions.checkNotNull(parentName);
Preconditions.checkNotNull(parentName.replacementNode);
parentName.replacementNode.getParent().addChildAfter(replacementNode,parentName.replacementNode);
}

Time : 19/09/02 22:23
----------------------------------------
Success time : 19/09/02 22:23
