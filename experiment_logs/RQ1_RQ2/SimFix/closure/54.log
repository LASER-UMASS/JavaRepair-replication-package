=================================================
Project : closure_54	start : 19/09/02 15:59
Current failed test : com.google.javascript.jscomp.TypedScopeCreatorTest::testPropertyOnUnknownSuperClass2_purify_4 | 19/09/02 16:00
Mon Sep 02 16:10:13 EDT 2019 com.google.javascript.jscomp.TypedScopeCreator,1419
Mon Sep 02 16:10:30 EDT 2019 com.google.javascript.rhino.jstype.FunctionType,556

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(objType.isEquivalentTo(type)){
return true;
}

Time : 19/09/02 16:11
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(objType.isEquivalentTo(type)){
return false;
}

Time : 19/09/02 16:13
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(objType.isSubtype(prototype)){
return true;
}

Time : 19/09/02 16:17
----------------------------------------
Mon Sep 02 16:19:47 EDT 2019 Mon Sep 02 16:19:47 EDT 2019 : com.google.javascript.rhino.jstype.JSTypeRegistry,695=>Find no block
Mon Sep 02 16:19:48 EDT 2019 com.google.javascript.jscomp.TypedScopeCreator,768
Mon Sep 02 16:27:22 EDT 2019 com.google.javascript.jscomp.TypedScopeCreator,1421
Mon Sep 02 16:31:46 EDT 2019 com.google.javascript.jscomp.TypedScopeCreator,1422
Mon Sep 02 16:31:46 EDT 2019 com.google.javascript.jscomp.Scope,505
Mon Sep 02 16:49:04 EDT 2019 com.google.javascript.jscomp.Scope,506
Mon Sep 02 16:49:04 EDT 2019 com.google.javascript.jscomp.Scope,507
Mon Sep 02 16:49:05 EDT 2019 Mon Sep 02 16:49:05 EDT 2019 : com.google.javascript.jscomp.Scope,508=>Find no block
Mon Sep 02 16:49:06 EDT 2019 com.google.javascript.jscomp.TypeInference,572

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if("prototype".equals(NodeUtil.JSC_PROPERTY_NAME_FN)){
objectType.defineDeclaredProperty(propName,rightType,getprop);
}else {
objectType.defineInferredProperty(propName,rightType,getprop);
}

Time : 19/09/02 16:50
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if("prototype".equals(ObjectPropertyStringPreprocess.EXTERN_OBJECT_PROPERTY_STRING)){
objectType.defineDeclaredProperty(propName,rightType,getprop);
}else {
objectType.defineInferredProperty(propName,rightType,getprop);
}

Time : 19/09/02 16:52
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if("prototype".equals(JSDocInfo.Visibility.PRIVATE)){
objectType.defineDeclaredProperty(propName,rightType,getprop);
}else {
objectType.defineInferredProperty(propName,rightType,getprop);
}

Time : 19/09/02 16:54
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if("prototype".equals(unflowableVarNames)){
objectType.defineDeclaredProperty(propName,rightType,getprop);
}else {
objectType.defineInferredProperty(propName,rightType,getprop);
}

Time : 19/09/02 16:57
----------------------------------------
Mon Sep 02 16:59:21 EDT 2019 com.google.javascript.rhino.jstype.FunctionType,558

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(objType==null){
if(objType.isEquivalentTo(prototype)){
return true;
}
this.setPrototypeBasedOn(objType);
return true;
}else {
return false;
}

Time : 19/09/02 17:00
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(objType!=type){
if(objType.isEquivalentTo(prototype)){
return true;
}
this.setPrototypeBasedOn(objType);
return true;
}else {
return false;
}

Time : 19/09/02 17:01
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(objType==null){
if(objType.isEquivalentTo(prototype)){
return true;
}
this.setPrototypeBasedOn(objType);
return true;
}else {
return true;
}

Time : 19/09/02 17:03
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(objType!=type){
if(objType.isEquivalentTo(prototype)){
return true;
}
this.setPrototypeBasedOn(objType);
return true;
}else {
return true;
}

Time : 19/09/02 17:05
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(objType!=null&&!objType.isUnknownType()&&objType.hasProperty(name)){
if(objType.isEquivalentTo(prototype)){
return true;
}
this.setPrototypeBasedOn(objType);
return true;
}else {
return false;
}

Time : 19/09/02 17:08
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(objType!=null&&objType.getConstructor()!=null&&objType.getConstructor().isInterface()){
if(objType.isEquivalentTo(prototype)){
return true;
}
this.setPrototypeBasedOn(objType);
return true;
}else {
return false;
}

Time : 19/09/02 17:10
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(objType!=null&&(objType.isPropertyInExterns(name))&&(type.toMaybeFunctionType()).getParameters()!=null){
if(objType.isEquivalentTo(prototype)){
return true;
}
this.setPrototypeBasedOn(objType);
return true;
}else {
return false;
}

Time : 19/09/02 17:11
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(objType!=null&&(objType.isPropertyInExterns(name))&&(type.toMaybeFunctionType()).getParameters()!=null){
propertyNode.children().iterator().next();
if(objType.isEquivalentTo(prototype)){
return true;
}
this.setPrototypeBasedOn(objType);
return true;
}else {
return false;
}

Time : 19/09/02 17:13
----------------------------------------
Mon Sep 02 17:15:10 EDT 2019 com.google.javascript.rhino.jstype.FunctionType,559
Mon Sep 02 17:15:11 EDT 2019 com.google.javascript.rhino.jstype.FunctionType,500
Mon Sep 02 17:27:37 EDT 2019 com.google.javascript.rhino.jstype.FunctionType,501
Mon Sep 02 17:38:48 EDT 2019 com.google.javascript.rhino.jstype.FunctionType,510
Mon Sep 02 17:38:49 EDT 2019 com.google.javascript.rhino.jstype.FunctionType,511
Mon Sep 02 17:38:49 EDT 2019 com.google.javascript.rhino.jstype.FunctionType,512
Mon Sep 02 17:38:50 EDT 2019 com.google.javascript.rhino.jstype.FunctionType,514
Mon Sep 02 17:38:51 EDT 2019 com.google.javascript.rhino.jstype.FunctionType,515
Mon Sep 02 17:38:51 EDT 2019 com.google.javascript.rhino.jstype.FunctionType,517
Mon Sep 02 17:38:52 EDT 2019 com.google.javascript.rhino.jstype.FunctionType,524
Mon Sep 02 17:43:17 EDT 2019 com.google.javascript.jscomp.TypedScopeCreator,1413
Mon Sep 02 17:43:18 EDT 2019 com.google.javascript.rhino.jstype.JSType,706
Timeout time : 19/09/02 17:50
Current failed test : com.google.javascript.jscomp.TypeCheckTest::testIssue537a | 19/09/02 17:50
Mon Sep 02 18:01:09 EDT 2019 com.google.javascript.jscomp.TypedScopeCreator,1419
Mon Sep 02 18:01:25 EDT 2019 com.google.javascript.rhino.jstype.FunctionType,556
Mon Sep 02 18:06:36 EDT 2019 Mon Sep 02 18:06:36 EDT 2019 : com.google.javascript.rhino.jstype.JSTypeRegistry,695=>Find no block
Mon Sep 02 18:06:37 EDT 2019 com.google.javascript.jscomp.TypedScopeCreator,768
Mon Sep 02 18:14:14 EDT 2019 com.google.javascript.jscomp.TypedScopeCreator,1421
Mon Sep 02 18:18:44 EDT 2019 com.google.javascript.jscomp.TypedScopeCreator,1422
Mon Sep 02 18:18:45 EDT 2019 com.google.javascript.jscomp.Scope,505
Mon Sep 02 18:36:13 EDT 2019 com.google.javascript.jscomp.Scope,506
Mon Sep 02 18:36:14 EDT 2019 com.google.javascript.jscomp.Scope,507
Mon Sep 02 18:36:15 EDT 2019 Mon Sep 02 18:36:15 EDT 2019 : com.google.javascript.jscomp.Scope,508=>Find no block
Mon Sep 02 18:36:16 EDT 2019 com.google.javascript.jscomp.TypeInference,572
Mon Sep 02 18:41:05 EDT 2019 com.google.javascript.rhino.jstype.FunctionType,558
Mon Sep 02 18:45:51 EDT 2019 com.google.javascript.rhino.jstype.FunctionType,559
Mon Sep 02 18:45:52 EDT 2019 com.google.javascript.rhino.jstype.FunctionType,500
Mon Sep 02 18:58:37 EDT 2019 com.google.javascript.rhino.jstype.FunctionType,501
Mon Sep 02 19:09:48 EDT 2019 com.google.javascript.rhino.jstype.FunctionType,510
Mon Sep 02 19:09:49 EDT 2019 com.google.javascript.rhino.jstype.FunctionType,511
Mon Sep 02 19:09:50 EDT 2019 com.google.javascript.rhino.jstype.FunctionType,512
Mon Sep 02 19:09:50 EDT 2019 com.google.javascript.rhino.jstype.FunctionType,514
Mon Sep 02 19:09:51 EDT 2019 com.google.javascript.rhino.jstype.FunctionType,515
Mon Sep 02 19:09:52 EDT 2019 com.google.javascript.rhino.jstype.FunctionType,517
Mon Sep 02 19:09:52 EDT 2019 com.google.javascript.rhino.jstype.FunctionType,524
Mon Sep 02 19:14:18 EDT 2019 com.google.javascript.jscomp.TypedScopeCreator,1413
Mon Sep 02 19:14:19 EDT 2019 com.google.javascript.rhino.jstype.JSType,706

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(thisType.isObject()&&thatType.isObject()){
return thisType.isEquivalentTo(thatType)?thisType:thisType.getNativeType(JSTypeNative.UNKNOWN_TYPE);
}

Time : 19/09/02 19:17
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(thisType.isObject()&&thatType.isObject()){
return thisType.getNativeType(JSTypeNative.UNKNOWN_TYPE);
}

Time : 19/09/02 19:18
----------------------------------------
Mon Sep 02 19:26:43 EDT 2019 com.google.javascript.jscomp.TypedScopeCreator,1406
Timeout time : 19/09/02 19:41
Current failed test : com.google.javascript.jscomp.TypeCheckTest::testIssue537b | 19/09/02 19:41
Mon Sep 02 19:51:40 EDT 2019 com.google.javascript.jscomp.TypedScopeCreator,1419
Mon Sep 02 19:51:56 EDT 2019 com.google.javascript.rhino.jstype.FunctionType,556
Mon Sep 02 19:56:56 EDT 2019 Mon Sep 02 19:56:56 EDT 2019 : com.google.javascript.rhino.jstype.JSTypeRegistry,695=>Find no block
Mon Sep 02 19:56:57 EDT 2019 com.google.javascript.jscomp.TypedScopeCreator,768
Mon Sep 02 20:04:23 EDT 2019 com.google.javascript.jscomp.TypedScopeCreator,1421
Mon Sep 02 20:08:45 EDT 2019 com.google.javascript.jscomp.TypedScopeCreator,1422
Mon Sep 02 20:08:46 EDT 2019 com.google.javascript.jscomp.Scope,505
Mon Sep 02 20:26:14 EDT 2019 com.google.javascript.jscomp.Scope,506
Mon Sep 02 20:26:15 EDT 2019 com.google.javascript.jscomp.Scope,507
Mon Sep 02 20:26:16 EDT 2019 Mon Sep 02 20:26:16 EDT 2019 : com.google.javascript.jscomp.Scope,508=>Find no block
Mon Sep 02 20:26:17 EDT 2019 com.google.javascript.jscomp.TypeInference,572
Mon Sep 02 20:30:56 EDT 2019 com.google.javascript.rhino.jstype.FunctionType,558
Mon Sep 02 20:35:27 EDT 2019 com.google.javascript.rhino.jstype.FunctionType,559
Mon Sep 02 20:35:28 EDT 2019 com.google.javascript.rhino.jstype.FunctionType,500
Mon Sep 02 20:47:55 EDT 2019 com.google.javascript.rhino.jstype.FunctionType,501
Mon Sep 02 20:58:56 EDT 2019 com.google.javascript.rhino.jstype.FunctionType,510
Mon Sep 02 20:58:57 EDT 2019 com.google.javascript.rhino.jstype.FunctionType,511
Mon Sep 02 20:58:58 EDT 2019 com.google.javascript.rhino.jstype.FunctionType,512
Mon Sep 02 20:58:58 EDT 2019 com.google.javascript.rhino.jstype.FunctionType,514
Mon Sep 02 20:58:59 EDT 2019 com.google.javascript.rhino.jstype.FunctionType,515
Mon Sep 02 20:58:59 EDT 2019 com.google.javascript.rhino.jstype.FunctionType,517
Mon Sep 02 20:59:00 EDT 2019 com.google.javascript.rhino.jstype.FunctionType,524
Mon Sep 02 21:03:21 EDT 2019 com.google.javascript.jscomp.TypedScopeCreator,1413
Mon Sep 02 21:03:21 EDT 2019 com.google.javascript.rhino.jstype.JSType,706
Mon Sep 02 21:12:38 EDT 2019 com.google.javascript.jscomp.TypedScopeCreator,1406
Mon Sep 02 21:29:31 EDT 2019 com.google.javascript.jscomp.TypedScopeCreator,1407
Mon Sep 02 21:29:32 EDT 2019 com.google.javascript.rhino.jstype.NamedType,300
Timeout time : 19/09/02 21:31
