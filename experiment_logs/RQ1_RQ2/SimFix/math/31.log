=================================================
Project : math_31	start : 19/09/02 13:44
Current failed test : org.apache.commons.math3.distribution.FDistributionTest::testMath785 | 19/09/02 13:44
Mon Sep 02 13:46:03 EDT 2019 Mon Sep 02 13:46:03 EDT 2019 : org.apache.commons.math3.exception.MathIllegalStateException,45=>Find no block
Mon Sep 02 13:46:05 EDT 2019 org.apache.commons.math3.exception.MathIllegalStateException,46
Mon Sep 02 13:46:12 EDT 2019 org.apache.commons.math3.exception.MathIllegalStateException,47
Mon Sep 02 13:46:14 EDT 2019 Mon Sep 02 13:46:14 EDT 2019 : org.apache.commons.math3.exception.MathIllegalStateException,48=>Find no block
Mon Sep 02 13:46:15 EDT 2019 org.apache.commons.math3.exception.MathIllegalStateException,69
Mon Sep 02 13:46:22 EDT 2019 Mon Sep 02 13:46:22 EDT 2019 : org.apache.commons.math3.exception.MathIllegalStateException,70=>Find no block
Mon Sep 02 13:46:23 EDT 2019 org.apache.commons.math3.exception.MathIllegalStateException,74
Mon Sep 02 13:46:28 EDT 2019 Mon Sep 02 13:46:28 EDT 2019 : org.apache.commons.math3.exception.ConvergenceException,48=>Find no block
Mon Sep 02 13:46:30 EDT 2019 org.apache.commons.math3.exception.ConvergenceException,49
Mon Sep 02 13:47:12 EDT 2019 Mon Sep 02 13:47:12 EDT 2019 : org.apache.commons.math3.exception.ConvergenceException,50=>Find no block
Mon Sep 02 13:47:13 EDT 2019 org.apache.commons.math3.util.ContinuedFraction,177
Mon Sep 02 13:59:44 EDT 2019 org.apache.commons.math3.exception.MathIllegalStateException,80
Mon Sep 02 14:00:25 EDT 2019 org.apache.commons.math3.exception.MathIllegalStateException,86
Mon Sep 02 14:01:01 EDT 2019 org.apache.commons.math3.distribution.FDistribution,178
Mon Sep 02 14:01:05 EDT 2019 org.apache.commons.math3.distribution.FDistribution,194
Mon Sep 02 14:01:45 EDT 2019 org.apache.commons.math3.distribution.FDistribution,230
Mon Sep 02 14:01:49 EDT 2019 org.apache.commons.math3.distribution.FDistribution,231
Mon Sep 02 14:01:50 EDT 2019 org.apache.commons.math3.distribution.FDistribution,233
Mon Sep 02 14:01:51 EDT 2019 org.apache.commons.math3.distribution.FDistribution,145

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x<=0){
ret=0;
}else {
double n=x;
double m=denominatorDegreesOfFreedom;
ret=Beta.regularizedBeta((n*x)/(m+n*x),0.5*n,0.5*m);
}

Time : 19/09/02 14:02
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(Double.isNaN(x)||(x<=0.0)){
ret=0;
}else {
double n=x;
double m=denominatorDegreesOfFreedom;
ret=Beta.regularizedBeta((n*x)/(m+n*x),0.5*n,0.5*m);
}

Time : 19/09/02 14:04
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x==0){
return Math.PI/2.0;
}
if(x<=0){
ret=0;
}else {
double n=numeratorDegreesOfFreedom;
double m=denominatorDegreesOfFreedom;
ret=Beta.regularizedBeta((n*x)/(m+n*x),0.5*n,0.5*m);
}

Time : 19/09/02 14:07
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(FastMath.abs(DEFAULT_INVERSE_ABSOLUTE_ACCURACY)<=solverAbsoluteAccuracy){
return x;
}
if(x<=0){
ret=0;
}else {
double n=numeratorDegreesOfFreedom;
double m=denominatorDegreesOfFreedom;
ret=Beta.regularizedBeta((n*x)/(m+n*x),0.5*n,0.5*m);
}

Time : 19/09/02 14:10
----------------------------------------
Mon Sep 02 14:12:41 EDT 2019 org.apache.commons.math3.distribution.FDistribution,163
Mon Sep 02 14:12:46 EDT 2019 org.apache.commons.math3.distribution.FDistribution,191
Mon Sep 02 14:13:24 EDT 2019 org.apache.commons.math3.distribution.FDistribution,193
Mon Sep 02 14:13:26 EDT 2019 org.apache.commons.math3.distribution.FDistribution,214
Mon Sep 02 14:13:30 EDT 2019 org.apache.commons.math3.distribution.FDistribution,215
Mon Sep 02 14:13:32 EDT 2019 org.apache.commons.math3.distribution.FDistribution,216
Mon Sep 02 14:13:32 EDT 2019 org.apache.commons.math3.distribution.FDistribution,218
Mon Sep 02 14:13:37 EDT 2019 org.apache.commons.math3.distribution.FDistribution,227
Mon Sep 02 14:14:29 EDT 2019 org.apache.commons.math3.distribution.FDistribution,229
Mon Sep 02 14:14:30 EDT 2019 org.apache.commons.math3.distribution.FDistribution,248
Mon Sep 02 14:14:35 EDT 2019 org.apache.commons.math3.distribution.FDistribution,260
Mon Sep 02 14:14:39 EDT 2019 org.apache.commons.math3.distribution.BinomialDistribution,114
Mon Sep 02 14:14:55 EDT 2019 org.apache.commons.math3.distribution.BinomialDistribution,124
Mon Sep 02 14:16:36 EDT 2019 org.apache.commons.math3.distribution.BinomialDistribution,125
Mon Sep 02 14:16:37 EDT 2019 org.apache.commons.math3.distribution.BinomialDistribution,137
Mon Sep 02 14:17:35 EDT 2019 org.apache.commons.math3.distribution.BinomialDistribution,149
Mon Sep 02 14:18:33 EDT 2019 org.apache.commons.math3.distribution.FDistribution,172
Mon Sep 02 14:18:38 EDT 2019 org.apache.commons.math3.distribution.BinomialDistribution,96
Mon Sep 02 14:21:05 EDT 2019 org.apache.commons.math3.distribution.BinomialDistribution,98
Mon Sep 02 14:21:06 EDT 2019 org.apache.commons.math3.distribution.BinomialDistribution,101
Mon Sep 02 14:21:08 EDT 2019 org.apache.commons.math3.distribution.FDistribution,147
Mon Sep 02 14:21:09 EDT 2019 org.apache.commons.math3.distribution.FDistribution,148
Mon Sep 02 14:21:10 EDT 2019 org.apache.commons.math3.distribution.FDistribution,150
Mon Sep 02 14:21:12 EDT 2019 Mon Sep 02 14:21:12 EDT 2019 : org.apache.commons.math3.distribution.BinomialDistribution,49=>Find no block
Mon Sep 02 14:21:13 EDT 2019 org.apache.commons.math3.distribution.BinomialDistribution,50
Mon Sep 02 14:21:17 EDT 2019 org.apache.commons.math3.distribution.BinomialDistribution,54
Mon Sep 02 14:23:57 EDT 2019 org.apache.commons.math3.distribution.BinomialDistribution,58
Mon Sep 02 14:27:15 EDT 2019 org.apache.commons.math3.distribution.BinomialDistribution,59
Mon Sep 02 14:27:17 EDT 2019 Mon Sep 02 14:27:17 EDT 2019 : org.apache.commons.math3.distribution.BinomialDistribution,60=>Find no block
Mon Sep 02 14:27:18 EDT 2019 org.apache.commons.math3.special.Beta,129
Mon Sep 02 14:27:27 EDT 2019 org.apache.commons.math3.distribution.FDistribution,144
Mon Sep 02 14:27:28 EDT 2019 org.apache.commons.math3.distribution.FDistribution,154

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
double ret;
if(x<=0){
ret=0;
}else {
double n=x;
double m=denominatorDegreesOfFreedom;
ret=Beta.regularizedBeta((n*x)/(m+n*x),0.5*n,0.5*m);
}
return ret;

Time : 19/09/02 14:28
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
double ret;
if(Double.isNaN(x)||(x<=0.0)){
ret=0;
}else {
double n=x;
double m=denominatorDegreesOfFreedom;
ret=Beta.regularizedBeta((n*x)/(m+n*x),0.5*n,0.5*m);
}
return ret;

Time : 19/09/02 14:30
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
double ret;
if(x<=0){
ret=0;
}else {
double n=numeratorDegreesOfFreedom;
double m=denominatorDegreesOfFreedom;
ret=Beta.regularizedBeta((n*x)/(m+n*x),0.5*n,0.5*m);
}
return x;

Time : 19/09/02 14:31
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
double ret;
if(x<0){
ret=0;
}else {
double n=numeratorDegreesOfFreedom;
double m=denominatorDegreesOfFreedom;
ret=Beta.regularizedBeta((n*x)/(m+n*x),0.5*n,0.5*m);
}
return x;

Time : 19/09/02 14:38
----------------------------------------
Mon Sep 02 14:44:24 EDT 2019 org.apache.commons.math3.distribution.AbstractIntegerDistribution,104
Mon Sep 02 14:56:51 EDT 2019 org.apache.commons.math3.distribution.AbstractIntegerDistribution,105
Mon Sep 02 14:56:52 EDT 2019 org.apache.commons.math3.distribution.AbstractIntegerDistribution,106
Mon Sep 02 14:56:53 EDT 2019 org.apache.commons.math3.distribution.AbstractIntegerDistribution,107
Mon Sep 02 14:56:55 EDT 2019 org.apache.commons.math3.distribution.AbstractIntegerDistribution,109
Mon Sep 02 14:56:56 EDT 2019 org.apache.commons.math3.distribution.AbstractIntegerDistribution,110
Mon Sep 02 14:56:57 EDT 2019 org.apache.commons.math3.distribution.AbstractIntegerDistribution,111
Mon Sep 02 14:56:58 EDT 2019 org.apache.commons.math3.distribution.AbstractIntegerDistribution,112
Mon Sep 02 14:56:59 EDT 2019 org.apache.commons.math3.special.Beta,138

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(a%2==0){
m=n/2.0;
ret=(m*(b-m))/((a+(2*m)-1)*(a+(2*m)));
}else {
m=(n-1.0)/2.0;
ret=-((a+m)*(a+b))/((a+(2*m))*(a+(2*m)));
}

Time : 19/09/02 14:57
----------------------------------------
Mon Sep 02 14:59:23 EDT 2019 org.apache.commons.math3.special.Beta,139
Mon Sep 02 14:59:25 EDT 2019 org.apache.commons.math3.distribution.AbstractIntegerDistribution,133
Mon Sep 02 15:01:27 EDT 2019 org.apache.commons.math3.distribution.AbstractIntegerDistribution,134
Mon Sep 02 15:01:28 EDT 2019 org.apache.commons.math3.distribution.AbstractIntegerDistribution,143
Mon Sep 02 15:01:29 EDT 2019 org.apache.commons.math3.distribution.AbstractIntegerDistribution,200
Mon Sep 02 15:05:15 EDT 2019 org.apache.commons.math3.distribution.AbstractIntegerDistribution,201
Mon Sep 02 15:05:19 EDT 2019 org.apache.commons.math3.special.Beta,128
Mon Sep 02 15:36:55 EDT 2019 org.apache.commons.math3.special.Beta,131
Mon Sep 02 15:37:00 EDT 2019 org.apache.commons.math3.special.Beta,154
Mon Sep 02 15:44:12 EDT 2019 org.apache.commons.math3.special.Beta,131
Mon Sep 02 15:44:13 EDT 2019 org.apache.commons.math3.special.Beta,137
Mon Sep 02 15:44:14 EDT 2019 org.apache.commons.math3.special.Beta,142
Mon Sep 02 15:44:22 EDT 2019 org.apache.commons.math3.special.Beta,143
Mon Sep 02 15:44:27 EDT 2019 org.apache.commons.math3.special.Beta,146

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
double ret;
double m;
if(n%2==0){
m=n/2.0;
ret=(m*(b-m))/((a+(2*m)-1)*(a+(2*m)));
}else {
m=(n-1.0)/2.0;
ret=-((a+m)*(a+b))/((a+(2*m))*(a+(2*m)));
}
return b;

Time : 19/09/02 15:45
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
double ret;
double m;
if(n%2==0){
m=n/2.0;
ret=(m*(b-m))/((a+(2*m)-1)*(a+(2*m)));
}else {
m=(n-1.0)/2.0;
ret=-((a+m)*(a+b))/((a+(2*m))*(a+(2*m)));
}
return a;

Time : 19/09/02 15:47
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
double ret;
double m;
if(a%2==0){
m=n/2.0;
ret=(m*(b-m))/((a+(2*m)-1)*(a+(2*m)));
}else {
m=(n-1.0)/2.0;
ret=-((a+m)*(a+b))/((a+(2*m))*(a+(2*m)));
}
return ret;

Time : 19/09/02 15:50
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
double ret;
double m;
if(n%2==0){
m=n/2.0;
ret=(m*(b-m))/((a+(2*m)-1)*(a+(2*m)));
}else {
m=(n-1.0)/2.0;
ret=-((a+m)*(a+b))/((a+(2*m))*(a+(2*m)));
}
return ret*(a+b);

Time : 19/09/02 15:51
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
double ret;
double m;
if(n%2==0){
m=n/2.0;
ret=(m*(b-m))/((a+(2*m)-1)*(a+(2*m)));
}else {
m=(n-1.0)/2.0;
ret=-((a+m)*(a+b))/((a+(2*m))*(a+(2*m)));
}
ret=a+b;
return ret;

Time : 19/09/02 15:54
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
double ret;
double m;
if(n%2==0){
m=n/2.0;
ret=(m*(b-m))/((a+(2*m)-1)*(a+(2*m)));
}else {
m=(n-1.0)/2.0;
ret=-((a+m)*(a+b))/((a+(2*m))*(a+(2*m)));
}
return a+b;

Time : 19/09/02 15:57
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
double ret;
double m;
if(n%2==0){
m=n/2.0;
ret=(m*(b-m))/((a+(2*m)-1)*(a+(2*m)));
}else {
m=(n-1.0)/2.0;
ret=-((a+m)*(a+b))/((a+(2*m))*(a+(2*m)));
}
ret=a+ret;
return ret;

Time : 19/09/02 16:00
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
double ret;
double m;
if(n%2==0){
m=n/2.0;
ret=(m*(b-m))/((a+(2*m)-1)*(a+(2*m)));
}else {
m=(n-1.0)/2.0;
ret=-((a+m)*(a+b))/((a+(2*m))*(a+(2*m)));
}
ret=a+ret;
return a+b;

Time : 19/09/02 16:02
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
double ret;
double m;
if(n%2==0){
m=n/2.0;
ret=(m*(b-m))/((a+(2*m)-1)*(a+(2*m)));
}else {
m=(n-1.0)/2.0;
ret=-((a+m)*(a+b))/((a+(2*m))*(a+(2*m)));
}
ret=a+ret;
return a;

Time : 19/09/02 16:04
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
double ret;
double m;
if(n%2==0){
m=n/2.0;
ret=(m*(b-m))/((a+(2*m)-1)*(a+(2*m)));
}else {
m=(n-1.0)/2.0;
ret=-((a+m)*(a+b))/((a+(2*m))*(a+(2*m)));
}
ret=a+ret;
return b;

Time : 19/09/02 16:06
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(a<b){
return a;
}
double ret;
double m;
if(n%2==0){
m=n/2.0;
ret=(m*(b-m))/((a+(2*m)-1)*(a+(2*m)));
}else {
m=(n-1.0)/2.0;
ret=-((a+m)*(a+b))/((a+(2*m))*(a+(2*m)));
}
return ret;

Time : 19/09/02 16:08
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(a!=b){
return Double.NaN;
}
double ret;
double m;
if(n%2==0){
m=n/2.0;
ret=(m*(b-m))/((a+(2*m)-1)*(a+(2*m)));
}else {
m=(n-1.0)/2.0;
ret=-((a+m)*(a+b))/((a+(2*m))*(a+(2*m)));
}
return ret;

Time : 19/09/02 16:09
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(Double.doubleToRawLongBits(a)==0x8000000000000000L){
return a;
}
double ret;
double m;
if(n%2==0){
m=n/2.0;
ret=(m*(b-m))/((a+(2*m)-1)*(a+(2*m)));
}else {
m=(n-1.0)/2.0;
ret=-((a+m)*(a+b))/((a+(2*m))*(a+(2*m)));
}
return ret;

Time : 19/09/02 16:10
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(a<b){
return a;
}
if(a!=b){
return Double.NaN;
}
double ret;
double m;
if(n%2==0){
m=n/2.0;
ret=(m*(b-m))/((a+(2*m)-1)*(a+(2*m)));
}else {
m=(n-1.0)/2.0;
ret=-((a+m)*(a+b))/((a+(2*m))*(a+(2*m)));
}
return ret;

Time : 19/09/02 16:11
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(a<b){
return a;
}
if(Double.doubleToRawLongBits(a)==0x8000000000000000L){
return a;
}
double ret;
double m;
if(n%2==0){
m=n/2.0;
ret=(m*(b-m))/((a+(2*m)-1)*(a+(2*m)));
}else {
m=(n-1.0)/2.0;
ret=-((a+m)*(a+b))/((a+(2*m))*(a+(2*m)));
}
return ret;

Time : 19/09/02 16:13
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(a!=b){
return Double.NaN;
}
if(Double.doubleToRawLongBits(a)==0x8000000000000000L){
return a;
}
double ret;
double m;
if(n%2==0){
m=n/2.0;
ret=(m*(b-m))/((a+(2*m)-1)*(a+(2*m)));
}else {
m=(n-1.0)/2.0;
ret=-((a+m)*(a+b))/((a+(2*m))*(a+(2*m)));
}
return ret;

Time : 19/09/02 16:14
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(a<b){
return a;
}
if(a!=b){
return Double.NaN;
}
if(Double.doubleToRawLongBits(a)==0x8000000000000000L){
return a;
}
double ret;
double m;
if(n%2==0){
m=n/2.0;
ret=(m*(b-m))/((a+(2*m)-1)*(a+(2*m)));
}else {
m=(n-1.0)/2.0;
ret=-((a+m)*(a+b))/((a+(2*m))*(a+(2*m)));
}
return ret;

Time : 19/09/02 16:15
----------------------------------------
Timeout time : 19/09/02 16:16
Current failed test : org.apache.commons.math3.distribution.BinomialDistributionTest::testMath718 | 19/09/02 16:16
Mon Sep 02 16:18:06 EDT 2019 Mon Sep 02 16:18:06 EDT 2019 : org.apache.commons.math3.exception.MathIllegalStateException,45=>Find no block
Mon Sep 02 16:18:08 EDT 2019 org.apache.commons.math3.exception.MathIllegalStateException,46
Mon Sep 02 16:18:12 EDT 2019 org.apache.commons.math3.exception.MathIllegalStateException,47
Mon Sep 02 16:18:14 EDT 2019 Mon Sep 02 16:18:14 EDT 2019 : org.apache.commons.math3.exception.MathIllegalStateException,48=>Find no block
Mon Sep 02 16:18:15 EDT 2019 org.apache.commons.math3.exception.MathIllegalStateException,69
Mon Sep 02 16:18:20 EDT 2019 Mon Sep 02 16:18:20 EDT 2019 : org.apache.commons.math3.exception.MathIllegalStateException,70=>Find no block
Mon Sep 02 16:18:21 EDT 2019 org.apache.commons.math3.exception.MathIllegalStateException,74
Mon Sep 02 16:18:26 EDT 2019 Mon Sep 02 16:18:26 EDT 2019 : org.apache.commons.math3.exception.ConvergenceException,48=>Find no block
Mon Sep 02 16:18:27 EDT 2019 org.apache.commons.math3.exception.ConvergenceException,49
Mon Sep 02 16:19:07 EDT 2019 Mon Sep 02 16:19:07 EDT 2019 : org.apache.commons.math3.exception.ConvergenceException,50=>Find no block
Mon Sep 02 16:19:09 EDT 2019 org.apache.commons.math3.util.ContinuedFraction,177
Mon Sep 02 16:31:26 EDT 2019 org.apache.commons.math3.exception.MathIllegalStateException,80
Mon Sep 02 16:32:07 EDT 2019 org.apache.commons.math3.exception.MathIllegalStateException,86
Mon Sep 02 16:32:43 EDT 2019 org.apache.commons.math3.distribution.FDistribution,178
Mon Sep 02 16:32:47 EDT 2019 org.apache.commons.math3.distribution.FDistribution,194
Mon Sep 02 16:33:26 EDT 2019 org.apache.commons.math3.distribution.FDistribution,230
Mon Sep 02 16:33:31 EDT 2019 org.apache.commons.math3.distribution.FDistribution,231
Mon Sep 02 16:33:32 EDT 2019 org.apache.commons.math3.distribution.FDistribution,233
Mon Sep 02 16:33:33 EDT 2019 org.apache.commons.math3.distribution.FDistribution,145
Mon Sep 02 16:39:22 EDT 2019 org.apache.commons.math3.distribution.FDistribution,163
Mon Sep 02 16:39:26 EDT 2019 org.apache.commons.math3.distribution.FDistribution,191
Mon Sep 02 16:40:04 EDT 2019 org.apache.commons.math3.distribution.FDistribution,193
Mon Sep 02 16:40:05 EDT 2019 org.apache.commons.math3.distribution.FDistribution,214
Mon Sep 02 16:40:09 EDT 2019 org.apache.commons.math3.distribution.FDistribution,215
Mon Sep 02 16:40:11 EDT 2019 org.apache.commons.math3.distribution.FDistribution,216
Mon Sep 02 16:40:12 EDT 2019 org.apache.commons.math3.distribution.FDistribution,218
Mon Sep 02 16:40:16 EDT 2019 org.apache.commons.math3.distribution.FDistribution,227
Mon Sep 02 16:41:10 EDT 2019 org.apache.commons.math3.distribution.FDistribution,229
Mon Sep 02 16:41:13 EDT 2019 org.apache.commons.math3.distribution.FDistribution,248
Mon Sep 02 16:41:23 EDT 2019 org.apache.commons.math3.distribution.FDistribution,260
Mon Sep 02 16:41:28 EDT 2019 org.apache.commons.math3.distribution.BinomialDistribution,114
Mon Sep 02 16:41:43 EDT 2019 org.apache.commons.math3.distribution.BinomialDistribution,124

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double p=probabilityOfSuccess;
return (p*(1-p))/p;

Time : 19/09/02 16:42
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double p=probabilityOfSuccess;
return probabilityOfSuccess*FastMath.pow(p,1/probabilityOfSuccess);

Time : 19/09/02 16:44
----------------------------------------
Mon Sep 02 16:45:52 EDT 2019 org.apache.commons.math3.distribution.BinomialDistribution,125
Mon Sep 02 16:45:53 EDT 2019 org.apache.commons.math3.distribution.BinomialDistribution,137
Mon Sep 02 16:46:52 EDT 2019 org.apache.commons.math3.distribution.BinomialDistribution,149
Mon Sep 02 16:47:50 EDT 2019 org.apache.commons.math3.distribution.FDistribution,172
Mon Sep 02 16:47:55 EDT 2019 org.apache.commons.math3.distribution.BinomialDistribution,96
Mon Sep 02 16:50:19 EDT 2019 org.apache.commons.math3.distribution.BinomialDistribution,98
Mon Sep 02 16:50:21 EDT 2019 org.apache.commons.math3.distribution.BinomialDistribution,101
Mon Sep 02 16:50:22 EDT 2019 org.apache.commons.math3.distribution.FDistribution,147
Mon Sep 02 16:50:23 EDT 2019 org.apache.commons.math3.distribution.FDistribution,148
Mon Sep 02 16:50:25 EDT 2019 org.apache.commons.math3.distribution.FDistribution,150
Mon Sep 02 16:50:26 EDT 2019 Mon Sep 02 16:50:26 EDT 2019 : org.apache.commons.math3.distribution.BinomialDistribution,49=>Find no block
Mon Sep 02 16:50:27 EDT 2019 org.apache.commons.math3.distribution.BinomialDistribution,50
Mon Sep 02 16:50:32 EDT 2019 org.apache.commons.math3.distribution.BinomialDistribution,54
Mon Sep 02 16:53:11 EDT 2019 org.apache.commons.math3.distribution.BinomialDistribution,58
Mon Sep 02 16:56:23 EDT 2019 org.apache.commons.math3.distribution.BinomialDistribution,59
Mon Sep 02 16:56:24 EDT 2019 Mon Sep 02 16:56:24 EDT 2019 : org.apache.commons.math3.distribution.BinomialDistribution,60=>Find no block
Mon Sep 02 16:56:25 EDT 2019 org.apache.commons.math3.special.Beta,129
Mon Sep 02 16:56:35 EDT 2019 org.apache.commons.math3.distribution.FDistribution,144
Mon Sep 02 16:56:37 EDT 2019 org.apache.commons.math3.distribution.FDistribution,154
Mon Sep 02 17:08:05 EDT 2019 org.apache.commons.math3.distribution.AbstractIntegerDistribution,104
Mon Sep 02 17:20:05 EDT 2019 org.apache.commons.math3.distribution.AbstractIntegerDistribution,105
Mon Sep 02 17:20:06 EDT 2019 org.apache.commons.math3.distribution.AbstractIntegerDistribution,106
Mon Sep 02 17:20:08 EDT 2019 org.apache.commons.math3.distribution.AbstractIntegerDistribution,107
Mon Sep 02 17:20:09 EDT 2019 org.apache.commons.math3.distribution.AbstractIntegerDistribution,109
Mon Sep 02 17:20:10 EDT 2019 org.apache.commons.math3.distribution.AbstractIntegerDistribution,110
Mon Sep 02 17:20:12 EDT 2019 org.apache.commons.math3.distribution.AbstractIntegerDistribution,111
Mon Sep 02 17:20:13 EDT 2019 org.apache.commons.math3.distribution.AbstractIntegerDistribution,112
Mon Sep 02 17:20:14 EDT 2019 org.apache.commons.math3.special.Beta,138
Mon Sep 02 17:21:29 EDT 2019 org.apache.commons.math3.special.Beta,139
Mon Sep 02 17:21:30 EDT 2019 org.apache.commons.math3.distribution.AbstractIntegerDistribution,133
Mon Sep 02 17:23:34 EDT 2019 org.apache.commons.math3.distribution.AbstractIntegerDistribution,134
Mon Sep 02 17:23:35 EDT 2019 org.apache.commons.math3.distribution.AbstractIntegerDistribution,143
Mon Sep 02 17:23:36 EDT 2019 org.apache.commons.math3.distribution.AbstractIntegerDistribution,200
Mon Sep 02 17:27:02 EDT 2019 org.apache.commons.math3.distribution.AbstractIntegerDistribution,201
Mon Sep 02 17:27:03 EDT 2019 org.apache.commons.math3.special.Beta,128
Mon Sep 02 17:58:48 EDT 2019 org.apache.commons.math3.special.Beta,131
Mon Sep 02 17:58:53 EDT 2019 org.apache.commons.math3.special.Beta,154
Mon Sep 02 18:06:31 EDT 2019 org.apache.commons.math3.special.Beta,131
Mon Sep 02 18:06:32 EDT 2019 org.apache.commons.math3.special.Beta,137
Mon Sep 02 18:06:33 EDT 2019 org.apache.commons.math3.special.Beta,142
Mon Sep 02 18:06:35 EDT 2019 org.apache.commons.math3.special.Beta,143
Mon Sep 02 18:06:36 EDT 2019 org.apache.commons.math3.special.Beta,146

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
double ret;
double m;
if(n%2==0){
m=n/2.0;
ret=(m*(b-m))/((a+(2*m)-1)*(a+(2*m)));
}else {
m=(n-1.0)/2.0;
ret=-((a+m)*(a+b))/((a+(2*m))*(a+(2*m)));
}
return (b-a)/(b-a);

Time : 19/09/02 18:08
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
double ret;
double m;
if(n%2==0){
m=n/2.0;
ret=(m*(b-m))/((a+(2*m)-1)*(a+(2*m)));
}else {
m=(n-1.0)/2.0;
ret=-((a+m)*(a+b))/((a+(2*m))*(a+(2*m)));
}
return ret*(a+b);

Time : 19/09/02 18:10
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(a<b){
return a;
}
double ret;
double m;
if(n%2==0){
m=n/2.0;
ret=(m*(b-m))/((a+(2*m)-1)*(a+(2*m)));
}else {
m=(n-1.0)/2.0;
ret=-((a+m)*(a+b))/((a+(2*m))*(a+(2*m)));
}
return ret;

Time : 19/09/02 18:16
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(Double.doubleToRawLongBits(a)==0x8000000000000000L){
return a;
}
double ret;
double m;
if(n%2==0){
m=n/2.0;
ret=(m*(b-m))/((a+(2*m)-1)*(a+(2*m)));
}else {
m=(n-1.0)/2.0;
ret=-((a+m)*(a+b))/((a+(2*m))*(a+(2*m)));
}
return ret;

Time : 19/09/02 18:17
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(a<b){
return a;
}
if(Double.doubleToRawLongBits(a)==0x8000000000000000L){
return a;
}
double ret;
double m;
if(n%2==0){
m=n/2.0;
ret=(m*(b-m))/((a+(2*m)-1)*(a+(2*m)));
}else {
m=(n-1.0)/2.0;
ret=-((a+m)*(a+b))/((a+(2*m))*(a+(2*m)));
}
return ret;

Time : 19/09/02 18:19
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(a<b){
return b;
}
double ret;
double m;
if(n%2==0){
m=n/2.0;
ret=(m*(b-m))/((a+(2*m)-1)*(a+(2*m)));
}else {
m=(n-1.0)/2.0;
ret=-((a+m)*(a+b))/((a+(2*m))*(a+(2*m)));
}
return ret;

Time : 19/09/02 18:20
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(Double.doubleToRawLongBits(a)==0x8000000000000000L){
return b;
}
double ret;
double m;
if(n%2==0){
m=n/2.0;
ret=(m*(b-m))/((a+(2*m)-1)*(a+(2*m)));
}else {
m=(n-1.0)/2.0;
ret=-((a+m)*(a+b))/((a+(2*m))*(a+(2*m)));
}
return ret;

Time : 19/09/02 18:22
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(a<b){
return b;
}
if(Double.doubleToRawLongBits(a)==0x8000000000000000L){
return b;
}
double ret;
double m;
if(n%2==0){
m=n/2.0;
ret=(m*(b-m))/((a+(2*m)-1)*(a+(2*m)));
}else {
m=(n-1.0)/2.0;
ret=-((a+m)*(a+b))/((a+(2*m))*(a+(2*m)));
}
return ret;

Time : 19/09/02 18:23
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
double ret;
double m;
if(n%2==0){
m=n/2.0;
ret=(m*(b-m))/((a+(2*m)-1)*(a+(2*m)));
}else {
m=(n-1.0)/2.0;
ret=-((a+m)*(a+b))/((a+(2*m))*(a+(2*m)));
}
return n;

Time : 19/09/02 18:25
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
double ret;
double m;
if(n%2==0){
m=n/2.0;
ret=(m*(b-m))/((a+(2*m)-1)*(a+(2*m)));
}else {
m=(n-1.0)/2.0;
ret=-((a+m)*(a+b))/((a+(2*m))*(a+(2*m)));
}
return a<0?-ret:ret;

Time : 19/09/02 18:27
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
double ret;
double m;
if(n%2==0){
m=n/2.0;
ret=(m*(b-m))/((a+(2*m)-1)*(a+(2*m)));
}else {
m=(n-1.0)/2.0;
ret=-((a+m)*(a+b))/((a+(2*m))*(a+(2*m)));
}
if(FastMath.abs(a)>40){
return x>0?1:-1;
}
return ret;

Time : 19/09/02 18:28
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
double ret;
double m;
if(n%2==0){
m=n/2.0;
ret=(m*(b-m))/((a+(2*m)-1)*(a+(2*m)));
}else {
m=(n-1.0)/2.0;
ret=-((a+m)*(a+b))/((a+(2*m))*(a+(2*m)));
}
if(FastMath.abs(a)>40){
return x>0?1:-1;
}
return a<0?-ret:ret;

Time : 19/09/02 18:30
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
double ret;
double m;
if(n%2==0){
m=n/2.0;
ret=(m*(b-m))/((a+(2*m)-1)*(a+(2*m)));
}else {
m=(n-1.0)/2.0;
ret=-((a+m)*(a+b))/((a+(2*m))*(a+(2*m)));
}
return a<0?2-ret:ret;

Time : 19/09/02 18:31
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
double ret;
double m;
if(n%2==0){
m=n/2.0;
ret=(m*(b-m))/((a+(2*m)-1)*(a+(2*m)));
}else {
m=(n-1.0)/2.0;
ret=-((a+m)*(a+b))/((a+(2*m))*(a+(2*m)));
}
if(FastMath.abs(a)>40){
return x>0?0:2;
}
return ret;

Time : 19/09/02 18:32
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
double ret;
double m;
if(n%2==0){
m=n/2.0;
ret=(m*(b-m))/((a+(2*m)-1)*(a+(2*m)));
}else {
m=(n-1.0)/2.0;
ret=-((a+m)*(a+b))/((a+(2*m))*(a+(2*m)));
}
if(FastMath.abs(a)>40){
return x>0?0:2;
}
return a<0?2-ret:ret;

Time : 19/09/02 18:34
----------------------------------------
Mon Sep 02 18:35:34 EDT 2019 org.apache.commons.math3.special.Beta,151
Mon Sep 02 18:35:39 EDT 2019 org.apache.commons.math3.special.Beta,201
Mon Sep 02 18:42:41 EDT 2019 org.apache.commons.math3.special.Beta,50
Mon Sep 02 18:44:33 EDT 2019 org.apache.commons.math3.special.Beta,120
Timeout time : 19/09/02 18:48
