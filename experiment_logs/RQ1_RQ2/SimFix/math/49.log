=================================================
Project : math_49	start : 19/09/02 13:45
Current failed test : org.apache.commons.math.linear.SparseRealVectorTest::testConcurrentModification | 19/09/02 13:45
Mon Sep 02 13:46:53 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,216
Mon Sep 02 13:48:48 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,217
Mon Sep 02 13:48:49 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,564
Mon Sep 02 13:48:54 EDT 2019 Mon Sep 02 13:48:54 EDT 2019 : org.apache.commons.math.linear.AbstractRealVector,67=>Find no block
Mon Sep 02 13:48:55 EDT 2019 org.apache.commons.math.linear.OpenMapRealVector,368
Mon Sep 02 13:57:11 EDT 2019 org.apache.commons.math.linear.OpenMapRealVector,369
Mon Sep 02 13:57:12 EDT 2019 org.apache.commons.math.linear.OpenMapRealVector,370
Mon Sep 02 13:57:14 EDT 2019 org.apache.commons.math.linear.OpenMapRealVector,371
Mon Sep 02 13:57:15 EDT 2019 org.apache.commons.math.linear.OpenMapRealVector,372
Mon Sep 02 13:57:16 EDT 2019 org.apache.commons.math.linear.OpenMapRealVector,373
Mon Sep 02 13:57:17 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,186
Mon Sep 02 13:59:11 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,187
Mon Sep 02 13:59:13 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,354

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final int hash=findInsertionIndex(key);
int index=hash&mask;
if(containsKey(key,index)){
return doRemove(index);
}

Time : 19/09/02 14:00
----------------------------------------
Mon Sep 02 14:05:20 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,355
Mon Sep 02 14:05:21 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,356
Mon Sep 02 14:06:26 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,357
Mon Sep 02 14:06:28 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,394

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
keys[index]=0;
states[index]=REMOVED;
 final double previous=values[index];
values[index]=missingEntries;
--count;
++count;
return previous;

Time : 19/09/02 14:07
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
keys[index]=PERTURB_SHIFT;
states[index]=REMOVED;
 final double previous=values[index];
values[index]=missingEntries;
--count;
++count;
return previous;

Time : 19/09/02 14:09
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
keys[index]=0;
states[index]=FULL;
 final double previous=values[index];
values[index]=missingEntries;
--count;
++count;
return previous;

Time : 19/09/02 14:11
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
keys[index]=PERTURB_SHIFT;
states[index]=FULL;
 final double previous=values[index];
values[index]=missingEntries;
--count;
++count;
return previous;

Time : 19/09/02 14:13
----------------------------------------
Mon Sep 02 14:17:04 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,395
Mon Sep 02 14:17:05 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,396
Mon Sep 02 14:17:07 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,397
Mon Sep 02 14:17:08 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,398
Mon Sep 02 14:17:09 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,399
Mon Sep 02 14:17:10 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,400
Mon Sep 02 14:17:12 EDT 2019 org.apache.commons.math.linear.AbstractRealVector,63
Mon Sep 02 14:22:54 EDT 2019 org.apache.commons.math.linear.AbstractRealVector,64
Mon Sep 02 14:27:58 EDT 2019 org.apache.commons.math.linear.OpenMapRealVector,666

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(entries.containsKey(index)){
entries.remove(virtualSize);
}

Time : 19/09/02 14:28
----------------------------------------
Mon Sep 02 14:30:39 EDT 2019 org.apache.commons.math.linear.OpenMapRealVector,667
Mon Sep 02 14:30:40 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,210

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final int hash=findInsertionIndex(key);
int index=hash&mask;
if(containsKey(key,index)){
return true;
}

Time : 19/09/02 14:31
----------------------------------------
Mon Sep 02 14:36:53 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,211
Mon Sep 02 14:36:54 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,212
Mon Sep 02 14:37:57 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,213
Mon Sep 02 14:37:58 EDT 2019 Mon Sep 02 14:37:58 EDT 2019 : org.apache.commons.math.linear.OpenMapRealVector,33=>Find no block
Mon Sep 02 14:37:59 EDT 2019 Mon Sep 02 14:37:59 EDT 2019 : org.apache.commons.math.util.OpenIntToDoubleHashMap,133=>Find no block
Mon Sep 02 14:38:01 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,134
Mon Sep 02 14:49:53 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,135
Mon Sep 02 14:49:54 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,136
Mon Sep 02 15:00:26 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,137
Mon Sep 02 15:12:16 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,138
Mon Sep 02 15:22:09 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,139

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
System.arraycopy(source.values,0,values,0,length);
states=new byte[length];
System.arraycopy(source.values,0,values,0,length);

Time : 19/09/02 15:23
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
System.arraycopy(source.keys,0,keys,0,length);
states=new byte[length];
System.arraycopy(source.values,0,values,0,length);

Time : 19/09/02 15:27
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
System.arraycopy(source.values,0,values,0,length);
states=new byte[length];
values=new double[length];
System.arraycopy(source.values,0,values,0,length);

Time : 19/09/02 15:30
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
System.arraycopy(source.keys,0,keys,0,length);
states=new byte[length];
values=new double[length];
System.arraycopy(source.values,0,values,0,length);

Time : 19/09/02 15:35
----------------------------------------
Mon Sep 02 15:55:32 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,140

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
states=new byte[length];
System.arraycopy(source.values,0,values,0,length);
missingEntries=source.missingEntries;

Time : 19/09/02 15:57
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
size=source.size;
states=new byte[length];
System.arraycopy(source.values,0,values,0,length);
missingEntries=source.missingEntries;

Time : 19/09/02 16:00
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
states=new byte[length];
System.arraycopy(values,0,values,0,length);
missingEntries=source.missingEntries;

Time : 19/09/02 16:04
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
System.arraycopy(values,0,values,0,length);
states=new byte[length];
System.arraycopy(values,0,values,0,length);
missingEntries=source.missingEntries;

Time : 19/09/02 16:07
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
states=new byte[length];
System.arraycopy(values,0,new double[length],0,length);
missingEntries=source.missingEntries;

Time : 19/09/02 16:12
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
states=new byte[length];
System.arraycopy(values,0,this.values,0,length);
missingEntries=source.missingEntries;

Time : 19/09/02 16:16
----------------------------------------
Mon Sep 02 16:24:46 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,141

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
System.arraycopy(source.values,0,values,0,length);
missingEntries=source.missingEntries;
size=source.size;

Time : 19/09/02 16:25
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
System.arraycopy(source.states,0,states,0,length);
states=new byte[length];
missingEntries=source.missingEntries;
size=source.size;

Time : 19/09/02 16:27
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
System.arraycopy(source.values,0,values,0,length);
states=new byte[length];
missingEntries=source.missingEntries;
size=source.size;

Time : 19/09/02 16:30
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
System.arraycopy(values,0,values,0,length);
missingEntries=source.missingEntries;
size=source.size;

Time : 19/09/02 16:35
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
System.arraycopy(values,0,values,0,length);
System.arraycopy(values,0,values,0,length);
missingEntries=source.missingEntries;
size=source.size;

Time : 19/09/02 16:38
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
System.arraycopy(source.keys,0,keys,0,length);
missingEntries=source.missingEntries;
size=source.size;

Time : 19/09/02 16:42
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
keys=new int[length];
System.arraycopy(source.keys,0,keys,0,length);
missingEntries=source.missingEntries;
size=source.size;

Time : 19/09/02 16:44
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
values=new double[length];
System.arraycopy(source.keys,0,keys,0,length);
missingEntries=source.missingEntries;
size=source.size;

Time : 19/09/02 16:47
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
keys=new int[length];
values=new double[length];
System.arraycopy(source.keys,0,keys,0,length);
missingEntries=source.missingEntries;
size=source.size;

Time : 19/09/02 16:49
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
System.arraycopy(values,0,new double[length],0,length);
missingEntries=source.missingEntries;
size=source.size;

Time : 19/09/02 16:54
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
System.arraycopy(values,0,this.values,0,length);
missingEntries=source.missingEntries;
size=source.size;

Time : 19/09/02 16:57
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
this.values=new double[length];
System.arraycopy(values,0,this.values,0,length);
missingEntries=source.missingEntries;
size=source.size;

Time : 19/09/02 17:00
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
System.arraycopy(source.states,0,states,0,size);
missingEntries=source.missingEntries;
size=source.size;

Time : 19/09/02 17:02
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
values=new double[size];
System.arraycopy(source.states,0,states,0,size);
missingEntries=source.missingEntries;
size=source.size;

Time : 19/09/02 17:05
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
System.arraycopy(source.states,0,states,0,length);
states=new byte[computeCapacity(length)];
missingEntries=source.missingEntries;
size=source.size;

Time : 19/09/02 17:09
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
System.arraycopy(source.states,0,states,0,length);
keys=new int[computeCapacity(length)];
states=new byte[computeCapacity(length)];
missingEntries=source.missingEntries;
size=source.size;

Time : 19/09/02 17:12
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
System.arraycopy(source.states,0,states,0,length);
values=new double[computeCapacity(length)];
states=new byte[computeCapacity(length)];
missingEntries=source.missingEntries;
size=source.size;

Time : 19/09/02 17:14
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
System.arraycopy(source.states,0,states,0,length);
keys=new int[computeCapacity(length)];
values=new double[computeCapacity(length)];
states=new byte[computeCapacity(length)];
missingEntries=source.missingEntries;
size=source.size;

Time : 19/09/02 17:16
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
System.arraycopy(source.states,0,states,0,length);
states=new byte[computeCapacity(length)];
missingEntries=source.missingEntries;
size=size;

Time : 19/09/02 17:20
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
mask=computeCapacity(length)-1;
System.arraycopy(source.states,0,states,0,length);
states=new byte[computeCapacity(length)];
missingEntries=source.missingEntries;
size=source.size;

Time : 19/09/02 17:22
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
System.arraycopy(source.states,0,states,0,length);
keys=new int[computeCapacity(length)];
states=new byte[computeCapacity(length)];
missingEntries=source.missingEntries;
size=size;

Time : 19/09/02 17:24
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
mask=computeCapacity(length)-1;
System.arraycopy(source.states,0,states,0,length);
states=new byte[computeCapacity(length)];
missingEntries=source.missingEntries;
size=size;

Time : 19/09/02 17:27
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
mask=computeCapacity(length)-1;
System.arraycopy(source.states,0,states,0,length);
keys=new int[computeCapacity(length)];
states=new byte[computeCapacity(length)];
missingEntries=source.missingEntries;
size=source.size;

Time : 19/09/02 17:29
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
mask=computeCapacity(length)-1;
System.arraycopy(source.states,0,states,0,length);
keys=new int[computeCapacity(length)];
states=new byte[computeCapacity(length)];
missingEntries=source.missingEntries;
size=size;

Time : 19/09/02 17:31
----------------------------------------
Mon Sep 02 17:34:13 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,142

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
states=new byte[computeCapacity(PERTURB_SHIFT)];
missingEntries=source.missingEntries;
size=source.size;
mask=source.mask;

Time : 19/09/02 17:35
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
keys=new int[computeCapacity(PERTURB_SHIFT)];
states=new byte[computeCapacity(PERTURB_SHIFT)];
missingEntries=source.missingEntries;
size=source.size;
mask=source.mask;

Time : 19/09/02 17:37
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
values=new double[computeCapacity(PERTURB_SHIFT)];
states=new byte[computeCapacity(PERTURB_SHIFT)];
missingEntries=source.missingEntries;
size=source.size;
mask=source.mask;

Time : 19/09/02 17:39
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
keys=new int[computeCapacity(PERTURB_SHIFT)];
values=new double[computeCapacity(PERTURB_SHIFT)];
states=new byte[computeCapacity(PERTURB_SHIFT)];
missingEntries=source.missingEntries;
size=source.size;
mask=source.mask;

Time : 19/09/02 17:41
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
states=new byte[computeCapacity(PERTURB_SHIFT)];
missingEntries=source.missingEntries;
size=size;
mask=source.mask;

Time : 19/09/02 17:44
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
keys=new int[computeCapacity(PERTURB_SHIFT)];
states=new byte[computeCapacity(PERTURB_SHIFT)];
missingEntries=source.missingEntries;
size=size;
mask=source.mask;

Time : 19/09/02 17:46
----------------------------------------
Mon Sep 02 17:48:25 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,143

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
size=source.size;
mask=source.mask;
states=new byte[computeCapacity(PERTURB_SHIFT)];
count=source.count;

Time : 19/09/02 17:50
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
size=source.size;
mask=source.mask;
keys=new int[computeCapacity(PERTURB_SHIFT)];
states=new byte[computeCapacity(PERTURB_SHIFT)];
count=source.count;

Time : 19/09/02 17:52
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
size=source.size;
mask=source.mask;
values=new double[computeCapacity(PERTURB_SHIFT)];
states=new byte[computeCapacity(PERTURB_SHIFT)];
count=source.count;

Time : 19/09/02 17:54
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
size=source.size;
mask=source.mask;
keys=new int[computeCapacity(PERTURB_SHIFT)];
values=new double[computeCapacity(PERTURB_SHIFT)];
states=new byte[computeCapacity(PERTURB_SHIFT)];
count=source.count;

Time : 19/09/02 17:56
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
states=new byte[computeCapacity(PERTURB_SHIFT)];
size=source.size;
mask=source.mask;
count=source.count;

Time : 19/09/02 17:59
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
states=new byte[computeCapacity(PERTURB_SHIFT)];
size=size;
mask=source.mask;
count=source.count;

Time : 19/09/02 18:01
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
states=new byte[computeCapacity(PERTURB_SHIFT)];
size=source.size;
mask=source.mask;
count=count;

Time : 19/09/02 18:03
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
keys=new int[computeCapacity(PERTURB_SHIFT)];
states=new byte[computeCapacity(PERTURB_SHIFT)];
size=source.size;
mask=source.mask;
count=source.count;

Time : 19/09/02 18:05
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
states=new byte[computeCapacity(PERTURB_SHIFT)];
size=size;
mask=source.mask;
count=count;

Time : 19/09/02 18:08
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
keys=new int[computeCapacity(PERTURB_SHIFT)];
states=new byte[computeCapacity(PERTURB_SHIFT)];
size=size;
mask=source.mask;
count=source.count;

Time : 19/09/02 18:10
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
keys=new int[computeCapacity(PERTURB_SHIFT)];
states=new byte[computeCapacity(PERTURB_SHIFT)];
size=source.size;
mask=source.mask;
count=count;

Time : 19/09/02 18:12
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
keys=new int[computeCapacity(PERTURB_SHIFT)];
states=new byte[computeCapacity(PERTURB_SHIFT)];
size=size;
mask=source.mask;
count=count;

Time : 19/09/02 18:14
----------------------------------------
Mon Sep 02 18:16:41 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,144
Mon Sep 02 18:16:42 EDT 2019 Mon Sep 02 18:16:42 EDT 2019 : org.apache.commons.math.util.OpenIntToDoubleHashMap,145=>Find no block
Mon Sep 02 18:16:43 EDT 2019 Mon Sep 02 18:16:43 EDT 2019 : org.apache.commons.math.linear.OpenMapRealVector,74=>Find no block
Mon Sep 02 18:16:44 EDT 2019 org.apache.commons.math.linear.OpenMapRealVector,75
Mon Sep 02 18:18:30 EDT 2019 org.apache.commons.math.linear.OpenMapRealVector,76
Mon Sep 02 18:18:32 EDT 2019 org.apache.commons.math.linear.OpenMapRealVector,77
Mon Sep 02 18:18:33 EDT 2019 Mon Sep 02 18:18:33 EDT 2019 : org.apache.commons.math.linear.OpenMapRealVector,78=>Find no block
Mon Sep 02 18:18:34 EDT 2019 Mon Sep 02 18:18:34 EDT 2019 : org.apache.commons.math.linear.OpenMapRealVector,179=>Find no block
Mon Sep 02 18:18:35 EDT 2019 org.apache.commons.math.linear.OpenMapRealVector,180
Mon Sep 02 18:19:27 EDT 2019 org.apache.commons.math.linear.OpenMapRealVector,181
Mon Sep 02 18:19:28 EDT 2019 org.apache.commons.math.linear.OpenMapRealVector,182
Mon Sep 02 18:19:30 EDT 2019 Mon Sep 02 18:19:30 EDT 2019 : org.apache.commons.math.linear.OpenMapRealVector,183=>Find no block
Mon Sep 02 18:19:31 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,529
Mon Sep 02 18:19:32 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,532
Mon Sep 02 18:20:46 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,535
Mon Sep 02 18:21:42 EDT 2019 org.apache.commons.math.linear.OpenMapRealVector,208
Mon Sep 02 18:22:17 EDT 2019 org.apache.commons.math.linear.OpenMapRealVector,663

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
index=0;
checkIndex(index);
if(!isDefaultValue(value)){
entries.put(index,value);
}else if(entries.containsKey(index)){
entries.remove(index);
}

Time : 19/09/02 18:23
----------------------------------------
Mon Sep 02 18:26:02 EDT 2019 org.apache.commons.math.linear.OpenMapRealVector,664
Mon Sep 02 18:26:03 EDT 2019 org.apache.commons.math.linear.OpenMapRealVector,665
Mon Sep 02 18:26:04 EDT 2019 Mon Sep 02 18:26:04 EDT 2019 : org.apache.commons.math.linear.OpenMapRealVector,669=>Find no block
Mon Sep 02 18:26:05 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,241
Mon Sep 02 18:26:09 EDT 2019 Mon Sep 02 18:26:09 EDT 2019 : org.apache.commons.math.util.OpenIntToDoubleHashMap,40=>Find no block
Mon Sep 02 18:26:10 EDT 2019 Mon Sep 02 18:26:10 EDT 2019 : org.apache.commons.math.util.OpenIntToDoubleHashMap,498=>Find no block
Mon Sep 02 18:26:11 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,501
Mon Sep 02 18:26:46 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,504
Mon Sep 02 18:26:47 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,506
Mon Sep 02 18:26:48 EDT 2019 Mon Sep 02 18:26:48 EDT 2019 : org.apache.commons.math.util.OpenIntToDoubleHashMap,509=>Find no block
Mon Sep 02 18:26:50 EDT 2019 Mon Sep 02 18:26:50 EDT 2019 : org.apache.commons.math.util.OpenIntToDoubleHashMap,511=>Find no block
Mon Sep 02 18:26:51 EDT 2019 Mon Sep 02 18:26:51 EDT 2019 : org.apache.commons.math.util.OpenIntToDoubleHashMap,484=>Find no block
Mon Sep 02 18:26:52 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,518
Mon Sep 02 18:26:55 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,546
Mon Sep 02 18:26:57 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,549
Mon Sep 02 18:26:58 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,552
Mon Sep 02 18:27:55 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,563
Mon Sep 02 18:27:56 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,568

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(current!=count){
throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);
}
current=next;
try{
while(states[++next]!=FULL){
}
}catch (ArrayIndexOutOfBoundsException e) {
  next=-2;
  if (current < 0) {
    throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);
  }
}


Time : 19/09/02 18:28
----------------------------------------
Mon Sep 02 18:31:11 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,572
Mon Sep 02 18:31:12 EDT 2019 Mon Sep 02 18:31:12 EDT 2019 : org.apache.commons.math.util.OpenIntToDoubleHashMap,580=>Find no block
Mon Sep 02 18:31:13 EDT 2019 Mon Sep 02 18:31:13 EDT 2019 : org.apache.commons.math.util.OpenIntToDoubleHashMap,582=>Find no block
Mon Sep 02 18:31:14 EDT 2019 org.apache.commons.math.linear.OpenMapRealVector,479
Mon Sep 02 18:32:36 EDT 2019 org.apache.commons.math.linear.OpenMapRealVector,480
Mon Sep 02 18:32:37 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,180
Mon Sep 02 18:35:29 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,181
Mon Sep 02 18:35:30 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,182
Mon Sep 02 18:36:29 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,385
Mon Sep 02 18:36:32 EDT 2019 org.apache.commons.math.linear.AbstractRealVector,76
Mon Sep 02 18:37:55 EDT 2019 Mon Sep 02 18:37:55 EDT 2019 : org.apache.commons.math.linear.AbstractRealVector,81=>Find no block
Mon Sep 02 18:37:56 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,103
Mon Sep 02 18:38:00 EDT 2019 Mon Sep 02 18:38:00 EDT 2019 : org.apache.commons.math.util.OpenIntToDoubleHashMap,104=>Find no block
Mon Sep 02 18:38:01 EDT 2019 Mon Sep 02 18:38:01 EDT 2019 : org.apache.commons.math.util.OpenIntToDoubleHashMap,120=>Find no block
Mon Sep 02 18:38:02 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,121
Mon Sep 02 18:41:14 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,122
Mon Sep 02 18:41:15 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,123
Mon Sep 02 18:41:16 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,124
Mon Sep 02 18:41:17 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,125
Mon Sep 02 18:41:19 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,126
Mon Sep 02 18:41:20 EDT 2019 Mon Sep 02 18:41:20 EDT 2019 : org.apache.commons.math.util.OpenIntToDoubleHashMap,127=>Find no block
Mon Sep 02 18:41:21 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,153
Mon Sep 02 18:41:24 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,156
Mon Sep 02 18:42:00 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,157
Mon Sep 02 18:42:01 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,158
Mon Sep 02 18:42:02 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,159
Mon Sep 02 18:42:04 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,259

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
return changeIndexSign(PERTURB_SHIFT);

Time : 19/09/02 18:42
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
return changeIndexSign(mask);

Time : 19/09/02 18:44
----------------------------------------
Mon Sep 02 18:46:47 EDT 2019 org.apache.commons.math.util.OpenIntToDoubleHashMap,272
Timeout time : 19/09/02 18:46
