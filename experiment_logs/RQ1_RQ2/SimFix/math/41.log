=================================================
Project : math_41	start : 19/09/02 13:43
Current failed test : org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted | 19/09/02 13:44
Mon Sep 02 13:45:06 EDT 2019 org.apache.commons.math.stat.descriptive.moment.Variance,370
Mon Sep 02 13:47:12 EDT 2019 org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic,222
Mon Sep 02 13:47:50 EDT 2019 org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic,258
Mon Sep 02 13:48:08 EDT 2019 org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic,262
Mon Sep 02 13:51:46 EDT 2019 org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic,266
Mon Sep 02 13:55:16 EDT 2019 org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic,267
Mon Sep 02 14:21:26 EDT 2019 org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic,268
Mon Sep 02 14:21:27 EDT 2019 org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic,271
Mon Sep 02 14:21:28 EDT 2019 org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic,274
Mon Sep 02 14:21:29 EDT 2019 org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic,277
Mon Sep 02 14:21:30 EDT 2019 org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic,278
Mon Sep 02 14:21:31 EDT 2019 org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic,282
Mon Sep 02 14:21:35 EDT 2019 org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic,286
Mon Sep 02 14:22:28 EDT 2019 org.apache.commons.math.stat.descriptive.moment.Variance,316

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,m,begin,length);
}

Time : 19/09/02 14:23
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,begin,length);
var=evaluate(values,m,begin,length);
}

Time : 19/09/02 14:24
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(length>values.length){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,weights,m,begin,length);
}

Time : 19/09/02 14:25
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(begin+length>values.length){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,weights,m,begin,length);
}

Time : 19/09/02 14:26
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(begin>values.length){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,weights,m,begin,length);
}

Time : 19/09/02 14:27
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
values[begin]=var;
if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,weights,m,begin,length);
}

Time : 19/09/02 14:29
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(length==1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,m,begin,length);
}

Time : 19/09/02 14:30
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(length==1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,begin,length);
var=evaluate(values,m,begin,length);
}

Time : 19/09/02 14:31
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(length!=1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,weights,m,begin,length);
}

Time : 19/09/02 14:32
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(weights.length!=1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,weights,m,begin,length);
}

Time : 19/09/02 14:34
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(weights.length==values.length){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,weights,m,begin,length);
}

Time : 19/09/02 14:35
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(test(values,weights,begin,length)){
clear();
if(length==1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,m,begin,length);
}
}

Time : 19/09/02 14:38
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(test(values,begin,length)){
clear();
if(length==1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,m,begin,length);
}
}

Time : 19/09/02 14:39
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(test(values,weights,begin,length)){
clear();
if(length==1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,begin,length);
var=evaluate(values,m,begin,length);
}
}

Time : 19/09/02 14:40
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(test(values,begin,length)){
clear();
if(length==1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,begin,length);
var=evaluate(values,m,begin,length);
}
}

Time : 19/09/02 14:41
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
double var=Double.NaN;
if(test(values,weights,begin,length)){
clear();
if(length==1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,m,begin,length);
}
}

Time : 19/09/02 14:43
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
double var=Double.NaN;
if(test(values,begin,length)){
clear();
if(length==1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,m,begin,length);
}
}

Time : 19/09/02 14:44
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
double var=Double.NaN;
if(test(values,weights,begin,length)){
clear();
if(length==1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,begin,length);
var=evaluate(values,m,begin,length);
}
}

Time : 19/09/02 14:45
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
double var=Double.NaN;
if(test(values,begin,length)){
clear();
if(length==1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,begin,length);
var=evaluate(values,m,begin,length);
}
}

Time : 19/09/02 14:46
----------------------------------------
Mon Sep 02 14:50:26 EDT 2019 org.apache.commons.math.stat.descriptive.moment.Variance,318
Mon Sep 02 14:50:28 EDT 2019 org.apache.commons.math.stat.descriptive.moment.Variance,319
Mon Sep 02 14:50:29 EDT 2019 org.apache.commons.math.stat.descriptive.moment.Variance,320
Mon Sep 02 14:50:30 EDT 2019 org.apache.commons.math.stat.descriptive.moment.Variance,322
Mon Sep 02 14:50:31 EDT 2019 org.apache.commons.math.stat.descriptive.moment.Variance,323
Mon Sep 02 14:50:32 EDT 2019 org.apache.commons.math.stat.descriptive.moment.Variance,324
Mon Sep 02 14:50:33 EDT 2019 org.apache.commons.math.stat.descriptive.moment.Variance,325
Mon Sep 02 14:50:34 EDT 2019 org.apache.commons.math.stat.descriptive.moment.Variance,328

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(test(values,weights,begin,length)){
clear();
if(length==1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,m,begin,length);
}
}
return var;

Time : 19/09/02 14:51
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(test(values,begin,length)){
clear();
if(length==1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,m,begin,length);
}
}
return var;

Time : 19/09/02 14:52
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(test(values,weights,begin,length)){
clear();
if(length==1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,begin,length);
var=evaluate(values,m,begin,length);
}
}
return var;

Time : 19/09/02 14:53
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(test(values,begin,length)){
clear();
if(length==1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,begin,length);
var=evaluate(values,m,begin,length);
}
}
return var;

Time : 19/09/02 14:54
----------------------------------------
Mon Sep 02 14:56:52 EDT 2019 org.apache.commons.math.stat.descriptive.moment.Variance,504

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
accum=dev/accum2;
for(int i=begin;i<begin+length;i++){
dev=values[i]-mean;
accum+=weights[i]*(dev*dev);
accum2+=weights[i]*dev;
}

Time : 19/09/02 15:03
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
dev=mean-var;
accum=dev/accum2;
for(int i=begin;i<begin+length;i++){
dev=values[i]-mean;
accum+=weights[i]*(dev*dev);
accum2+=weights[i]*dev;
}

Time : 19/09/02 15:04
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
accum=dev/accum2;
var+=accum;
for(int i=begin;i<begin+length;i++){
dev=values[i]-mean;
accum+=weights[i]*(dev*dev);
accum2+=weights[i]*dev;
}

Time : 19/09/02 15:05
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
dev=mean-var;
accum=dev/accum2;
var+=accum;
for(int i=begin;i<begin+length;i++){
dev=values[i]-mean;
accum+=weights[i]*(dev*dev);
accum2+=weights[i]*dev;
}

Time : 19/09/02 15:06
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
accum2=var*dev;
for(int i=begin;i<begin+length;i++){
dev=values[i]-mean;
accum+=weights[i]*(dev*dev);
accum2+=weights[i]*dev;
}

Time : 19/09/02 15:08
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
accum=var*dev-mean;
for(int i=begin;i<begin+length;i++){
dev=values[i]-mean;
accum+=weights[i]*(dev*dev);
accum2+=weights[i]*dev;
}

Time : 19/09/02 15:09
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
dev=(weights[begin]-accum)*var+2.0*var;
accum2=var*dev;
for(int i=begin;i<begin+length;i++){
dev=values[i]-mean;
accum+=weights[i]*(dev*dev);
accum2+=weights[i]*dev;
}

Time : 19/09/02 15:11
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
dev=(weights[begin]-accum)*var+2.0*var;
accum=var*dev-mean;
for(int i=begin;i<begin+length;i++){
dev=values[i]-mean;
accum+=weights[i]*(dev*dev);
accum2+=weights[i]*dev;
}

Time : 19/09/02 15:12
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
accum2=var*dev;
weights[begin+1]=accum+accum2;
for(int i=begin;i<begin+length;i++){
dev=values[i]-mean;
accum+=weights[i]*(dev*dev);
accum2+=weights[i]*dev;
}

Time : 19/09/02 15:13
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
accum2=var*dev;
accum=var*dev-mean;
for(int i=begin;i<begin+length;i++){
dev=values[i]-mean;
accum+=weights[i]*(dev*dev);
accum2+=weights[i]*dev;
}

Time : 19/09/02 15:14
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
weights[begin+1]=accum+accum2;
accum=var*dev-mean;
for(int i=begin;i<begin+length;i++){
dev=values[i]-mean;
accum+=weights[i]*(dev*dev);
accum2+=weights[i]*dev;
}

Time : 19/09/02 15:15
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
dev=(weights[begin]-accum)*var+2.0*var;
accum2=var*dev;
weights[begin+1]=accum+accum2;
for(int i=begin;i<begin+length;i++){
dev=values[i]-mean;
accum+=weights[i]*(dev*dev);
accum2+=weights[i]*dev;
}

Time : 19/09/02 15:16
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
dev=(weights[begin]-accum)*var+2.0*var;
accum2=var*dev;
accum=var*dev-mean;
for(int i=begin;i<begin+length;i++){
dev=values[i]-mean;
accum+=weights[i]*(dev*dev);
accum2+=weights[i]*dev;
}

Time : 19/09/02 15:17
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
dev=(weights[begin]-accum)*var+2.0*var;
weights[begin+1]=accum+accum2;
accum=var*dev-mean;
for(int i=begin;i<begin+length;i++){
dev=values[i]-mean;
accum+=weights[i]*(dev*dev);
accum2+=weights[i]*dev;
}

Time : 19/09/02 15:18
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
accum2=var*dev;
weights[begin+1]=accum+accum2;
accum=var*dev-mean;
for(int i=begin;i<begin+length;i++){
dev=values[i]-mean;
accum+=weights[i]*(dev*dev);
accum2+=weights[i]*dev;
}

Time : 19/09/02 15:19
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
dev=(weights[begin]-accum)*var+2.0*var;
accum2=var*dev;
weights[begin+1]=accum+accum2;
accum=var*dev-mean;
for(int i=begin;i<begin+length;i++){
dev=values[i]-mean;
accum+=weights[i]*(dev*dev);
accum2+=weights[i]*dev;
}

Time : 19/09/02 15:20
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
accum2=var;
for(int i=begin;i<begin+length;i++){
dev=values[i]-mean;
accum+=weights[i]*(dev*dev);
accum2+=weights[i]*dev;
}

Time : 19/09/02 15:22
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
accum=var;
for(int i=begin;i<begin+length;i++){
dev=values[i]-mean;
accum+=weights[i]*(dev*dev);
accum2+=weights[i]*dev;
}

Time : 19/09/02 15:23
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
accum2=mean;
accum=var;
for(int i=begin;i<begin+length;i++){
dev=values[i]-mean;
accum+=weights[i]*(dev*dev);
accum2+=weights[i]*dev;
}

Time : 19/09/02 15:24
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int i=begin;i<begin;i++){
sumWts+=weights[i];
}

Time : 19/09/02 15:26
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int i=begin;i<begin+length;i++){
sumWts+=weights[i];
}

Time : 19/09/02 15:27
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.6071504429856334 : [/home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ1/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java=>0,0]
for(int i=begin;i<begin+length;i++){
sumLog+=FastMath.log(values[i]);
}

Time : 19/09/02 15:28
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ1/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java=>520,522]
for(int i=0;i<weights.length;i++){
sumWts+=weights[i];
}

Time : 19/09/02 15:28
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ1/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java=>520,522]
for(int i=begin;i<begin+length;i++){
sumWts+=weights[i];
}

Time : 19/09/02 15:28
----------------------------------------
Success time : 19/09/02 15:28
