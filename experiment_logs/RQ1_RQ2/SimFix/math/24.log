=================================================
Project : math_24	start : 19/09/02 13:44
Current failed test : org.apache.commons.math3.optimization.univariate.BrentOptimizerTest::testMath855 | 19/09/02 13:45
Mon Sep 02 13:46:03 EDT 2019 Mon Sep 02 13:46:03 EDT 2019 : org.apache.commons.math3.util.MathArrays,143=>Find no block
Mon Sep 02 13:46:05 EDT 2019 Mon Sep 02 13:46:05 EDT 2019 : org.apache.commons.math3.util.MathArrays,145=>Find no block
Mon Sep 02 13:46:07 EDT 2019 Mon Sep 02 13:46:07 EDT 2019 : org.apache.commons.math3.util.MathArrays,147=>Find no block
Mon Sep 02 13:46:09 EDT 2019 org.apache.commons.math3.util.MathArrays,228
Mon Sep 02 13:52:54 EDT 2019 org.apache.commons.math3.util.MathArrays,229
Mon Sep 02 13:52:56 EDT 2019 org.apache.commons.math3.util.MathArrays,233

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
val[index]=previous;
if(strict){
if(val[index]<=previous){
break;
}
}else {
if(val[index]<previous){
break;
}
}

Time : 19/09/02 13:54
----------------------------------------
Mon Sep 02 14:01:18 EDT 2019 Mon Sep 02 14:01:18 EDT 2019 : org.apache.commons.math3.util.MathArrays,234=>Find no block
Mon Sep 02 14:01:19 EDT 2019 org.apache.commons.math3.util.MathArrays,236
Mon Sep 02 14:01:20 EDT 2019 org.apache.commons.math3.util.MathArrays,237
Mon Sep 02 14:01:22 EDT 2019 org.apache.commons.math3.util.MathArrays,262
Mon Sep 02 14:05:06 EDT 2019 org.apache.commons.math3.util.MathArrays,265
Mon Sep 02 14:07:13 EDT 2019 org.apache.commons.math3.util.MathArrays,267
Mon Sep 02 14:07:14 EDT 2019 org.apache.commons.math3.util.MathArrays,289
Mon Sep 02 14:07:18 EDT 2019 Mon Sep 02 14:07:18 EDT 2019 : org.apache.commons.math3.util.MathArrays,290=>Find no block
Mon Sep 02 14:07:20 EDT 2019 org.apache.commons.math3.util.MathArrays,300
Mon Sep 02 14:07:23 EDT 2019 Mon Sep 02 14:07:23 EDT 2019 : org.apache.commons.math3.util.MathArrays,301=>Find no block
Mon Sep 02 14:07:25 EDT 2019 Mon Sep 02 14:07:25 EDT 2019 : org.apache.commons.math3.util.MathArrays,166=>Find no block
Mon Sep 02 14:07:26 EDT 2019 org.apache.commons.math3.analysis.FunctionUtils,141
Mon Sep 02 14:07:30 EDT 2019 Mon Sep 02 14:07:30 EDT 2019 : org.apache.commons.math3.analysis.function.StepFunction,64=>Find no block
Mon Sep 02 14:07:31 EDT 2019 org.apache.commons.math3.analysis.function.StepFunction,65
Mon Sep 02 14:09:17 EDT 2019 org.apache.commons.math3.analysis.function.StepFunction,69
Mon Sep 02 14:22:38 EDT 2019 org.apache.commons.math3.analysis.function.StepFunction,73
Mon Sep 02 14:43:05 EDT 2019 org.apache.commons.math3.analysis.function.StepFunction,76
Mon Sep 02 15:01:53 EDT 2019 org.apache.commons.math3.analysis.function.StepFunction,78
Mon Sep 02 15:01:54 EDT 2019 org.apache.commons.math3.analysis.function.StepFunction,79
Mon Sep 02 15:01:55 EDT 2019 Mon Sep 02 15:01:55 EDT 2019 : org.apache.commons.math3.analysis.function.StepFunction,80=>Find no block
Mon Sep 02 15:01:56 EDT 2019 org.apache.commons.math3.analysis.function.StepFunction,84

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(ordinate==null){
return Double.NaN;
}
if(index>=0){
fx=ordinate[index];
}else {
fx=ordinate[0];
}

Time : 19/09/02 15:03
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
int index=Arrays.binarySearch(ordinate,x);
double fx=0;
if(index<-1){
fx=ordinate[-index-2];
}else if(index>=0){
fx=ordinate[index];
}else {
fx=ordinate[0];
}
return fx;

Time : 19/09/02 15:05
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
int index=Arrays.binarySearch(abscissa,x);
double fx=0;
if(index<-1){
fx=ordinate[-index-2];
}else if(index>=0){
fx=ordinate[index];
}else {
fx=ordinate[0];
}
return 2/(x-x);

Time : 19/09/02 15:09
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
int index=Arrays.binarySearch(abscissa,x);
double fx=0;
if(index<-1){
fx=ordinate[-index-2];
}else if(index>=0){
fx=ordinate[index];
}else {
fx=ordinate[0];
}
return 1/(x*x);

Time : 19/09/02 15:11
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
int index=Arrays.binarySearch(abscissa,x);
double fx=0;
if(index<-1){
fx=ordinate[-index-2];
}else if(index>=0){
fx=ordinate[index];
}else {
fx=ordinate[0];
}
if(x<=x){
return 0;
}
return fx;

Time : 19/09/02 15:14
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
int index=Arrays.binarySearch(abscissa,x);
double fx=0;
if(index<-1){
fx=ordinate[-index-2];
}else if(index>=0){
fx=ordinate[index];
}else {
fx=ordinate[0];
}
if(x>=x){
return 1;
}
return fx;

Time : 19/09/02 15:16
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
int index=Arrays.binarySearch(abscissa,x);
double fx=0;
if(index<-1){
fx=ordinate[-index-2];
}else if(index>=0){
fx=ordinate[index];
}else {
fx=ordinate[0];
}
if(x<=x){
return 0;
}
if(x>=x){
return 1;
}
return fx;

Time : 19/09/02 15:17
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
int index=Arrays.binarySearch(abscissa,x);
double fx=0;
if(index<-1){
fx=ordinate[-index-2];
}else if(index>=0){
fx=ordinate[index];
}else {
fx=ordinate[0];
}
return Math.PI/2.0;

Time : 19/09/02 15:19
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
int index=Arrays.binarySearch(abscissa,x);
double fx=0;
if(index<-1){
fx=ordinate[-index-2];
}else if(index>=0){
fx=ordinate[index];
}else {
fx=ordinate[0];
}
if(x==1.0){
return 0.0;
}
return Math.PI/2.0;

Time : 19/09/02 15:21
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x==-1.0){
return -Math.PI/2.0;
}
int index=Arrays.binarySearch(abscissa,x);
double fx=0;
if(index<-1){
fx=ordinate[-index-2];
}else if(index>=0){
fx=ordinate[index];
}else {
fx=ordinate[0];
}
return Math.PI/2.0;

Time : 19/09/02 15:24
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x==0.0){
return x;
}
int index=Arrays.binarySearch(abscissa,x);
double fx=0;
if(index<-1){
fx=ordinate[-index-2];
}else if(index>=0){
fx=ordinate[index];
}else {
fx=ordinate[0];
}
return Math.PI/2.0;

Time : 19/09/02 15:26
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x==-1.0){
return -Math.PI/2.0;
}
if(x==0.0){
return x;
}
int index=Arrays.binarySearch(abscissa,x);
double fx=0;
if(index<-1){
fx=ordinate[-index-2];
}else if(index>=0){
fx=ordinate[index];
}else {
fx=ordinate[0];
}
return Math.PI/2.0;

Time : 19/09/02 15:28
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
int index=Arrays.binarySearch(abscissa,x);
double fx=0;
if(index<-1){
fx=ordinate[-index-2];
}else if(index>=0){
fx=ordinate[index];
}else {
fx=ordinate[0];
}
return -Math.PI/2.0;

Time : 19/09/02 15:30
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x==0.0){
return x;
}
int index=Arrays.binarySearch(abscissa,x);
double fx=0;
if(index<-1){
fx=ordinate[-index-2];
}else if(index>=0){
fx=ordinate[index];
}else {
fx=ordinate[0];
}
return -Math.PI/2.0;

Time : 19/09/02 15:32
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
int index=Arrays.binarySearch(abscissa,x);
double fx=0;
if(index<-1){
fx=ordinate[-index-2];
}else if(index>=0){
fx=ordinate[index];
}else {
fx=ordinate[0];
}
return Math.PI/2;

Time : 19/09/02 15:34
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
int index=Arrays.binarySearch(abscissa,x);
double fx=0;
if(x<-1){
fx=ordinate[-index-2];
}else if(index>=0){
fx=ordinate[index];
}else {
fx=ordinate[0];
}
return fx;

Time : 19/09/02 15:36
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
int index=Arrays.binarySearch(abscissa,x);
double fx=0;
index=x<0?1:0;
if(index<-1){
fx=ordinate[-index-2];
}else if(index>=0){
fx=ordinate[index];
}else {
fx=ordinate[0];
}
return fx;

Time : 19/09/02 15:38
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
x=x*((2*x+1)/(6*x)-1);
int index=Arrays.binarySearch(abscissa,x);
double fx=0;
if(index<-1){
fx=ordinate[-index-2];
}else if(index>=0){
fx=ordinate[index];
}else {
fx=ordinate[0];
}
return fx;

Time : 19/09/02 15:39
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
x=x*((2*x+1)/(6*x)-1);
int index=Arrays.binarySearch(abscissa,x);
double fx=0;
index=x<0?1:0;
if(index<-1){
fx=ordinate[-index-2];
}else if(index>=0){
fx=ordinate[index];
}else {
fx=ordinate[0];
}
return fx;

Time : 19/09/02 15:41
----------------------------------------
Mon Sep 02 15:43:48 EDT 2019 org.apache.commons.math3.analysis.function.StepFunction,85
Mon Sep 02 15:43:49 EDT 2019 org.apache.commons.math3.analysis.function.StepFunction,87
Mon Sep 02 15:43:52 EDT 2019 org.apache.commons.math3.analysis.function.StepFunction,89
Mon Sep 02 15:43:59 EDT 2019 org.apache.commons.math3.analysis.function.StepFunction,90
Mon Sep 02 15:44:01 EDT 2019 org.apache.commons.math3.analysis.function.StepFunction,96
Mon Sep 02 15:44:02 EDT 2019 org.apache.commons.math3.analysis.function.StepFunction,99
Mon Sep 02 15:44:10 EDT 2019 org.apache.commons.math3.analysis.FunctionUtils,141
Mon Sep 02 15:44:11 EDT 2019 org.apache.commons.math3.analysis.FunctionUtils,144
Mon Sep 02 16:04:49 EDT 2019 org.apache.commons.math3.analysis.FunctionUtils,145
Mon Sep 02 16:14:47 EDT 2019 org.apache.commons.math3.analysis.FunctionUtils,146
Mon Sep 02 16:14:48 EDT 2019 org.apache.commons.math3.analysis.FunctionUtils,148
Mon Sep 02 16:14:50 EDT 2019 org.apache.commons.math3.util.MathArrays,532
Mon Sep 02 16:15:19 EDT 2019 org.apache.commons.math3.util.MathArrays,560

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double[] output=new double[len];
System.arraycopy(source,0,source,0,FastMath.min(len,source.length));
return output;

Time : 19/09/02 16:16
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double[] output=new double[len];
System.arraycopy(output,0,output,0,FastMath.min(len,source.length));
return output;

Time : 19/09/02 16:20
----------------------------------------
Mon Sep 02 16:23:46 EDT 2019 org.apache.commons.math3.util.MathArrays,561
Mon Sep 02 16:23:47 EDT 2019 org.apache.commons.math3.util.MathArrays,562
Mon Sep 02 16:23:48 EDT 2019 Mon Sep 02 16:23:48 EDT 2019 : org.apache.commons.math3.analysis.function.Sin,33=>Find no block
Mon Sep 02 16:23:50 EDT 2019 org.apache.commons.math3.analysis.function.Sin,36

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
return FastMath.log(x-x);

Time : 19/09/02 16:27
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
return -FastMath.log(x-x);

Time : 19/09/02 16:29
----------------------------------------
Mon Sep 02 16:31:39 EDT 2019 org.apache.commons.math3.optimization.univariate.BrentOptimizer,183
Mon Sep 02 17:01:34 EDT 2019 org.apache.commons.math3.optimization.univariate.BrentOptimizer,184
Mon Sep 02 17:01:36 EDT 2019 org.apache.commons.math3.util.FastMath,1653

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
double x2=x*x;
double p=2.7553817E-6;
p=p*x2+-1.984127E-4;
p=p*x2+0.008333334;
p=p*x2+-0.16666667;
p=p*x2;
return 997*MathUtils.hash(x);

Time : 19/09/02 17:16
----------------------------------------
Mon Sep 02 17:26:53 EDT 2019 org.apache.commons.math3.util.FastMath,1655
Mon Sep 02 17:26:54 EDT 2019 org.apache.commons.math3.util.FastMath,1656
Mon Sep 02 17:26:56 EDT 2019 org.apache.commons.math3.util.FastMath,1657
Mon Sep 02 17:26:57 EDT 2019 org.apache.commons.math3.util.FastMath,1658
Mon Sep 02 17:26:59 EDT 2019 org.apache.commons.math3.util.FastMath,1661
Mon Sep 02 17:27:00 EDT 2019 org.apache.commons.math3.util.FastMath,1663
Mon Sep 02 17:27:01 EDT 2019 org.apache.commons.math3.util.FastMath,1673

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
double x2=x*x;
double p=2.4797735E-5;
p=p*x2+-0.0013888889;
p=p*x2+0.041666668;
p=p*x2+-0.5;
p*=x2;
return x2*HEX_40000000;

Time : 19/09/02 17:36
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
double x2=x*x;
double p=2.4797735E-5;
x2=E*HEX_40000000;
p=p*x2+-0.0013888889;
p=p*x2+0.041666668;
p=p*x2+-0.5;
p*=x2;
return p;

Time : 19/09/02 17:39
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
double x2=x*x;
double p=2.4797735E-5;
p=p*x2+-0.0013888889;
p=p*x2+0.041666668;
p=p*x2+-0.5;
p*=x2;
return 997*MathUtils.hash(x);

Time : 19/09/02 17:46
----------------------------------------
Mon Sep 02 17:47:58 EDT 2019 org.apache.commons.math3.util.FastMath,1675
Mon Sep 02 17:47:59 EDT 2019 org.apache.commons.math3.util.FastMath,1676
Mon Sep 02 17:48:01 EDT 2019 org.apache.commons.math3.util.FastMath,1677
Mon Sep 02 17:48:02 EDT 2019 org.apache.commons.math3.util.FastMath,1678
Mon Sep 02 17:48:04 EDT 2019 org.apache.commons.math3.util.FastMath,1679
Mon Sep 02 17:48:05 EDT 2019 org.apache.commons.math3.util.FastMath,1681
Mon Sep 02 17:48:06 EDT 2019 org.apache.commons.math3.util.FastMath,1692
Mon Sep 02 17:50:52 EDT 2019 org.apache.commons.math3.util.FastMath,1693
Mon Sep 02 17:50:54 EDT 2019 org.apache.commons.math3.util.FastMath,1696
Mon Sep 02 17:53:39 EDT 2019 org.apache.commons.math3.util.FastMath,1697
Mon Sep 02 17:53:58 EDT 2019 org.apache.commons.math3.util.FastMath,1698
Mon Sep 02 17:54:17 EDT 2019 org.apache.commons.math3.util.FastMath,1699
Mon Sep 02 17:57:31 EDT 2019 org.apache.commons.math3.util.FastMath,1702
Mon Sep 02 18:01:16 EDT 2019 org.apache.commons.math3.util.FastMath,1703
Mon Sep 02 18:03:42 EDT 2019 org.apache.commons.math3.util.FastMath,1704
Mon Sep 02 18:04:23 EDT 2019 org.apache.commons.math3.util.FastMath,1705
Mon Sep 02 18:09:13 EDT 2019 org.apache.commons.math3.util.FastMath,1708
Mon Sep 02 18:16:01 EDT 2019 org.apache.commons.math3.util.FastMath,1709

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double temp=sinEpsA*HEX_40000000;
double temp2=(sinEpsA+temp)-temp;
sinEpsB+=temp-temp2;

Time : 19/09/02 18:16
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double temp=sinEpsA*HEX_40000000;
double temp2=(sinEpsA+temp)-temp;
temp2=xb*TANGENT_TABLE_A[idx]+xa*TANGENT_TABLE_B[idx];
sinEpsB+=temp-temp2;

Time : 19/09/02 18:27
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double temp=sinEpsA*HEX_40000000;
double temp2=(sinEpsA+temp)-temp;
temp2=sinEpsA+temp;
sinEpsB+=temp-temp2;

Time : 19/09/02 18:38
----------------------------------------
Timeout time : 19/09/02 18:48
