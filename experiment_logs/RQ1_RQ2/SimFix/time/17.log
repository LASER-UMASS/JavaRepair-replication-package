=================================================
Project : time_17	start : 19/09/02 15:32
Current failed test : org.joda.time.TestDateTimeZoneCutover::testBug3476684_adjustOffset | 19/09/02 15:32
Mon Sep 02 15:34:55 EDT 2019 org.joda.time.DateTimeZone,1167
Mon Sep 02 16:03:25 EDT 2019 org.joda.time.DateTimeZone,1168
Mon Sep 02 16:03:29 EDT 2019 org.joda.time.DateTimeZone,1169
Mon Sep 02 16:03:33 EDT 2019 org.joda.time.DateTimeZone,1174
Mon Sep 02 16:03:37 EDT 2019 org.joda.time.DateTimeZone,1175
Mon Sep 02 16:03:40 EDT 2019 org.joda.time.DateTime,665
Mon Sep 02 16:04:55 EDT 2019 org.joda.time.DateTime,666
Mon Sep 02 16:04:56 EDT 2019 org.joda.time.DateTime,685
Mon Sep 02 16:05:59 EDT 2019 org.joda.time.DateTime,686
Mon Sep 02 16:06:00 EDT 2019 org.joda.time.DateTime,331
Mon Sep 02 16:06:19 EDT 2019 Mon Sep 02 16:06:19 EDT 2019 : org.joda.time.DateTime,333=>Find no block
Mon Sep 02 16:06:21 EDT 2019 org.joda.time.DateTime,1098
Mon Sep 02 16:06:31 EDT 2019 org.joda.time.DateTime,1101

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(hours==0){
return this;
}
long instant=getChronology().hours().getDifference(getMillis(),hours);
return withMillis(instant);

Time : 19/09/02 16:09
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(hours!=0){
return this;
}
long instant=getChronology().hours().add(getMillis(),hours);
return withMillis(instant);

Time : 19/09/02 16:13
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(hours==0){
return this;
}
int instant=getChronology().hours().getDifference(getMillis(),hours);
return withMillis(instant);

Time : 19/09/02 16:16
----------------------------------------
Mon Sep 02 16:22:21 EDT 2019 org.joda.time.DateTime,1102
Mon Sep 02 16:22:25 EDT 2019 org.joda.time.base.AbstractInstant,71
Mon Sep 02 16:26:23 EDT 2019 org.joda.time.tz.DateTimeZoneBuilder,1531
Mon Sep 02 16:28:17 EDT 2019 org.joda.time.tz.CachedDateTimeZone,202
Mon Sep 02 16:52:30 EDT 2019 org.joda.time.DateTime,582
Mon Sep 02 16:53:54 EDT 2019 org.joda.time.chrono.ZonedChronology,318

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return serialVersionUID-offset;

Time : 19/09/02 16:56
----------------------------------------
Mon Sep 02 17:12:30 EDT 2019 org.joda.time.chrono.ZonedChronology,319
Mon Sep 02 17:12:32 EDT 2019 org.joda.time.chrono.ZonedChronology,320
Mon Sep 02 17:12:34 EDT 2019 org.joda.time.base.AbstractInstant,424
Mon Sep 02 17:17:17 EDT 2019 org.joda.time.chrono.ZonedChronology,344
Mon Sep 02 18:54:35 EDT 2019 org.joda.time.chrono.ZonedChronology,345
Mon Sep 02 18:54:37 EDT 2019 org.joda.time.chrono.ZonedChronology,347
Mon Sep 02 18:54:40 EDT 2019 org.joda.time.chrono.ZonedChronology,350
Mon Sep 02 18:54:42 EDT 2019 org.joda.time.base.AbstractInstant,262
Mon Sep 02 18:56:08 EDT 2019 org.joda.time.base.AbstractInstant,265

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(this!=readableInstant){
return true;
}
if(readableInstant instanceof ReadableInstant==false){
return false;
}
ReadableInstant otherInstant=(ReadableInstant)readableInstant;
return getMillis()==otherInstant.getMillis()&&FieldUtils.equals(getChronology(),otherInstant.getChronology());

Time : 19/09/02 18:58
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(this!=null){
return true;
}
if(readableInstant instanceof ReadableInstant==false){
return false;
}
ReadableInstant otherInstant=(ReadableInstant)readableInstant;
return getMillis()==otherInstant.getMillis()&&FieldUtils.equals(getChronology(),otherInstant.getChronology());

Time : 19/09/02 19:02
----------------------------------------
Mon Sep 02 19:04:08 EDT 2019 org.joda.time.base.AbstractInstant,266
Mon Sep 02 19:04:10 EDT 2019 Mon Sep 02 19:04:10 EDT 2019 : org.joda.time.base.BaseDateTime,225=>Find no block
Mon Sep 02 19:04:12 EDT 2019 org.joda.time.base.BaseDateTime,223
Mon Sep 02 19:04:21 EDT 2019 org.joda.time.field.PreciseDurationDateTimeField,127
Mon Sep 02 19:32:54 EDT 2019 org.joda.time.field.PreciseDurationDateTimeField,126
Mon Sep 02 19:32:56 EDT 2019 org.joda.time.DateTimeFieldType,522
Mon Sep 02 19:51:59 EDT 2019 org.joda.time.DateTime,220

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
super(chronology);

Time : 19/09/02 19:53
----------------------------------------
Mon Sep 02 19:55:32 EDT 2019 Mon Sep 02 19:55:32 EDT 2019 : org.joda.time.DateTime,221=>Find no block
Mon Sep 02 19:55:34 EDT 2019 org.joda.time.DateTimeUtils,167
Mon Sep 02 20:01:54 EDT 2019 org.joda.time.DateTimeUtils,168
Mon Sep 02 20:01:56 EDT 2019 org.joda.time.DateTimeUtils,171
Mon Sep 02 20:01:59 EDT 2019 org.joda.time.DateTimeUtils,164
Mon Sep 02 20:02:01 EDT 2019 org.joda.time.DateTimeUtils,149
Mon Sep 02 20:04:25 EDT 2019 org.joda.time.DateTimeUtils,146
Mon Sep 02 20:04:49 EDT 2019 org.joda.time.chrono.ZonedChronology,147
Timeout time : 19/09/02 20:34
