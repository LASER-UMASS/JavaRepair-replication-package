java version "1.7.0_231"
OpenJDK Runtime Environment (rhel-2.6.19.1.el7_6-x86_64 u231-b01)
OpenJDK 64-Bit Server VM (build 24.231-b01, mixed mode)
Check out 1adb1e69 to /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/ OK
Init local repository...................................................... OK
Tag post-fix revision...................................................... OK
Run post-checkout hook..................................................... OK
Initialize fixed program version........................................... OK
Apply patch................................................................ OK
Initialize buggy program version........................................... OK
Diff 1adb1e69:6bf5bba0..................................................... OK
Apply patch................................................................ OK
Tag pre-fix revision....................................................... OK
Check out program version: Time-7b......................................... OK
Running ant (compile)...................................................... OK
Running ant (compile.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Running ant (run.dev.tests)................................................ OK
Failing tests: 2
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_tokyo_endOfYear
/home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2
PURIFY IS FALSE
=================================================
Project : time_7	start : 19/10/18 01:55

readFailedTest: path is /mnt/nfs/work1/brun/mmotwani/SimFix/d4j-info/failed_tests/time/7.txt#ATTEMPTS: 2

# FAILING TESTS: 2
TIMEOUT : 18000000
===========
locations= [<org.joda.time.DateTimeZone,910>, <org.joda.time.DateTimeZone,912>, <org.joda.time.DateTimeZone,913>, <org.joda.time.DateTimeZone,915>, <org.joda.time.DateTimeZone,928>, <org.joda.time.DateTimeZone,938>, <org.joda.time.chrono.BasicChronology,584>, <org.joda.time.chrono.BasicChronology,585>, <org.joda.time.chrono.BasicChronology,586>, <org.joda.time.field.BaseDurationField,150>, <org.joda.time.DateTimeFieldType,378>, <org.joda.time.field.FieldUtils,218>, <org.joda.time.chrono.ZonedChronology,118>, <org.joda.time.chrono.ZonedChronology,138>, <org.joda.time.chrono.ZonedChronology,139>, <org.joda.time.chrono.ZonedChronology,140>, <org.joda.time.chrono.ZonedChronology,141>, <org.joda.time.chrono.ZonedChronology,144>, <org.joda.time.format.DateTimeFormat,147>, <org.joda.time.format.DateTimeFormat,149>, <org.joda.time.format.DateTimeFormat,170>, <org.joda.time.format.DateTimeFormat,400>, <org.joda.time.format.DateTimeFormat,401>, <org.joda.time.format.DateTimeFormat,403>, <org.joda.time.format.DateTimeFormat,404>, <org.joda.time.format.DateTimeFormat,405>, <org.joda.time.format.DateTimeFormat,406>, <org.joda.time.format.DateTimeFormat,408>, <org.joda.time.format.DateTimeFormat,409>, <org.joda.time.format.DateTimeFormat,412>, <org.joda.time.format.DateTimeFormat,414>, <org.joda.time.format.DateTimeFormat,479>, <org.joda.time.format.DateTimeFormat,486>, <org.joda.time.format.DateTimeFormat,488>, <org.joda.time.format.DateTimeFormat,490>, <org.joda.time.format.DateTimeFormat,491>, <org.joda.time.format.DateTimeFormat,549>, <org.joda.time.format.DateTimeFormat,550>, <org.joda.time.format.DateTimeFormat,551>, <org.joda.time.format.DateTimeFormat,563>, <org.joda.time.format.DateTimeFormat,574>, <org.joda.time.format.DateTimeFormat,576>, <org.joda.time.format.DateTimeFormat,577>, <org.joda.time.format.DateTimeFormat,579>, <org.joda.time.format.DateTimeFormat,580>, <org.joda.time.format.DateTimeFormat,583>, <org.joda.time.format.DateTimeFormat,585>, <org.joda.time.format.DateTimeFormat,586>, <org.joda.time.format.DateTimeFormat,587>, <org.joda.time.format.DateTimeFormat,596>, <org.joda.time.format.DateTimeFormat,598>, <org.joda.time.format.DateTimeFormat,600>, <org.joda.time.format.DateTimeFormat,601>, <org.joda.time.format.DateTimeFormat,603>, <org.joda.time.format.DateTimeFormat,611>, <org.joda.time.format.DateTimeFormat,613>, <org.joda.time.format.DateTimeFormat,614>, <org.joda.time.format.DateTimeFormat,616>, <org.joda.time.format.DateTimeFormat,621>, <org.joda.time.format.DateTimeFormat,622>, <org.joda.time.format.DateTimeFormat,674>, <org.joda.time.format.DateTimeFormat,677>, <org.joda.time.format.DateTimeFormat,678>, <org.joda.time.format.DateTimeFormat,679>, <org.joda.time.format.DateTimeFormat,680>, <org.joda.time.format.DateTimeFormat,681>, <org.joda.time.format.DateTimeFormat,682>, <org.joda.time.format.DateTimeFormat,683>, <org.joda.time.format.DateTimeFormat,685>, <org.joda.time.format.DateTimeFormat,687>, <org.joda.time.format.DateTimeFormat,688>, <org.joda.time.format.DateTimeFormatter,190>, <org.joda.time.format.DateTimeFormatter,193>, <org.joda.time.format.DateTimeFormatter,204>, <org.joda.time.format.DateTimeFormatter,701>, <org.joda.time.format.DateTimeFormatter,702>, <org.joda.time.format.DateTimeFormatter,706>, <org.joda.time.format.DateTimeFormatter,707>, <org.joda.time.format.DateTimeFormatter,708>, <org.joda.time.format.DateTimeFormatter,709>, <org.joda.time.format.DateTimeFormatter,710>, <org.joda.time.format.DateTimeFormatter,712>, <org.joda.time.format.DateTimeFormatter,714>, <org.joda.time.format.DateTimeFormatter,715>, <org.joda.time.IllegalFieldValueException,108>, <org.joda.time.IllegalFieldValueException,109>, <org.joda.time.IllegalFieldValueException,110>, <org.joda.time.IllegalFieldValueException,111>, <org.joda.time.IllegalFieldValueException,112>, <org.joda.time.IllegalFieldValueException,113>, <org.joda.time.IllegalFieldValueException,114>, <org.joda.time.IllegalFieldValueException,115>, <org.joda.time.IllegalFieldValueException,116>, <org.joda.time.IllegalFieldValueException,117>, <org.joda.time.IllegalFieldValueException,41>, <org.joda.time.IllegalFieldValueException,44>, <org.joda.time.IllegalFieldValueException,50>, <org.joda.time.IllegalFieldValueException,53>, <org.joda.time.IllegalFieldValueException,59>, <org.joda.time.IllegalFieldValueException,63>, <org.joda.time.IllegalFieldValueException,314>, <org.joda.time.IllegalFieldValueException,323>, <org.joda.time.IllegalFieldValueException,325>, <org.joda.time.IllegalFieldValueException,326>, <org.joda.time.IllegalFieldValueException,328>, <org.joda.time.format.DateTimeParserBucket,358>, <org.joda.time.format.DateTimeParserBucket,359>, <org.joda.time.format.DateTimeParserBucket,373>, <org.joda.time.format.DateTimeParserBucket,374>, <org.joda.time.format.DateTimeParserBucket,375>, <org.joda.time.format.DateTimeParserBucket,377>, <org.joda.time.format.DateTimeParserBucket,421>, <org.joda.time.format.DateTimeParserBucket,422>, <org.joda.time.format.DateTimeParserBucket,423>, <org.joda.time.format.DateTimeParserBucket,518>, <org.joda.time.MutableDateTime,351>, <org.joda.time.MutableDateTime,353>, <org.joda.time.DateTimeZone,979>, <org.joda.time.DateTimeZone,980>, <org.joda.time.DateTimeZone,981>, <org.joda.time.DateTimeZone,982>, <org.joda.time.DateTimeZone,983>, <org.joda.time.DateTimeZone,985>, <org.joda.time.DateTimeZone,1002>, <org.joda.time.DateTimeZone,1004>, <org.joda.time.DateTimeZone,1006>, <org.joda.time.DateTimeZone,1035>, <org.joda.time.DateTimeZone,1037>, <org.joda.time.DateTimeZone,1040>, <org.joda.time.chrono.GJChronology,279>, <org.joda.time.chrono.GJChronology,280>, <org.joda.time.chrono.GJChronology,194>, <org.joda.time.chrono.GJChronology,204>, <org.joda.time.chrono.GJChronology,205>, <org.joda.time.chrono.GJChronology,206>, <org.joda.time.chrono.GJChronology,209>, <org.joda.time.chrono.GJChronology,219>, <org.joda.time.chrono.GJChronology,220>, <org.joda.time.chrono.GJChronology,291>, <org.joda.time.chrono.GJChronology,294>, <org.joda.time.chrono.GJChronology,305>, <org.joda.time.chrono.GJChronology,315>, <org.joda.time.chrono.GJChronology,318>, <org.joda.time.chrono.GJChronology,319>, <org.joda.time.chrono.GJChronology,395>, <org.joda.time.chrono.GJChronology,404>, <org.joda.time.chrono.GJChronology,485>, <org.joda.time.base.AbstractInstant,260>, <org.joda.time.Instant,144>, <org.joda.time.field.DecoratedDurationField,101>, <org.joda.time.chrono.ZonedChronology,462>, <org.joda.time.chrono.ZonedChronology,463>, <org.joda.time.chrono.ZonedChronology,464>, <org.joda.time.chrono.ZonedChronology,465>, <org.joda.time.chrono.ZonedChronology,471>, <org.joda.time.chrono.ZonedChronology,496>, <org.joda.time.chrono.ZonedChronology,500>, <org.joda.time.chrono.ZonedChronology,514>, <org.joda.time.chrono.ZonedChronology,547>, <org.joda.time.chrono.ZonedChronology,564>, <org.joda.time.format.DateTimeFormatterBuilder,549>, <org.joda.time.format.DateTimeFormatterBuilder,552>, <org.joda.time.format.DateTimeFormatterBuilder,976>, <org.joda.time.format.ISODateTimeFormat,897>, <org.joda.time.format.ISODateTimeFormat,898>, <org.joda.time.format.ISODateTimeFormat,903>, <org.joda.time.format.ISODateTimeFormat,935>, <org.joda.time.format.ISODateTimeFormat,936>, <org.joda.time.format.ISODateTimeFormat,941>, <org.joda.time.format.ISODateTimeFormat,971>, <org.joda.time.format.ISODateTimeFormat,972>, <org.joda.time.format.ISODateTimeFormat,977>, <org.joda.time.format.ISODateTimeFormat,1442>, <org.joda.time.format.ISODateTimeFormat,1443>, <org.joda.time.format.ISODateTimeFormat,1449>, <org.joda.time.format.DateTimeFormatterBuilder,1754>, <org.joda.time.format.DateTimeFormatterBuilder,1755>, <org.joda.time.format.DateTimeFormatterBuilder,1756>, <org.joda.time.format.DateTimeFormatterBuilder,1757>, <org.joda.time.format.DateTimeFormatterBuilder,1748>, <org.joda.time.format.DateTimeFormatterBuilder,1760>, <org.joda.time.format.DateTimeFormatterBuilder,1822>, <org.joda.time.DateTimeZone,929>, <org.joda.time.DateTimeZone,930>, <org.joda.time.DateTimeZone,931>, <org.joda.time.DateTimeZone,932>, <org.joda.time.DateTimeZone,933>, <org.joda.time.DateTimeZone,952>, <org.joda.time.DateTimeZone,953>, <org.joda.time.DateTimeZone,955>, <org.joda.time.DateTimeZone,958>, <org.joda.time.tz.DateTimeZoneBuilder,1535>, <org.joda.time.tz.DateTimeZoneBuilder,1536>, <org.joda.time.tz.DateTimeZoneBuilder,1541>, <org.joda.time.tz.DateTimeZoneBuilder,1574>, <org.joda.time.tz.DateTimeZoneBuilder,1577>, <org.joda.time.tz.DateTimeZoneBuilder,1587>, <org.joda.time.tz.DateTimeZoneBuilder,1588>, <org.joda.time.tz.DateTimeZoneBuilder,1589>, <org.joda.time.tz.DateTimeZoneBuilder,1595>]
======================org.joda.time.DateTimeZone,910
========
 final long offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instantLocal-offsetLocal;
 final long offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int offsetLocal=getOffset(instantAdjusted);
 final long instantAdjusted=instantLocal-offsetLocal;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final long offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instantLocal-offsetLocal;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instantLocal-offsetLocal;
 final int offsetAdjusted=getOffset(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instantLocal-offsetLocal;
 final long offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetAdjusted<=getOffset(instantLocal)){
return serialVersionUID;
}
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instantLocal-offsetLocal;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instantLocal-offsetOriginal;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal==offsetAdjusted){
return instantAdjusted;
}
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instantLocal-offsetLocal;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instantUTC-offsetLocal;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instantLocal-offset;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantAdjusted)<0&&(instantUTC^offsetLocal)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instantLocal-offsetLocal;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instant-offsetLocal;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantAdjusted)<0&&(instant^offsetLocal)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instantLocal-offsetLocal;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantAdjusted=selectChronology(chrono);
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instantLocal-offsetLocal;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantLocal+offsetLocal)<0&&(instant^offsetLocal)>=0){
UTC=DateTimeZone.UTC;
offset=0;
adjustedInstant=instant;
}
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instantLocal-offsetLocal;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instant-offset;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instantMillis-offsetLocal;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(serialVersionUID==instantAdjusted||next>serialVersionUID){
break;
}
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instantLocal-offsetLocal;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantAdjusted=serialVersionUID;
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instantLocal-offsetLocal;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(MAX_MILLIS==offsetLocal&&iID.equals(UTC.getNameKey(instantAdjusted))){
System.out.println("*d* Error in "+UTC.getID());
return false;
}
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instantLocal-offsetLocal;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantAdjusted)<0&&(instantLocal^offsetLocal)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instantLocal-offsetLocal;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantAdjusted=selectChronology(chrono);
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instant-offsetLocal;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantLocal+offsetLocal)<0&&(instant^offsetLocal)>=0){
UTC=DateTimeZone.UTC;
offset=0;
adjustedInstant=instant;
}
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instant-offsetLocal;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantAdjusted=selectChronology(chrono);
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instantLocal-offset;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantLocal+offsetLocal)<0&&(instant^offsetLocal)>=0){
UTC=DateTimeZone.UTC;
offset=0;
adjustedInstant=instant;
}
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instantLocal-offset;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantAdjusted=selectChronology(chrono);
if((instantLocal^instantLocal+offsetLocal)<0&&(instant^offsetLocal)>=0){
UTC=DateTimeZone.UTC;
offset=0;
adjustedInstant=instant;
}
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instantLocal-offsetLocal;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantAdjusted=selectChronology(chrono);
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instant-offset;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantLocal+offsetLocal)<0&&(instant^offsetLocal)>=0){
UTC=DateTimeZone.UTC;
offset=0;
adjustedInstant=instant;
}
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instant-offset;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantAdjusted=selectChronology(chrono);
if((instantLocal^instantLocal+offsetLocal)<0&&(instant^offsetLocal)>=0){
UTC=DateTimeZone.UTC;
offset=0;
adjustedInstant=instant;
}
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instant-offsetLocal;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantAdjusted=selectChronology(chrono);
if((instantLocal^instantLocal+offsetLocal)<0&&(instant^offsetLocal)>=0){
UTC=DateTimeZone.UTC;
offset=0;
adjustedInstant=instant;
}
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instantLocal-offset;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantAdjusted=selectChronology(chrono);
if((instantLocal^instantLocal+offsetLocal)<0&&(instant^offsetLocal)>=0){
UTC=DateTimeZone.UTC;
offset=0;
adjustedInstant=instant;
}
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instant-offset;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantAdjusted)<0&&(instant^offsetLocal)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instant-offsetLocal;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantAdjusted)<0&&(instant^offsetLocal)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instantLocal-offset;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantAdjusted)<0&&(instant^offsetLocal)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instant-offset;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.DateTimeZone,912
org.joda.time.DateTimeZone,913
org.joda.time.DateTimeZone,915
========
if(nextLocal==nextAdjusted){
return offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instantLocal==(nextAdjusted-nextLocal)){
return offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nextLocal!=(nextAdjusted-nextLocal)){
return offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nextLocal==(nextAdjusted-nextLocal)){
return offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instantAdjusted==(nextLocal-nextAdjusted)){
return offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nextLocal!=(nextLocal-nextAdjusted)){
return offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nextLocal==(nextLocal-nextAdjusted)){
return offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nextLocal!=nextAdjusted){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((offsetLocal-offsetAdjusted)<offsetAdjusted){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((offsetLocal-offsetAdjusted)<MAX_MILLIS){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=previousTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetPrev;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(prev<=instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(getOffset(prev)<=instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(getOffset(prev)<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(prev<offsetAfter){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(prev<millis){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(prev<iPeriodStart){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(prev<transitions.length){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(prev<length){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(prev<instant){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(prev<instantUTC){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetPrev<prev){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(prev<next){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(prev<end){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
prev=instantAdjusted;
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal==diff&&iID.equals(UTC.getNameKey(prev))){
System.out.println("*d* Error in "+UTC.getID());
return false;
}
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(prev<MIN_VALUE){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocalFromOriginal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetBefore>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantUTC>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal>0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<MIN_VALUE){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nextOffset>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted==prev||next>serialVersionUID){
break;
}
if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
prev=instantAdjusted;
if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iMonthOfYear>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(adjustedInstant>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
prev+=offsetAdjusted;
if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
serialVersionUID=ISOChronology.getInstanceUTC().millisOfDay().set(prev,0);
if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
serialVersionUID=ISOChronology.getInstanceUTC().millisOfDay().add(prev,offsetAdjusted);
if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
serialVersionUID=setDayOfMonthPrevious(ISOChronology.getInstanceUTC(),prev);
if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal>=0){
long prev=nextTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offset){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<offsetLocal){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal==nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal==(instantAdjusted-offsetLocal)){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=(instantAdjusted-offsetLocal)){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=nextTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantLocal){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
if(nextAdjusted==(instantAdjusted-offsetAdjusted)){
nextAdjusted=Long.MAX_VALUE;
}
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
if(nextAdjusted==(instantAdjusted-offsetAdjusted)){
nextAdjusted=Long.MAX_VALUE;
}
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<offsetLocal){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal==nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<offsetLocal){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal==(instantAdjusted-offsetLocal)){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<offsetLocal){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=(instantAdjusted-offsetLocal)){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<offsetLocal){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=nextTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<offsetLocal){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantLocal){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal==nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=nextTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal==nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantLocal){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal==(instantAdjusted-offsetLocal)){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=nextTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal==(instantAdjusted-offsetLocal)){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantLocal){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=(instantAdjusted-offsetLocal)){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=nextTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=(instantAdjusted-offsetLocal)){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantLocal){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=nextTransition(instantAdjusted);
if(prev<instantLocal){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<offsetLocal){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal==nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=nextTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<offsetLocal){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal==nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantLocal){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<offsetLocal){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal==(instantAdjusted-offsetLocal)){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=nextTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<offsetLocal){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal==(instantAdjusted-offsetLocal)){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantLocal){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<offsetLocal){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=(instantAdjusted-offsetLocal)){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=nextTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<offsetLocal){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=(instantAdjusted-offsetLocal)){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantLocal){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<offsetLocal){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=nextTransition(instantAdjusted);
if(prev<instantLocal){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal==nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=nextTransition(instantAdjusted);
if(prev<instantLocal){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal==(instantAdjusted-offsetLocal)){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=nextTransition(instantAdjusted);
if(prev<instantLocal){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=(instantAdjusted-offsetLocal)){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=nextTransition(instantAdjusted);
if(prev<instantLocal){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<offsetLocal){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal==nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=nextTransition(instantAdjusted);
if(prev<instantLocal){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<offsetLocal){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal==(instantAdjusted-offsetLocal)){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=nextTransition(instantAdjusted);
if(prev<instantLocal){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<offsetLocal){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=(instantAdjusted-offsetLocal)){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=nextTransition(instantAdjusted);
if(prev<instantLocal){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetBefore!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=offsetAfter){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(serialVersionUID<instantLocal||instant>=nextLocal){
return instant;
}
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=length){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offsetAdjusted=(i>=0)?(i+1):~i;
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted<nextAdjusted){
instant=end;
}
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(i>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(i>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<MIN_VALUE){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=offsetAdjusted){
return instantAdjusted;
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(prev>Long.MIN_VALUE){
return prev-1;
}
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i!=length){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=length){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i!=length){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=null){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offsetLocal=~i;
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant!=instant){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(adjustedInstant!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=instant){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant!=offset){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(adjustedInstant!=instant){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(adjustedInstant!=offset){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.DateTimeZone,928
org.joda.time.DateTimeZone,938
========
if(offsetLocal!=offset){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<offsetLocal){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal==nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal==(instantAdjusted-offsetLocal)){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=(instantAdjusted-offsetLocal)){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=nextTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantLocal){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
if(nextAdjusted==(instantAdjusted-offsetAdjusted)){
nextAdjusted=Long.MAX_VALUE;
}
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
if(nextAdjusted==(instantAdjusted-offsetAdjusted)){
nextAdjusted=Long.MAX_VALUE;
}
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<offsetLocal){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal==nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<offsetLocal){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal==(instantAdjusted-offsetLocal)){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<offsetLocal){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=(instantAdjusted-offsetLocal)){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<offsetLocal){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=nextTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<offsetLocal){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantLocal){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal==nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=nextTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal==nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantLocal){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal==(instantAdjusted-offsetLocal)){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=nextTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal==(instantAdjusted-offsetLocal)){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantLocal){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=(instantAdjusted-offsetLocal)){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=nextTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=(instantAdjusted-offsetLocal)){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantLocal){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=nextTransition(instantAdjusted);
if(prev<instantLocal){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<offsetLocal){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal==nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=nextTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<offsetLocal){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal==nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantLocal){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<offsetLocal){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal==(instantAdjusted-offsetLocal)){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=nextTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<offsetLocal){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal==(instantAdjusted-offsetLocal)){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantLocal){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<offsetLocal){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=(instantAdjusted-offsetLocal)){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=nextTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<offsetLocal){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=(instantAdjusted-offsetLocal)){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantLocal){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<offsetLocal){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=nextTransition(instantAdjusted);
if(prev<instantLocal){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal==nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=nextTransition(instantAdjusted);
if(prev<instantLocal){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal==(instantAdjusted-offsetLocal)){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=nextTransition(instantAdjusted);
if(prev<instantLocal){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=(instantAdjusted-offsetLocal)){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=nextTransition(instantAdjusted);
if(prev<instantLocal){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<offsetLocal){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal==nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=nextTransition(instantAdjusted);
if(prev<instantLocal){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<offsetLocal){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal==(instantAdjusted-offsetLocal)){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=nextTransition(instantAdjusted);
if(prev<instantLocal){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<offsetLocal){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=(instantAdjusted-offsetLocal)){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=nextTransition(instantAdjusted);
if(prev<instantLocal){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(afterStart!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=diff){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(serialVersionUID<instantLocal||instant>=nextLocal){
return instant;
}
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=length){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offsetAdjusted=(i>=0)?(i+1):~i;
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted<nextAdjusted){
instant=end;
}
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetPrev;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return iOffset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return prev;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(i>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(i>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<MIN_VALUE){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=offsetAdjusted){
return instantAdjusted;
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offsetLocal=~i;
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(prev>Long.MIN_VALUE){
return prev-1;
}
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i!=length){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return prev;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=length){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=length){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return prev;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return prev;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i!=length){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i!=length){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return prev;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return prev;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=length){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return prev;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i!=length){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return prev;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
if((instantAdjusted^nextLocal)<0&&(instantUTC^prev)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offsetLocal=~i;
if(i!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
if((instantAdjusted^nextAdjusted)<0&&(instant^offsetPrev)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
return oldInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
if(UTC==null){
newZone=DateTimeZone.getDefault();
}
return offsetAdjusted;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
if((instantAdjusted^nextAdjusted)<0&&(instant^offsetPrev)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offsetPrev;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=offsetAdjusted){
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}
}else if(offsetLocal>=0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}
if((instantAdjusted^nextAdjusted)<0&&(instant^offsetPrev)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.BasicChronology,584
========
int thisYear=getMillisOfDay(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(CACHE_MASK==0){
return instant;
}
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(CACHE_MASK>CACHE_MASK){
dayToUse=maxDay;
}
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisMonth);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<iFirstDayMillis){
return -getDifference(subtrahendInstant,minuendInstant);
}
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getWeekOfWeekyear(instant,thisYear);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getWeekOfWeekyear(instant,thisMonth)==1){
return getYear(instant+DateTimeConstants.MILLIS_PER_WEEK);
}else if(week>51){
return getYear(instant-(2*DateTimeConstants.MILLIS_PER_WEEK));
}else {
return thisMonth;
}
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(thisYear==iFirstDayMillis){
return add(instant,i_months);
}
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long thisYear=getMillisOfDay(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getDayOfMonth(instant,thisYear);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,CACHE_MASK,MIN,iYear);
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(thisMonth>CACHE_MASK){
thisDom=maxDom;
}
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=get(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,thisYear,DateTimeConstants.BCE,DateTimeConstants.CE);
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return cClockhourOfHalfdayField.get(thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return cClockhourOfHalfdayField.isLeap(thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return cClockhourOfHalfdayField.getLeapAmount(thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return cClockhourOfHalfdayField.remainder(thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return cClockhourOfHalfdayField.getMinimumValue(thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return cClockhourOfHalfdayField.getMaximumValue(thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getWeekyear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getWrappedField().getMillis(thisMonth,instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getMillis(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getWrappedField().add(instant,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return add(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return FieldUtils.safeAdd(instant,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return safeAdd(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getWrappedField().getValue(iFirstDayMillis,instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getValue(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
checkLimits(instant,null);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getWrappedField().getValueAsLong(iFirstDayMillis,instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getValueAsLong(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
checkLimits(instant,null);
return getWrappedField().getMillis(thisMonth,instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
checkLimits(instant,null);
return getMillis(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return setYear(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return julianToGregorianByWeekyear(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return julianToGregorianByYear(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return gregorianToJulianByWeekyear(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return gregorianToJulianByYear(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getWrappedField().roundFloor(field.set(instant,get(instant)*iYear));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return cClockhourOfHalfdayField.get(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return cClockhourOfHalfdayField.isLeap(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return cClockhourOfHalfdayField.getLeapAmount(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(thisMonth==thisYear){
return instant;
}
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return add(instant,-thisYear);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
if(thisYear==Integer.MIN_VALUE){
return subtract(instant,(long)value);
}
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getWrappedField().get(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getWrappedField().isLeap(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getWrappedField().getLeapAmount(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getWrappedField().getMinimumValue(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getWrappedField().getMaximumValue(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return thisMonth.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
printTo(thisMonth,instant);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
FieldUtils.verifyValueBounds(this,thisYear,getMinimumValue(),getMaximumValueForSet(instant,value));
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getWrappedField().set(instant,thisYear);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return set(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
FieldUtils.verifyValueBounds(this,thisYear,1,thisMonth);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
if(thisYear==thisMonth){
value=0;
}
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getRemainder(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getWrappedField().set(instant,CACHE_MASK*iYear+getRemainder(getWrappedField().get(instant)));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,CACHE_MASK,thisMonth,thisYear);
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
if(iFirstDayMillis==0||thisYear==0){
return instant;
}
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getDivided(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getWrappedField().set(instant,getDivided(getWrappedField().get(instant))*iYear+thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,thisMonth,0,iYear-1);
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getOffsetToAdd(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=cHalfdaysField.add(instant+getOffsetToAdd(instant),thisMonth);
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return millisOfDay().set(instant,CACHE_MASK);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
instant=monthOfYear().set(instant,iYear);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
instant=dayOfMonth().set(instant,thisMonth);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
instant=dayOfMonth().set(instant,thisMonth);
return set(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
if(instant<iFirstDayMillis){
instant=end;
}
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return millisOfSecond().set(instant,thisYear);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
instant=hourOfDay().set(instant,CACHE_MASK);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
instant=minuteOfHour().set(instant,thisMonth);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
instant=secondOfMinute().set(instant,CACHE_MASK);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
instant=minuteOfHour().set(instant,thisMonth);
return set(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return add(instant,-iFirstDayMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
if(iFirstDayMillis==Long.MIN_VALUE){
throw new ArithmeticException("Long.MIN_VALUE cannot be negated");
}
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getWeekOfWeekyear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(thisYear>1){
instant-=((long)DateTimeConstants.MILLIS_PER_WEEK)*(wow-1);
}
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return cClockhourOfHalfdayField.getMinimumValue(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=cClockhourOfHalfdayField.set(instant,thisMonth);
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<iFirstDayMillis){
thisMonth=cClockhourOfHalfdayField.get(iCutover);
}
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return cClockhourOfHalfdayField.getMaximumValue(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant>=iFirstDayMillis){
thisMonth=cClockhourOfHalfdayField.get(iJulianField.add(iCutover,-1));
}
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getOffset(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+thisYear)<0&&(instant^thisYear)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getOffsetFromLocal(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant-thisYear)<0&&(instant^thisYear)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return millisOfSecond().set(instant,CACHE_MASK);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
instant=monthOfYear().set(instant,thisYear);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
instant=minuteOfHour().set(instant,CACHE_MASK);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
instant=hourOfDay().set(instant,CACHE_MASK);
return set(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
instant=secondOfMinute().set(instant,CACHE_MASK);
return set(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
instant=dayOfMonth().set(instant,thisMonth);
instant=hourOfDay().set(instant,CACHE_MASK);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
instant=dayOfMonth().set(instant,thisMonth);
instant=secondOfMinute().set(instant,CACHE_MASK);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
instant=hourOfDay().set(instant,CACHE_MASK);
instant=secondOfMinute().set(instant,CACHE_MASK);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
instant=dayOfMonth().set(instant,thisMonth);
instant=hourOfDay().set(instant,CACHE_MASK);
return set(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
instant=dayOfMonth().set(instant,thisMonth);
instant=secondOfMinute().set(instant,CACHE_MASK);
return set(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
instant=hourOfDay().set(instant,CACHE_MASK);
instant=secondOfMinute().set(instant,CACHE_MASK);
return set(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
instant=dayOfMonth().set(instant,thisMonth);
instant=hourOfDay().set(instant,CACHE_MASK);
instant=secondOfMinute().set(instant,CACHE_MASK);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
instant=dayOfMonth().set(instant,thisMonth);
instant=hourOfDay().set(instant,CACHE_MASK);
instant=secondOfMinute().set(instant,CACHE_MASK);
return set(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
thisMonth=selectChronology(chrono);
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=cHalfdaysField.add(instant+getOffsetToAdd(instant),iFirstDayMillis);
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+thisYear)<0&&(instant^thisYear)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
int thisYear=getOffset(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
thisMonth=selectChronology(chrono);
int thisYear=getOffset(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getDaysInYearMonth(thisYear,thisMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int thisYear=getYear(instant);
int thisMonth=getMonthOfYear(instant,thisYear);
return getWrappedField().getMillis(iFirstDayMillis,instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.BasicChronology,585
org.joda.time.chrono.BasicChronology,586
org.joda.time.field.BaseDurationField,150
org.joda.time.DateTimeFieldType,378
========
return str;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.field.FieldUtils,218
========
if((value<lowerBound)||(value>upperBound)){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(lowerBound),null,Integer.valueOf(field.getMaximumValue()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((value<lowerBound)||(value>upperBound)){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(field.getMinimumValue()),null);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((value<lowerBound)||(value>upperBound)){
throw new IllegalFieldValueException(DateTimeFieldType.year(),Integer.valueOf(value),null,null);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((value<lowerBound)||(value>upperBound)){
value++;
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
FieldUtils.verifyValueBounds(this,value,lowerBound,getMaximumValue());
if((value<lowerBound)||(value>upperBound)){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((value<lowerBound)||(value>upperBound)){
value++;
throw new IllegalFieldValueException(DateTimeFieldType.year(),Integer.valueOf(value),null,null);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((value<lowerBound)||(value>upperBound)){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),null,null);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((value<lowerBound)||(value>upperBound)){
if(upperBound==getValue(lowerBound)){
return this;
}
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((value<lowerBound)||(value>upperBound)){
throw new IllegalArgumentException("Field must not be null");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
super.setFieldInto(getValues(),field,upperBound);
if((value<lowerBound)||(value>upperBound)){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,value,1,getMaximumValue());
if((value<lowerBound)||(value>upperBound)){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((value<lowerBound)||(value>upperBound)){
if(lowerBound==0){
return ~value;
}
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((value<lowerBound)||(value>upperBound)){
if(lowerBound<=0){
return 0;
}
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lowerBound--;
if((value<lowerBound)||(value>upperBound)){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((value<lowerBound)||(value>upperBound)){
if(lowerBound==getValue(value)){
return this;
}
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((value<lowerBound)||(value>upperBound)){
throw new IllegalArgumentException("Cannot convert period to duration as "+field.getName());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((value<lowerBound)||(value>upperBound)){
throw new ArithmeticException("Integer.MIN_VALUE cannot be negated");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((value<lowerBound)||field==null){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((value<lowerBound)||(value>upperBound)){
throw new IllegalArgumentException("Period does not support field \'"+field);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((value<lowerBound)||field==null){
throw new IllegalArgumentException("Period does not support field \'"+field);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((value<lowerBound)||(value>upperBound)){
if(value>=0){
return value/value;
}else {
return ((value+1)/iDivisor)-1;
}
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((value<lowerBound)||(value>upperBound)){
if(value>=0){
return value%lowerBound;
}else {
return (iDivisor-1)+((value+1)%iDivisor);
}
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((value<lowerBound)||(value>upperBound)){
if(value>=0){
return value/lowerBound;
}else {
return ((value+1)/iDivisor)-1;
}
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((value<lowerBound)||(value>upperBound)){
if(value>Integer.MAX_VALUE){
return ~value;
}
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((value<lowerBound)||(value>offset)){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((value<lowerBound)||(value>upperBound)){
throw new IllegalArgumentException("The divisor must be at least 2");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((value<lowerBound)||(mode>mode)){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((value<lowerBound)&&(value>upperBound)){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(field!=null&&(value<ROUND_NONE||value>ROUND_HALF_EVEN)){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(field!=null||(value>upperBound)){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((value<lowerBound)||(value<ROUND_NONE||mode>ROUND_HALF_EVEN)){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((value<lowerBound)||(mode>upperBound)){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((value<lowerBound)||(ROUND_NONE>upperBound)){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((value<lowerBound)||(value>mode)){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((value<lowerBound)||(value>ROUND_HALF_EVEN)){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((value<lowerBound)||(value>upperBound)){
throw new IllegalArgumentException("Illegal rounding mode: "+value);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
field=(value==ROUND_NONE?null:field);
if((value<lowerBound)||(value>upperBound)){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lowerBound=(field==null?ROUND_NONE:value);
if((value<lowerBound)||(value>upperBound)){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setMillis(getMillis());
if((value<lowerBound)||(value>upperBound)){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((value<lowerBound)&&(value>upperBound)){
throw new IllegalArgumentException("Illegal rounding mode: "+value);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.joda.time.chrono.ZonedChronology,118
========
return localToUTC(getBase().getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
return localToUTC(getBase().getDateTimeMillis(serialVersionUID+getZone().getOffset(instant),hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getYearMonthDayMillis(year,monthOfYear,dayOfMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(DateTimeFieldType.year(),year,getMinYear(),getMaxYear());
return localToUTC(getBase().getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(DateTimeFieldType.monthOfYear(),monthOfYear,1,getMaxMonth(year));
return localToUTC(getBase().getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(DateTimeFieldType.dayOfMonth(),dayOfMonth,1,getDaysInYearMonth(year,monthOfYear));
return localToUTC(getBase().getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.ZonedChronology,138
UNKNOWN ASTNode type : catch (IllegalArgumentException ex) {
  zone=DateTimeZone.getDefault();
}

========
if(offset!=zone.getOffset(localInstant)){
if(getOffset(serialVersionUID)<=offset){
return serialVersionUID;
}
throw new IllegalInstantException(localInstant,zone.getID());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset!=zone.getOffset(localInstant)){
if(offset==Integer.MIN_VALUE){
iOffset=zone.getOffset(localInstant);
}
throw new IllegalInstantException(localInstant,zone.getID());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset!=iZone.getOffset(localInstant)){
throw new IllegalInstantException(localInstant,zone.getID());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset!=zone.getOffset(localInstant)){
throw new IllegalInstantException("Illegal instant due to time zone offset transition ("+zone);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
throw new IllegalInstantException(localInstant,zone.getID());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 0
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_tokyo_endOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_tokyo_endOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_tokyo_endOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_tokyo_endOfYear
Failing tests: 0
TESTING : time_7
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.joda.time.tz.TestCompiler::test_Amman_2006
  - org.joda.time.tz.TestCompiler::test_Amman_2005
  - org.joda.time.tz.TestCompiler::test_Amman_2004
  - org.joda.time.tz.TestCompiler::test_Amman_2003
  - org.joda.time.format.TestTextFields::testMonthNames_monthStart
  - org.joda.time.format.TestTextFields::testWeekdayNames
  - org.joda.time.format.TestTextFields::testMonthNames_monthEnd
  - org.joda.time.format.TestISODateTimeFormatParsing::test_basicWeekDate
  - org.joda.time.format.TestISODateTimeFormatParsing::test_dateElementParser
  - org.joda.time.format.TestISODateTimeFormatParsing::test_weekDate
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseShortName
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseShortNameWithLookup
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_localPrintParseZoneTokyo
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_parseWrongOffset
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseZoneTokyo
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseZoneParis
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseZoneBahiaBanderas
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseOffset
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseZoneDawsonCreek
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseLongNameWithLookup
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_localPrintParseOffset
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_localPrintParseOffsetAndZone
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_parseWrongOffsetAndZone
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseOffsetAndZone
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseShortNameWithAutoLookup
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseLongName
  - org.joda.time.format.TestDateTimeFormatter::testZoneNameNearTransition
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_simple
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_zone3
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_zone2
  - org.joda.time.format.TestDateTimeFormatter::testZoneShortNameNearTransition
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_zone
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_chrono
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_endOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseMutableDateTime_zone3
  - org.joda.time.format.TestDateTimeFormatter::testParseMutableDateTime_zone2
  - org.joda.time.format.TestDateTimeFormatter::testParseDateTime_zone3
  - org.joda.time.format.TestDateTimeFormatter::testParseDateTime_zone2
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthOnly
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_simple_precedence
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_offsetParsed
  - org.joda.time.format.TestDateTimeFormatter::testParseMutableDateTime_simple
  - org.joda.time.format.TestDateTimeFormatter::testParseDateTime_offsetParsed
  - org.joda.time.format.TestDateTimeFormatter::testParseDateTime_simple
  - org.joda.time.format.TestDateTimeFormatter::testParseMutableDateTime_zone
  - org.joda.time.format.TestDateTimeFormatter::testParseMutableDateTime_chrono
  - org.joda.time.format.TestDateTimeFormatter::testParseDateTime_simple_precedence
  - org.joda.time.format.TestDateTimeFormatter::testParseMutableDateTime_offsetParsed
  - org.joda.time.format.TestDateTimeFormatter::testParseDateTime_chrono
  - org.joda.time.format.TestDateTimeFormatter::testParseDateTime_zone
  - org.joda.time.format.TestDateTimeFormatter::testParseMutableDateTime_simple_precedence
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_tokyo_startOfYear
  - org.joda.time.convert.TestStringConverter::testSetIntoInterval_Object_Chronology6
  - org.joda.time.convert.TestStringConverter::testSetIntoInterval_Object_Chronology5
  - org.joda.time.convert.TestStringConverter::testSetIntoInterval_Object_Chronology4
  - org.joda.time.convert.TestStringConverter::testSetIntoInterval_Object_Chronology3
  - org.joda.time.convert.TestStringConverter::testSetIntoInterval_Object_Chronology2
  - org.joda.time.convert.TestStringConverter::testSetIntoInterval_Object_Chronology1
  - org.joda.time.convert.TestStringConverter::testGetInstantMillis_Object_Zone
  - org.joda.time.convert.TestStringConverter::testGetInstantMillis_Object
  - org.joda.time.convert.TestStringConverter::testGetInstantMillis_Object_Chronology
  - org.joda.time.chrono.TestLenientChronology::testNearDstTransition
  - org.joda.time.chrono.TestIslamicChronology::testSampleDateWithZone
  - org.joda.time.chrono.TestEthiopicChronology::testSampleDateWithZone
  - org.joda.time.chrono.TestCopticChronology::testSampleDateWithZone
  - org.joda.time.TestYearMonth_Constructors::testConstructor_DateTimeZone
  - org.joda.time.TestYearMonth_Basics::testToInterval_Zone
  - org.joda.time.TestYearMonthDay_Constructors::testConstructor_DateTimeZone
  - org.joda.time.TestYearMonthDay_Basics::testToInterval_Zone
  - org.joda.time.TestYearMonthDay_Basics::testToDateTime_TOD_Zone
  - org.joda.time.TestTimeOfDay_Constructors::testConstructor_nullDateTimeZone
  - org.joda.time.TestTimeOfDay_Constructors::testConstructor_DateTimeZone
  - org.joda.time.TestStringConvert::testDateMidnight
  - org.joda.time.TestStringConvert::testMutableDateTime
  - org.joda.time.TestStringConvert::testDateTime
  - org.joda.time.TestPeriod_Constructors::testConstructor_RI_RI4
  - org.joda.time.TestPeriod_Constructors::testConstructor_RI_RI3
  - org.joda.time.TestPeriod_Constructors::testConstructor_RI_RI_PeriodType4
  - org.joda.time.TestPartial_Match::testIsMatch_Instant
  - org.joda.time.TestMutablePeriod_Updates::testAdd_RInterval2
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_RI_RI4
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_RI_RI3
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_RI_RI_PeriodType4
  - org.joda.time.TestMutableInterval_Constructors::testParse_noFormatter
  - org.joda.time.TestMutableDateTime_Sets::testSetYear_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetMilliOfDay_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetWeekOfWeekyear_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetWeekOfWeekyear_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetMilliOfSecond_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetMilliOfSecond_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetDate_RI_same
  - org.joda.time.TestMutableDateTime_Sets::testSetDate_int_int_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetHourOfDay_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetDayOfYear_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetDayOfYear_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetMinuteOfDay_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetSecondOfMinute_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetSecondOfMinute_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetDayOfMonth_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetDayOfMonth_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetSecondOfDay_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetMonthOfYear_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetMonthOfYear_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetDate_RI_different2
  - org.joda.time.TestMutableDateTime_Sets::testSetDate_RI_different1
  - org.joda.time.TestMutableDateTime_Sets::testSetDate_long1
  - org.joda.time.TestMutableDateTime_Sets::testSetDate_RI2
  - org.joda.time.TestMutableDateTime_Sets::testSetDate_RI1
  - org.joda.time.TestMutableDateTime_Sets::testSetWeekyear_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetDayOfWeek_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetDayOfWeek_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetMinuteOfHour_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetMinuteOfHour_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetTime_int_int_int_int1
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetDayOfMonth
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetHourOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetTextDayOfMonth
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetWeekOfWeekyear
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetDayOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetDayOfWeek
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddWrapFieldYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetMonthOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyToIntervalMonthOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetTextDayOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetTextDayOfWeek
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddWeekOfWeekyear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyRoundCeilingHourOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetTextYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddWrapFieldDayOfMonth
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetMillisOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetMinuteOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddMonthOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddWrapFieldWeekOfWeekyear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetDayOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetDayOfWeek
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddDayOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddDayOfWeek
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetTextMonthOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyRoundFloorHourOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertyRoundHalfEvenHourOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertyRoundHalfFloorHourOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertyToIntervalDayOfMonth
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetTextWeekOfWeekyear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetSecondOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddWrapFieldMonthOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetDayOfMonth
  - org.joda.time.TestMutableDateTime_Properties::testPropertyRoundHalfCeilingHourOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddLongDayOfWeek
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddDayOfMonth
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddWrapFieldDayOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddWrapFieldDayOfWeek
  - org.joda.time.TestMutableDateTime_Constructors::testParse_noFormatter
  - org.joda.time.TestMutableDateTime_Constructors::testParse_formatter
  - org.joda.time.TestMutableDateTime_Constructors::testConstructor_int_int_int_int_int_int_int
  - org.joda.time.TestMutableDateTime_Constructors::testConstructor_int_int_int_int_int_int_int_nullChronology
  - org.joda.time.TestMutableDateTime_Constructors::testConstructor_int_int_int_int_int_int_int_Chronology
  - org.joda.time.TestMutableDateTime_Constructors::testConstructor_int_int_int_int_int_int_int_DateTimeZone
  - org.joda.time.TestMutableDateTime_Constructors::testConstructor_int_int_int_int_int_int_int_nullDateTimeZone
  - org.joda.time.TestMutableDateTime_Basics::testRounding6
  - org.joda.time.TestMutableDateTime_Basics::testRounding5
  - org.joda.time.TestMutableDateTime_Basics::testRounding4
  - org.joda.time.TestMutableDateTime_Basics::testRounding3
  - org.joda.time.TestMutableDateTime_Basics::testRounding2
  - org.joda.time.TestMutableDateTime_Basics::testRounding1
  - org.joda.time.TestMutableDateTime_Adds::testAddSeconds_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddMillis_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddMinutes_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddWeekyears_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddHours_int1
  - org.joda.time.TestMutableDateTime_Adds::testAdd_RP1
  - org.joda.time.TestMonthDay_Constructors::testConstructor_DateTimeZone
  - org.joda.time.TestLocalTime_Constructors::testConstructor_nullDateTimeZone
  - org.joda.time.TestLocalTime_Constructors::testConstructor_DateTimeZone
  - org.joda.time.TestLocalTime_Constructors::testConstructor_long_DateTimeZone_2
  - org.joda.time.TestLocalDate_Constructors::testConstructor_long3_DateTimeZone
  - org.joda.time.TestLocalDate_Constructors::testConstructor_DateTimeZone
  - org.joda.time.TestLocalDate_Basics::testToDateTimeAtStartOfDay_avoidDST
  - org.joda.time.TestLocalDate_Basics::testToDateTimeAtStartOfDay_Zone
  - org.joda.time.TestLocalDate_Basics::testToDateTime_LocalTime_Zone
  - org.joda.time.TestLocalDate_Basics::testToInterval_Zone_noMidnight
  - org.joda.time.TestLocalDate_Basics::testToDateTimeAtStartOfDay_Zone_avoidDST
  - org.joda.time.TestLocalDateTime_Constructors::testConstructor_DateTimeZone
  - org.joda.time.TestLocalDateTime_Basics::testToDateTime_nullRI
  - org.joda.time.TestInterval_Constructors::testParse_noFormatter
  - org.joda.time.TestInstant_Constructors::testParse_noFormatter
  - org.joda.time.TestInstant_Constructors::testParse_formatter
  - org.joda.time.TestIllegalFieldValueException::testZoneTransition
  - org.joda.time.TestDateTime_Properties::testPropertyGetDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertyGetHourOfDay
  - org.joda.time.TestDateTime_Properties::testPropertySetTextDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertySetWeekOfWeekyear
  - org.joda.time.TestDateTime_Properties::testPropertySetDayOfYear
  - org.joda.time.TestDateTime_Properties::testPropertySetDayOfWeek
  - org.joda.time.TestDateTime_Properties::testPropertyAddWrapFieldYear
  - org.joda.time.TestDateTime_Properties::testPropertySetMonthOfYear
  - org.joda.time.TestDateTime_Properties::testPropertyToIntervalMonthOfYear
  - org.joda.time.TestDateTime_Properties::testPropertySetYear
  - org.joda.time.TestDateTime_Properties::testPropertySetTextDayOfYear
  - org.joda.time.TestDateTime_Properties::testPropertySetTextDayOfWeek
  - org.joda.time.TestDateTime_Properties::testPropertyAddWeekOfWeekyear
  - org.joda.time.TestDateTime_Properties::testPropertyRoundCeilingHourOfDay
  - org.joda.time.TestDateTime_Properties::testPropertySetTextYear
  - org.joda.time.TestDateTime_Properties::testPropertyAddWrapFieldDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertyGetMillisOfDay
  - org.joda.time.TestDateTime_Properties::testPropertyGetMinuteOfDay
  - org.joda.time.TestDateTime_Properties::testPropertyAddMonthOfYear
  - org.joda.time.TestDateTime_Properties::testPropertyAddWrapFieldWeekOfWeekyear
  - org.joda.time.TestDateTime_Properties::testPropertyGetDayOfYear
  - org.joda.time.TestDateTime_Properties::testPropertyGetDayOfWeek
  - org.joda.time.TestDateTime_Properties::testPropertyWithMinimumValueDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertyAddDayOfYear
  - org.joda.time.TestDateTime_Properties::testPropertyAddDayOfWeek
  - org.joda.time.TestDateTime_Properties::testPropertySetTextMonthOfYear
  - org.joda.time.TestDateTime_Properties::testPropertyRoundFloorHourOfDay
  - org.joda.time.TestDateTime_Properties::testPropertyRoundHalfEvenHourOfDay
  - org.joda.time.TestDateTime_Properties::testPropertyRoundHalfFloorHourOfDay
  - org.joda.time.TestDateTime_Properties::testPropertyToIntervalDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertySetTextWeekOfWeekyear
  - org.joda.time.TestDateTime_Properties::testPropertyGetSecondOfDay
  - org.joda.time.TestDateTime_Properties::testPropertyAddWrapFieldMonthOfYear
  - org.joda.time.TestDateTime_Properties::testPropertyWithMaximumValueDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertySetDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertyRoundHalfCeilingHourOfDay
  - org.joda.time.TestDateTime_Properties::testPropertyAddLongDayOfWeek
  - org.joda.time.TestDateTime_Properties::testPropertyAddYear
  - org.joda.time.TestDateTime_Properties::testPropertyAddDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertyAddWrapFieldDayOfYear
  - org.joda.time.TestDateTime_Properties::testPropertyAddWrapFieldDayOfWeek
  - org.joda.time.TestDateTime_Constructors::testParse_noFormatter
  - org.joda.time.TestDateTime_Constructors::testParse_formatter
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_nullChronology
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_int
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_nullChronology
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_int_nullChronology
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_DateTimeZone
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_int_Chronology
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_Chronology
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_Chronology
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_DateTimeZone
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_nullDateTimeZone
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_int_DateTimeZone
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_nullDateTimeZone
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_int_nullDateTimeZone
  - org.joda.time.TestDateTime_Basics::testWithers
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_withDay_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_withDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_athens
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_newValid_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_newValid_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_minute_NewYork_Spring_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_secondOfMinute_NewYork_Autumn_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusHour_NewYork_Autumn
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_day_NewYork_Autumn_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_addWrapFieldDay_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_addWrapFieldDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_minuteOfHour_NewYork_Autumn_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusHour_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusHour_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_new_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusHour_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusHour_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_hourOfDay_NewYork_Autumn_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusHour_Moscow_Autumn
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_setHourAcross_Moscow_Spring
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_setHourBack_Moscow_Spring
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_setHourBack_NewYork_Spring
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_paris
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_day_NewYork_Autumn_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_hourOfDay_NewYork_Autumn_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_hour_NewYork_Spring_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_day_NewYork_Autumn_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_hour_NewYork_Spring_preCutover
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_losAngeles
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_minute_NewYork_Spring_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_day_NewYork_Autumn_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_day_NewYork_Spring_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_setHourAcross_NewYork_Spring
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_setHourForward_NewYork_Spring
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_newYork
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_hourOfDay_NewYork_Autumn_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_constructor_NewYork_Autumn
  - org.joda.time.TestDateTimeZoneCutover::testWithMinuteOfHourInDstChange_mockZone
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_minute_NewYork_Spring_preCutover
  - org.joda.time.TestDateTimeZoneCutover::testBug3476684_adjustOffset
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_withHourZero_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_withHourZero_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_hourOfDay_NewYork_Autumn_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_secondOfMinute_NewYork_Autumn_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_day_NewYork_Spring_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_constructor_Moscow_Autumn
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_day_NewYork_Spring_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusHour_Guatemata_Autumn
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_hour_NewYork_Spring_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_secondOfMinute_NewYork_Autumn_postCutover
  - org.joda.time.TestDateTimeZoneCutover::testBug3476684_adjustOffset_springGap
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_minuteOfHour_NewYork_Autumn_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloorNotDST_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusHour_Moscow_Autumn
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusHour_Guatemata_Autumn
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_secondOfMinute_NewYork_Autumn_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_setHourZero_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_setHourZero_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_day_NewYork_Spring_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_minute_NewYork_Spring_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_setHourForward_Moscow_Spring
  - org.joda.time.TestDateTimeZoneCutover::testBug3192457_adjustOffset
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover::test_LocalDate_toDateMidnight_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_minuteOfHour_NewYork_Autumn_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_minuteOfHour_NewYork_Autumn_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_hour_NewYork_Spring_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusHour_NewYork_Autumn
  - org.joda.time.TestDateTimeZone::testCommentParse
  - org.joda.time.TestDateTimeZone::testIsLocalDateTimeGap_Berlin
  - org.joda.time.TestDateTimeZone::testIsLocalDateTimeGap_NewYork
  - org.joda.time.TestDateMidnight_Properties::testPropertyGetDayOfMonth
  - org.joda.time.TestDateMidnight_Properties::testPropertySetMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyToIntervalMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyRoundHalfCeilingMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyAddMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyGetDayOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyGetDayOfWeek
  - org.joda.time.TestDateMidnight_Properties::testPropertyAddLongMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyWithMinimumValueDayOfMonth
  - org.joda.time.TestDateMidnight_Properties::testPropertySetTextLocaleMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertySetTextMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyRemainderMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyAddWrapFieldMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyWithMaximumValueDayOfMonth
  - org.joda.time.TestDateMidnight_Properties::testPropertyRoundHalfFloorMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyRoundHalfEvenMonthOfYear
  - org.joda.time.TestDateMidnight_Constructors::testParse_noFormatter
  - org.joda.time.TestDateMidnight_Constructors::testParse_formatter
  - org.joda.time.TestDateMidnight_Constructors::testConstructor_int_int_int
  - org.joda.time.TestDateMidnight_Constructors::testConstructor_int_int_int_nullChronology
  - org.joda.time.TestDateMidnight_Constructors::testConstructor_int_int_int_DateTimeZone
  - org.joda.time.TestDateMidnight_Constructors::testConstructor_int_int_int_Chronology
  - org.joda.time.TestDateMidnight_Constructors::testConstructor_int_int_int_nullDateTimeZone
  - org.joda.time.TestDateMidnight_Basics::testIsEqual
  - org.joda.time.TestDateMidnight_Basics::testIsAfter
  - org.joda.time.TestDateMidnight_Basics::testWithers
  - org.joda.time.TestDateMidnight_Basics::testIsBefore
  - org.joda.time.TestDateMidnight_Basics::testWithFields_RPartial
Failing tests: 361
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
throw new IllegalInstantException("Illegal instant due to time zone offset transition ("+zone);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 0
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_tokyo_endOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_tokyo_endOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_tokyo_endOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_tokyo_endOfYear
Failing tests: 0
TESTING : time_7
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.joda.time.tz.TestCompiler::test_Amman_2006
  - org.joda.time.tz.TestCompiler::test_Amman_2005
  - org.joda.time.tz.TestCompiler::test_Amman_2004
  - org.joda.time.tz.TestCompiler::test_Amman_2003
  - org.joda.time.format.TestTextFields::testMonthNames_monthStart
  - org.joda.time.format.TestTextFields::testWeekdayNames
  - org.joda.time.format.TestTextFields::testMonthNames_monthEnd
  - org.joda.time.format.TestISODateTimeFormatParsing::test_basicWeekDate
  - org.joda.time.format.TestISODateTimeFormatParsing::test_dateElementParser
  - org.joda.time.format.TestISODateTimeFormatParsing::test_weekDate
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseShortName
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseShortNameWithLookup
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_localPrintParseZoneTokyo
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_parseWrongOffset
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseZoneTokyo
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseZoneParis
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseZoneBahiaBanderas
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseOffset
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseZoneDawsonCreek
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseLongNameWithLookup
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_localPrintParseOffset
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_localPrintParseOffsetAndZone
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_parseWrongOffsetAndZone
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseOffsetAndZone
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseShortNameWithAutoLookup
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseLongName
  - org.joda.time.format.TestDateTimeFormatter::testZoneNameNearTransition
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_simple
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_zone3
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_zone2
  - org.joda.time.format.TestDateTimeFormatter::testZoneShortNameNearTransition
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_zone
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_chrono
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_endOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseMutableDateTime_zone3
  - org.joda.time.format.TestDateTimeFormatter::testParseMutableDateTime_zone2
  - org.joda.time.format.TestDateTimeFormatter::testParseDateTime_zone3
  - org.joda.time.format.TestDateTimeFormatter::testParseDateTime_zone2
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthOnly
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_simple_precedence
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_offsetParsed
  - org.joda.time.format.TestDateTimeFormatter::testParseMutableDateTime_simple
  - org.joda.time.format.TestDateTimeFormatter::testParseDateTime_offsetParsed
  - org.joda.time.format.TestDateTimeFormatter::testParseDateTime_simple
  - org.joda.time.format.TestDateTimeFormatter::testParseMutableDateTime_zone
  - org.joda.time.format.TestDateTimeFormatter::testParseMutableDateTime_chrono
  - org.joda.time.format.TestDateTimeFormatter::testParseDateTime_simple_precedence
  - org.joda.time.format.TestDateTimeFormatter::testParseMutableDateTime_offsetParsed
  - org.joda.time.format.TestDateTimeFormatter::testParseDateTime_chrono
  - org.joda.time.format.TestDateTimeFormatter::testParseDateTime_zone
  - org.joda.time.format.TestDateTimeFormatter::testParseMutableDateTime_simple_precedence
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_tokyo_startOfYear
  - org.joda.time.convert.TestStringConverter::testSetIntoInterval_Object_Chronology6
  - org.joda.time.convert.TestStringConverter::testSetIntoInterval_Object_Chronology5
  - org.joda.time.convert.TestStringConverter::testSetIntoInterval_Object_Chronology4
  - org.joda.time.convert.TestStringConverter::testSetIntoInterval_Object_Chronology3
  - org.joda.time.convert.TestStringConverter::testSetIntoInterval_Object_Chronology2
  - org.joda.time.convert.TestStringConverter::testSetIntoInterval_Object_Chronology1
  - org.joda.time.convert.TestStringConverter::testGetInstantMillis_Object_Zone
  - org.joda.time.convert.TestStringConverter::testGetInstantMillis_Object
  - org.joda.time.convert.TestStringConverter::testGetInstantMillis_Object_Chronology
  - org.joda.time.chrono.TestLenientChronology::testNearDstTransition
  - org.joda.time.chrono.TestIslamicChronology::testSampleDateWithZone
  - org.joda.time.chrono.TestEthiopicChronology::testSampleDateWithZone
  - org.joda.time.chrono.TestCopticChronology::testSampleDateWithZone
  - org.joda.time.TestYearMonth_Constructors::testConstructor_DateTimeZone
  - org.joda.time.TestYearMonth_Basics::testToInterval_Zone
  - org.joda.time.TestYearMonthDay_Constructors::testConstructor_DateTimeZone
  - org.joda.time.TestYearMonthDay_Basics::testToInterval_Zone
  - org.joda.time.TestYearMonthDay_Basics::testToDateTime_TOD_Zone
  - org.joda.time.TestTimeOfDay_Constructors::testConstructor_nullDateTimeZone
  - org.joda.time.TestTimeOfDay_Constructors::testConstructor_DateTimeZone
  - org.joda.time.TestStringConvert::testDateMidnight
  - org.joda.time.TestStringConvert::testMutableDateTime
  - org.joda.time.TestStringConvert::testDateTime
  - org.joda.time.TestPeriod_Constructors::testConstructor_RI_RI4
  - org.joda.time.TestPeriod_Constructors::testConstructor_RI_RI3
  - org.joda.time.TestPeriod_Constructors::testConstructor_RI_RI_PeriodType4
  - org.joda.time.TestPartial_Match::testIsMatch_Instant
  - org.joda.time.TestMutablePeriod_Updates::testAdd_RInterval2
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_RI_RI4
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_RI_RI3
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_RI_RI_PeriodType4
  - org.joda.time.TestMutableInterval_Constructors::testParse_noFormatter
  - org.joda.time.TestMutableDateTime_Sets::testSetYear_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetMilliOfDay_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetWeekOfWeekyear_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetWeekOfWeekyear_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetMilliOfSecond_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetMilliOfSecond_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetDate_RI_same
  - org.joda.time.TestMutableDateTime_Sets::testSetDate_int_int_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetHourOfDay_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetDayOfYear_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetDayOfYear_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetMinuteOfDay_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetSecondOfMinute_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetSecondOfMinute_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetDayOfMonth_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetDayOfMonth_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetSecondOfDay_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetMonthOfYear_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetMonthOfYear_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetDate_RI_different2
  - org.joda.time.TestMutableDateTime_Sets::testSetDate_RI_different1
  - org.joda.time.TestMutableDateTime_Sets::testSetDate_long1
  - org.joda.time.TestMutableDateTime_Sets::testSetDate_RI2
  - org.joda.time.TestMutableDateTime_Sets::testSetDate_RI1
  - org.joda.time.TestMutableDateTime_Sets::testSetWeekyear_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetDayOfWeek_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetDayOfWeek_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetMinuteOfHour_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetMinuteOfHour_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetTime_int_int_int_int1
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetDayOfMonth
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetHourOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetTextDayOfMonth
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetWeekOfWeekyear
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetDayOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetDayOfWeek
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddWrapFieldYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetMonthOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyToIntervalMonthOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetTextDayOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetTextDayOfWeek
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddWeekOfWeekyear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyRoundCeilingHourOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetTextYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddWrapFieldDayOfMonth
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetMillisOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetMinuteOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddMonthOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddWrapFieldWeekOfWeekyear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetDayOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetDayOfWeek
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddDayOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddDayOfWeek
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetTextMonthOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyRoundFloorHourOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertyRoundHalfEvenHourOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertyRoundHalfFloorHourOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertyToIntervalDayOfMonth
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetTextWeekOfWeekyear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetSecondOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddWrapFieldMonthOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetDayOfMonth
  - org.joda.time.TestMutableDateTime_Properties::testPropertyRoundHalfCeilingHourOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddLongDayOfWeek
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddDayOfMonth
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddWrapFieldDayOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddWrapFieldDayOfWeek
  - org.joda.time.TestMutableDateTime_Constructors::testParse_noFormatter
  - org.joda.time.TestMutableDateTime_Constructors::testParse_formatter
  - org.joda.time.TestMutableDateTime_Constructors::testConstructor_int_int_int_int_int_int_int
  - org.joda.time.TestMutableDateTime_Constructors::testConstructor_int_int_int_int_int_int_int_nullChronology
  - org.joda.time.TestMutableDateTime_Constructors::testConstructor_int_int_int_int_int_int_int_Chronology
  - org.joda.time.TestMutableDateTime_Constructors::testConstructor_int_int_int_int_int_int_int_DateTimeZone
  - org.joda.time.TestMutableDateTime_Constructors::testConstructor_int_int_int_int_int_int_int_nullDateTimeZone
  - org.joda.time.TestMutableDateTime_Basics::testRounding6
  - org.joda.time.TestMutableDateTime_Basics::testRounding5
  - org.joda.time.TestMutableDateTime_Basics::testRounding4
  - org.joda.time.TestMutableDateTime_Basics::testRounding3
  - org.joda.time.TestMutableDateTime_Basics::testRounding2
  - org.joda.time.TestMutableDateTime_Basics::testRounding1
  - org.joda.time.TestMutableDateTime_Adds::testAddSeconds_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddMillis_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddMinutes_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddWeekyears_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddHours_int1
  - org.joda.time.TestMutableDateTime_Adds::testAdd_RP1
  - org.joda.time.TestMonthDay_Constructors::testConstructor_DateTimeZone
  - org.joda.time.TestLocalTime_Constructors::testConstructor_nullDateTimeZone
  - org.joda.time.TestLocalTime_Constructors::testConstructor_DateTimeZone
  - org.joda.time.TestLocalTime_Constructors::testConstructor_long_DateTimeZone_2
  - org.joda.time.TestLocalDate_Constructors::testConstructor_long3_DateTimeZone
  - org.joda.time.TestLocalDate_Constructors::testConstructor_DateTimeZone
  - org.joda.time.TestLocalDate_Basics::testToDateTimeAtStartOfDay_avoidDST
  - org.joda.time.TestLocalDate_Basics::testToDateTimeAtStartOfDay_Zone
  - org.joda.time.TestLocalDate_Basics::testToDateTime_LocalTime_Zone
  - org.joda.time.TestLocalDate_Basics::testToInterval_Zone_noMidnight
  - org.joda.time.TestLocalDate_Basics::testToDateTimeAtStartOfDay_Zone_avoidDST
  - org.joda.time.TestLocalDateTime_Constructors::testConstructor_DateTimeZone
  - org.joda.time.TestLocalDateTime_Basics::testToDateTime_nullRI
  - org.joda.time.TestInterval_Constructors::testParse_noFormatter
  - org.joda.time.TestInstant_Constructors::testParse_noFormatter
  - org.joda.time.TestInstant_Constructors::testParse_formatter
  - org.joda.time.TestIllegalFieldValueException::testZoneTransition
  - org.joda.time.TestDateTime_Properties::testPropertyGetDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertyGetHourOfDay
  - org.joda.time.TestDateTime_Properties::testPropertySetTextDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertySetWeekOfWeekyear
  - org.joda.time.TestDateTime_Properties::testPropertySetDayOfYear
  - org.joda.time.TestDateTime_Properties::testPropertySetDayOfWeek
  - org.joda.time.TestDateTime_Properties::testPropertyAddWrapFieldYear
  - org.joda.time.TestDateTime_Properties::testPropertySetMonthOfYear
  - org.joda.time.TestDateTime_Properties::testPropertyToIntervalMonthOfYear
  - org.joda.time.TestDateTime_Properties::testPropertySetYear
  - org.joda.time.TestDateTime_Properties::testPropertySetTextDayOfYear
  - org.joda.time.TestDateTime_Properties::testPropertySetTextDayOfWeek
  - org.joda.time.TestDateTime_Properties::testPropertyAddWeekOfWeekyear
  - org.joda.time.TestDateTime_Properties::testPropertyRoundCeilingHourOfDay
  - org.joda.time.TestDateTime_Properties::testPropertySetTextYear
  - org.joda.time.TestDateTime_Properties::testPropertyAddWrapFieldDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertyGetMillisOfDay
  - org.joda.time.TestDateTime_Properties::testPropertyGetMinuteOfDay
  - org.joda.time.TestDateTime_Properties::testPropertyAddMonthOfYear
  - org.joda.time.TestDateTime_Properties::testPropertyAddWrapFieldWeekOfWeekyear
  - org.joda.time.TestDateTime_Properties::testPropertyGetDayOfYear
  - org.joda.time.TestDateTime_Properties::testPropertyGetDayOfWeek
  - org.joda.time.TestDateTime_Properties::testPropertyWithMinimumValueDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertyAddDayOfYear
  - org.joda.time.TestDateTime_Properties::testPropertyAddDayOfWeek
  - org.joda.time.TestDateTime_Properties::testPropertySetTextMonthOfYear
  - org.joda.time.TestDateTime_Properties::testPropertyRoundFloorHourOfDay
  - org.joda.time.TestDateTime_Properties::testPropertyRoundHalfEvenHourOfDay
  - org.joda.time.TestDateTime_Properties::testPropertyRoundHalfFloorHourOfDay
  - org.joda.time.TestDateTime_Properties::testPropertyToIntervalDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertySetTextWeekOfWeekyear
  - org.joda.time.TestDateTime_Properties::testPropertyGetSecondOfDay
  - org.joda.time.TestDateTime_Properties::testPropertyAddWrapFieldMonthOfYear
  - org.joda.time.TestDateTime_Properties::testPropertyWithMaximumValueDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertySetDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertyRoundHalfCeilingHourOfDay
  - org.joda.time.TestDateTime_Properties::testPropertyAddLongDayOfWeek
  - org.joda.time.TestDateTime_Properties::testPropertyAddYear
  - org.joda.time.TestDateTime_Properties::testPropertyAddDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertyAddWrapFieldDayOfYear
  - org.joda.time.TestDateTime_Properties::testPropertyAddWrapFieldDayOfWeek
  - org.joda.time.TestDateTime_Constructors::testParse_noFormatter
  - org.joda.time.TestDateTime_Constructors::testParse_formatter
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_nullChronology
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_int
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_nullChronology
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_int_nullChronology
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_DateTimeZone
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_int_Chronology
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_Chronology
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_Chronology
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_DateTimeZone
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_nullDateTimeZone
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_int_DateTimeZone
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_nullDateTimeZone
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_int_nullDateTimeZone
  - org.joda.time.TestDateTime_Basics::testWithers
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_withDay_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_withDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_athens
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_newValid_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_newValid_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_minute_NewYork_Spring_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_secondOfMinute_NewYork_Autumn_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusHour_NewYork_Autumn
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_day_NewYork_Autumn_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_addWrapFieldDay_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_addWrapFieldDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_minuteOfHour_NewYork_Autumn_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusHour_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusHour_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_new_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusHour_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusHour_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_hourOfDay_NewYork_Autumn_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusHour_Moscow_Autumn
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_setHourAcross_Moscow_Spring
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_setHourBack_Moscow_Spring
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_setHourBack_NewYork_Spring
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_paris
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_day_NewYork_Autumn_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_hourOfDay_NewYork_Autumn_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_hour_NewYork_Spring_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_day_NewYork_Autumn_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_hour_NewYork_Spring_preCutover
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_losAngeles
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_minute_NewYork_Spring_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_day_NewYork_Autumn_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_day_NewYork_Spring_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_setHourAcross_NewYork_Spring
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_setHourForward_NewYork_Spring
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_newYork
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_hourOfDay_NewYork_Autumn_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_constructor_NewYork_Autumn
  - org.joda.time.TestDateTimeZoneCutover::testWithMinuteOfHourInDstChange_mockZone
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_minute_NewYork_Spring_preCutover
  - org.joda.time.TestDateTimeZoneCutover::testBug3476684_adjustOffset
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_withHourZero_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_withHourZero_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_hourOfDay_NewYork_Autumn_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_secondOfMinute_NewYork_Autumn_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_day_NewYork_Spring_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_constructor_Moscow_Autumn
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_day_NewYork_Spring_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusHour_Guatemata_Autumn
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_hour_NewYork_Spring_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_secondOfMinute_NewYork_Autumn_postCutover
  - org.joda.time.TestDateTimeZoneCutover::testBug3476684_adjustOffset_springGap
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_minuteOfHour_NewYork_Autumn_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloorNotDST_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusHour_Moscow_Autumn
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusHour_Guatemata_Autumn
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_secondOfMinute_NewYork_Autumn_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_setHourZero_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_setHourZero_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_day_NewYork_Spring_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_minute_NewYork_Spring_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_setHourForward_Moscow_Spring
  - org.joda.time.TestDateTimeZoneCutover::testBug3192457_adjustOffset
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover::test_LocalDate_toDateMidnight_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_minuteOfHour_NewYork_Autumn_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_minuteOfHour_NewYork_Autumn_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_hour_NewYork_Spring_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusHour_NewYork_Autumn
  - org.joda.time.TestDateTimeZone::testCommentParse
  - org.joda.time.TestDateTimeZone::testIsLocalDateTimeGap_Berlin
  - org.joda.time.TestDateTimeZone::testIsLocalDateTimeGap_NewYork
  - org.joda.time.TestDateMidnight_Properties::testPropertyGetDayOfMonth
  - org.joda.time.TestDateMidnight_Properties::testPropertySetMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyToIntervalMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyRoundHalfCeilingMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyAddMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyGetDayOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyGetDayOfWeek
  - org.joda.time.TestDateMidnight_Properties::testPropertyAddLongMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyWithMinimumValueDayOfMonth
  - org.joda.time.TestDateMidnight_Properties::testPropertySetTextLocaleMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertySetTextMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyRemainderMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyAddWrapFieldMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyWithMaximumValueDayOfMonth
  - org.joda.time.TestDateMidnight_Properties::testPropertyRoundHalfFloorMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyRoundHalfEvenMonthOfYear
  - org.joda.time.TestDateMidnight_Constructors::testParse_noFormatter
  - org.joda.time.TestDateMidnight_Constructors::testParse_formatter
  - org.joda.time.TestDateMidnight_Constructors::testConstructor_int_int_int
  - org.joda.time.TestDateMidnight_Constructors::testConstructor_int_int_int_nullChronology
  - org.joda.time.TestDateMidnight_Constructors::testConstructor_int_int_int_DateTimeZone
  - org.joda.time.TestDateMidnight_Constructors::testConstructor_int_int_int_Chronology
  - org.joda.time.TestDateMidnight_Constructors::testConstructor_int_int_int_nullDateTimeZone
  - org.joda.time.TestDateMidnight_Basics::testIsEqual
  - org.joda.time.TestDateMidnight_Basics::testIsAfter
  - org.joda.time.TestDateMidnight_Basics::testWithers
  - org.joda.time.TestDateMidnight_Basics::testIsBefore
  - org.joda.time.TestDateMidnight_Basics::testWithFields_RPartial
Failing tests: 361
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offset==zone.getOffset(localInstant)){
throw new IllegalInstantException(localInstant,zone.getID());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offset!=zone.getOffset(localInstant)){
if(offset==getOffset(localInstant)){
return serialVersionUID-getOffset(localInstant);
}
throw new IllegalInstantException(localInstant,zone.getID());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset!=zone.getOffset(localInstant)){
if(serialVersionUID-localInstant<=getOffset(localInstant)-offset){
return getOffset(localInstant);
}
throw new IllegalInstantException(localInstant,zone.getID());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset!=zone.getOffset(localInstant)){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),new IllegalInstantException(localInstant,zone.getID()).getMessage());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset!=zone.getOffset(localInstant)){
new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),new IllegalInstantException(localInstant,zone.getID()).getMessage()).initCause(new IllegalInstantException(localInstant,zone.getID()));
throw new IllegalInstantException(localInstant,zone.getID());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset!=zone.getOffset(localInstant)){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offset!=zone.getOffset(localInstant)){
if(offset==null){
return ISOChronology.getInstance(zone);
}
throw new IllegalInstantException(localInstant,zone.getID());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset!=zone.getOffset(localInstant)){
if(zone==getZone()){
return this;
}
throw new IllegalInstantException(localInstant,zone.getID());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset!=zone.getOffset(localInstant)){
if(offset==getZone()){
return this;
}
throw new IllegalInstantException(localInstant,zone.getID());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset!=zone.getOffset(localInstant)){
if(offset==getParam()){
return this;
}
throw new IllegalInstantException(localInstant,zone.getID());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset!=zone.getOffset(localInstant)){
if(zone==null){
return DateTimeZone.getDefault();
}
throw new IllegalInstantException(localInstant,zone.getID());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset!=zone.getOffset(localInstant)){
if(getZone()==zone){
return this;
}
throw new IllegalInstantException(localInstant,zone.getID());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
zone=DateTimeUtils.getZone(zone);
if(offset!=zone.getOffset(localInstant)){
throw new IllegalInstantException(localInstant,zone.getID());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset!=zone.getOffset(localInstant)){
if(zone==DateTimeZone.UTC){
return getBase();
}
throw new IllegalInstantException(localInstant,zone.getID());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset!=zone.getOffset(localInstant)){
if(offset==DateTimeZone.UTC){
return withUTC();
}
throw new IllegalInstantException(localInstant,zone.getID());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset!=zone.getOffset(localInstant)){
if(offset==null){
return getOffset(DateTimeUtils.currentTimeMillis());
}
throw new IllegalInstantException(localInstant,zone.getID());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==getZone()){
return this;
}
if(offset!=zone.getOffset(localInstant)){
throw new IllegalInstantException(localInstant,zone.getID());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset!=zone.getOffset(localInstant)){
throw new IllegalArgumentException("DateTimeZone must not be null");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offset!=zone.getOffset(localInstant)){
throw new NullPointerException("Zone must not be null");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offset!=zone.getOffset(localInstant)){
if(zone!=null){
return zone;
}
throw new IllegalInstantException(localInstant,zone.getID());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setTime(serialVersionUID);
if(offset!=zone.getOffset(localInstant)){
throw new IllegalInstantException(localInstant,zone.getID());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset!=zone.getOffset(localInstant)){
if(offset==zone){
return this;
}
throw new IllegalInstantException(localInstant,zone.getID());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset!=zone.getOffset(localInstant)){
System.out.println("*d* Error in "+zone.getID());
throw new IllegalInstantException(localInstant,zone.getID());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offset!=zone.getOffset(localInstant)){
throw new IllegalArgumentException("The offset cannot be zero");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offset==zone.getOffset(localInstant)){
throw new IllegalArgumentException("The offset cannot be zero");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offset!=zone.getOffset(localInstant)){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
if(getZone()==zone){
return this;
}
throw new IllegalInstantException(localInstant,zone.getID());
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
zone=DateTimeUtils.getZone(zone);
if(offset!=zone.getOffset(localInstant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DateTimeZone zone=getZone();
int offset=iZone.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DateTimeZone zone=getZone();
int offset=zone.getOffset(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
if(zone==getZone()){
return this;
}
throw new IllegalInstantException(localInstant,zone.getID());
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==getZone()){
return this;
}
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new GregorianCalendar(zone.toTimeZone()).setTime(toDate());
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
if(iZone==zone){
return this;
}
throw new IllegalInstantException(localInstant,zone.getID());
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
iZone=DateTimeUtils.getZone(newZone);
if(offset!=zone.getOffset(localInstant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
iZone=DateTimeUtils.getZone(newZone);
if(offset!=zone.getOffset(localInstant)){
if(iZone==zone){
return this;
}
throw new IllegalInstantException(localInstant,zone.getID());
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(offset==zone.getOffset(localInstant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
if(offset==getOffset(serialVersionUID)){
return localInstant;
}
throw new IllegalInstantException(localInstant,zone.getID());
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DateTimeZone zone=getZone();
int offset=zone.getOffset(localInstant);
localInstant-=offset;
if(offset==zone.getOffset(localInstant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
if(zone!=null){
return zone;
}
throw new IllegalInstantException(localInstant,zone.getID());
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setTime(localInstant);
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DateTimeZone zone=getZone();
int offset=zone.getOffset(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
DateTimeZone zone=getZone();
int offset=zone.getOffsetToAdd(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
DateTimeZone zone=getZone();
long offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
if(getOffset(localInstant)<=offset){
return serialVersionUID;
}
throw new IllegalInstantException(localInstant,zone.getID());
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DateTimeZone zone=getZone();
long offset=zone.getOffset(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
return zone.convertLocalToUTC(localInstant,false,serialVersionUID);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 0
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_tokyo_endOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_tokyo_endOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_tokyo_endOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_tokyo_endOfYear
Failing tests: 0
TESTING : time_7
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.joda.time.tz.TestCompiler::test_Amman_2006
  - org.joda.time.tz.TestCompiler::test_Amman_2005
  - org.joda.time.tz.TestCompiler::test_Amman_2004
  - org.joda.time.tz.TestCompiler::test_Amman_2003
  - org.joda.time.format.TestTextFields::testMonthNames_monthStart
  - org.joda.time.format.TestTextFields::testWeekdayNames
  - org.joda.time.format.TestTextFields::testMonthNames_monthEnd
  - org.joda.time.format.TestISODateTimeFormatParsing::test_basicWeekDate
  - org.joda.time.format.TestISODateTimeFormatParsing::test_dateElementParser
  - org.joda.time.format.TestISODateTimeFormatParsing::test_weekDate
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseShortName
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseShortNameWithLookup
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_localPrintParseZoneTokyo
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_parseWrongOffset
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseZoneTokyo
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseZoneParis
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseZoneBahiaBanderas
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseOffset
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseZoneDawsonCreek
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseLongNameWithLookup
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_localPrintParseOffset
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_localPrintParseOffsetAndZone
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_parseWrongOffsetAndZone
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseOffsetAndZone
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseShortNameWithAutoLookup
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseLongName
  - org.joda.time.format.TestDateTimeFormatter::testZoneNameNearTransition
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_simple
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_zone3
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_zone2
  - org.joda.time.format.TestDateTimeFormatter::testZoneShortNameNearTransition
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_zone
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_chrono
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_endOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseMutableDateTime_zone3
  - org.joda.time.format.TestDateTimeFormatter::testParseMutableDateTime_zone2
  - org.joda.time.format.TestDateTimeFormatter::testParseDateTime_zone3
  - org.joda.time.format.TestDateTimeFormatter::testParseDateTime_zone2
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthOnly
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_simple_precedence
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_offsetParsed
  - org.joda.time.format.TestDateTimeFormatter::testParseMutableDateTime_simple
  - org.joda.time.format.TestDateTimeFormatter::testParseDateTime_offsetParsed
  - org.joda.time.format.TestDateTimeFormatter::testParseDateTime_simple
  - org.joda.time.format.TestDateTimeFormatter::testParseMutableDateTime_zone
  - org.joda.time.format.TestDateTimeFormatter::testParseMutableDateTime_chrono
  - org.joda.time.format.TestDateTimeFormatter::testParseDateTime_simple_precedence
  - org.joda.time.format.TestDateTimeFormatter::testParseMutableDateTime_offsetParsed
  - org.joda.time.format.TestDateTimeFormatter::testParseDateTime_chrono
  - org.joda.time.format.TestDateTimeFormatter::testParseDateTime_zone
  - org.joda.time.format.TestDateTimeFormatter::testParseMutableDateTime_simple_precedence
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_tokyo_startOfYear
  - org.joda.time.convert.TestStringConverter::testSetIntoInterval_Object_Chronology6
  - org.joda.time.convert.TestStringConverter::testSetIntoInterval_Object_Chronology5
  - org.joda.time.convert.TestStringConverter::testSetIntoInterval_Object_Chronology4
  - org.joda.time.convert.TestStringConverter::testSetIntoInterval_Object_Chronology3
  - org.joda.time.convert.TestStringConverter::testSetIntoInterval_Object_Chronology2
  - org.joda.time.convert.TestStringConverter::testSetIntoInterval_Object_Chronology1
  - org.joda.time.convert.TestStringConverter::testGetInstantMillis_Object_Zone
  - org.joda.time.convert.TestStringConverter::testGetInstantMillis_Object
  - org.joda.time.convert.TestStringConverter::testGetInstantMillis_Object_Chronology
  - org.joda.time.chrono.TestLenientChronology::testNearDstTransition
  - org.joda.time.chrono.TestIslamicChronology::testSampleDateWithZone
  - org.joda.time.chrono.TestEthiopicChronology::testSampleDateWithZone
  - org.joda.time.chrono.TestCopticChronology::testSampleDateWithZone
  - org.joda.time.TestYearMonth_Constructors::testConstructor_DateTimeZone
  - org.joda.time.TestYearMonth_Basics::testToInterval_Zone
  - org.joda.time.TestYearMonthDay_Constructors::testConstructor_DateTimeZone
  - org.joda.time.TestYearMonthDay_Basics::testToInterval_Zone
  - org.joda.time.TestYearMonthDay_Basics::testToDateTime_TOD_Zone
  - org.joda.time.TestTimeOfDay_Constructors::testConstructor_nullDateTimeZone
  - org.joda.time.TestTimeOfDay_Constructors::testConstructor_DateTimeZone
  - org.joda.time.TestStringConvert::testDateMidnight
  - org.joda.time.TestStringConvert::testMutableDateTime
  - org.joda.time.TestStringConvert::testDateTime
  - org.joda.time.TestPeriod_Constructors::testConstructor_RI_RI4
  - org.joda.time.TestPeriod_Constructors::testConstructor_RI_RI3
  - org.joda.time.TestPeriod_Constructors::testConstructor_RI_RI_PeriodType4
  - org.joda.time.TestPartial_Match::testIsMatch_Instant
  - org.joda.time.TestMutablePeriod_Updates::testAdd_RInterval2
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_RI_RI4
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_RI_RI3
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_RI_RI_PeriodType4
  - org.joda.time.TestMutableInterval_Constructors::testParse_noFormatter
  - org.joda.time.TestMutableDateTime_Sets::testSetYear_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetMilliOfDay_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetWeekOfWeekyear_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetWeekOfWeekyear_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetMilliOfSecond_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetMilliOfSecond_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetDate_RI_same
  - org.joda.time.TestMutableDateTime_Sets::testSetDate_int_int_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetHourOfDay_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetDayOfYear_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetDayOfYear_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetMinuteOfDay_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetSecondOfMinute_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetSecondOfMinute_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetDayOfMonth_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetDayOfMonth_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetSecondOfDay_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetMonthOfYear_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetMonthOfYear_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetDate_RI_different2
  - org.joda.time.TestMutableDateTime_Sets::testSetDate_RI_different1
  - org.joda.time.TestMutableDateTime_Sets::testSetDate_long1
  - org.joda.time.TestMutableDateTime_Sets::testSetDate_RI2
  - org.joda.time.TestMutableDateTime_Sets::testSetDate_RI1
  - org.joda.time.TestMutableDateTime_Sets::testSetWeekyear_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetDayOfWeek_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetDayOfWeek_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetMinuteOfHour_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetMinuteOfHour_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetTime_int_int_int_int1
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetDayOfMonth
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetHourOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetTextDayOfMonth
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetWeekOfWeekyear
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetDayOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetDayOfWeek
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddWrapFieldYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetMonthOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyToIntervalMonthOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetTextDayOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetTextDayOfWeek
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddWeekOfWeekyear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyRoundCeilingHourOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetTextYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddWrapFieldDayOfMonth
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetMillisOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetMinuteOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddMonthOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddWrapFieldWeekOfWeekyear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetDayOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetDayOfWeek
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddDayOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddDayOfWeek
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetTextMonthOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyRoundFloorHourOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertyRoundHalfEvenHourOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertyRoundHalfFloorHourOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertyToIntervalDayOfMonth
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetTextWeekOfWeekyear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetSecondOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddWrapFieldMonthOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetDayOfMonth
  - org.joda.time.TestMutableDateTime_Properties::testPropertyRoundHalfCeilingHourOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddLongDayOfWeek
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddDayOfMonth
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddWrapFieldDayOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddWrapFieldDayOfWeek
  - org.joda.time.TestMutableDateTime_Constructors::testParse_noFormatter
  - org.joda.time.TestMutableDateTime_Constructors::testParse_formatter
  - org.joda.time.TestMutableDateTime_Constructors::testConstructor_int_int_int_int_int_int_int
  - org.joda.time.TestMutableDateTime_Constructors::testConstructor_int_int_int_int_int_int_int_nullChronology
  - org.joda.time.TestMutableDateTime_Constructors::testConstructor_int_int_int_int_int_int_int_Chronology
  - org.joda.time.TestMutableDateTime_Constructors::testConstructor_int_int_int_int_int_int_int_DateTimeZone
  - org.joda.time.TestMutableDateTime_Constructors::testConstructor_int_int_int_int_int_int_int_nullDateTimeZone
  - org.joda.time.TestMutableDateTime_Basics::testRounding6
  - org.joda.time.TestMutableDateTime_Basics::testRounding5
  - org.joda.time.TestMutableDateTime_Basics::testRounding4
  - org.joda.time.TestMutableDateTime_Basics::testRounding3
  - org.joda.time.TestMutableDateTime_Basics::testRounding2
  - org.joda.time.TestMutableDateTime_Basics::testRounding1
  - org.joda.time.TestMutableDateTime_Adds::testAddSeconds_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddMillis_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddMinutes_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddWeekyears_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddHours_int1
  - org.joda.time.TestMutableDateTime_Adds::testAdd_RP1
  - org.joda.time.TestMonthDay_Constructors::testConstructor_DateTimeZone
  - org.joda.time.TestLocalTime_Constructors::testConstructor_nullDateTimeZone
  - org.joda.time.TestLocalTime_Constructors::testConstructor_DateTimeZone
  - org.joda.time.TestLocalTime_Constructors::testConstructor_long_DateTimeZone_2
  - org.joda.time.TestLocalDate_Constructors::testConstructor_long3_DateTimeZone
  - org.joda.time.TestLocalDate_Constructors::testConstructor_DateTimeZone
  - org.joda.time.TestLocalDate_Basics::testToDateTimeAtStartOfDay_avoidDST
  - org.joda.time.TestLocalDate_Basics::testToDateTimeAtStartOfDay_Zone
  - org.joda.time.TestLocalDate_Basics::testToDateTime_LocalTime_Zone
  - org.joda.time.TestLocalDate_Basics::testToInterval_Zone_noMidnight
  - org.joda.time.TestLocalDate_Basics::testToDateTimeAtStartOfDay_Zone_avoidDST
  - org.joda.time.TestLocalDateTime_Constructors::testConstructor_DateTimeZone
  - org.joda.time.TestLocalDateTime_Basics::testToDateTime_nullRI
  - org.joda.time.TestInterval_Constructors::testParse_noFormatter
  - org.joda.time.TestInstant_Constructors::testParse_noFormatter
  - org.joda.time.TestInstant_Constructors::testParse_formatter
  - org.joda.time.TestDateTime_Properties::testPropertyGetDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertyGetHourOfDay
  - org.joda.time.TestDateTime_Properties::testPropertySetTextDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertySetWeekOfWeekyear
  - org.joda.time.TestDateTime_Properties::testPropertySetDayOfYear
  - org.joda.time.TestDateTime_Properties::testPropertySetDayOfWeek
  - org.joda.time.TestDateTime_Properties::testPropertyAddWrapFieldYear
  - org.joda.time.TestDateTime_Properties::testPropertySetMonthOfYear
  - org.joda.time.TestDateTime_Properties::testPropertyToIntervalMonthOfYear
  - org.joda.time.TestDateTime_Properties::testPropertySetYear
  - org.joda.time.TestDateTime_Properties::testPropertySetTextDayOfYear
  - org.joda.time.TestDateTime_Properties::testPropertySetTextDayOfWeek
  - org.joda.time.TestDateTime_Properties::testPropertyAddWeekOfWeekyear
  - org.joda.time.TestDateTime_Properties::testPropertyRoundCeilingHourOfDay
  - org.joda.time.TestDateTime_Properties::testPropertySetTextYear
  - org.joda.time.TestDateTime_Properties::testPropertyAddWrapFieldDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertyGetMillisOfDay
  - org.joda.time.TestDateTime_Properties::testPropertyGetMinuteOfDay
  - org.joda.time.TestDateTime_Properties::testPropertyAddMonthOfYear
  - org.joda.time.TestDateTime_Properties::testPropertyAddWrapFieldWeekOfWeekyear
  - org.joda.time.TestDateTime_Properties::testPropertyGetDayOfYear
  - org.joda.time.TestDateTime_Properties::testPropertyGetDayOfWeek
  - org.joda.time.TestDateTime_Properties::testPropertyWithMinimumValueDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertyAddDayOfYear
  - org.joda.time.TestDateTime_Properties::testPropertyAddDayOfWeek
  - org.joda.time.TestDateTime_Properties::testPropertySetTextMonthOfYear
  - org.joda.time.TestDateTime_Properties::testPropertyRoundFloorHourOfDay
  - org.joda.time.TestDateTime_Properties::testPropertyRoundHalfEvenHourOfDay
  - org.joda.time.TestDateTime_Properties::testPropertyRoundHalfFloorHourOfDay
  - org.joda.time.TestDateTime_Properties::testPropertyToIntervalDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertySetTextWeekOfWeekyear
  - org.joda.time.TestDateTime_Properties::testPropertyGetSecondOfDay
  - org.joda.time.TestDateTime_Properties::testPropertyAddWrapFieldMonthOfYear
  - org.joda.time.TestDateTime_Properties::testPropertyWithMaximumValueDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertySetDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertyRoundHalfCeilingHourOfDay
  - org.joda.time.TestDateTime_Properties::testPropertyAddLongDayOfWeek
  - org.joda.time.TestDateTime_Properties::testPropertyAddYear
  - org.joda.time.TestDateTime_Properties::testPropertyAddDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertyAddWrapFieldDayOfYear
  - org.joda.time.TestDateTime_Properties::testPropertyAddWrapFieldDayOfWeek
  - org.joda.time.TestDateTime_Constructors::testParse_noFormatter
  - org.joda.time.TestDateTime_Constructors::testParse_formatter
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_nullChronology
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_int
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_nullChronology
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_int_nullChronology
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_DateTimeZone
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_int_Chronology
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_Chronology
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_Chronology
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_DateTimeZone
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_nullDateTimeZone
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_int_DateTimeZone
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_nullDateTimeZone
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_int_nullDateTimeZone
  - org.joda.time.TestDateTime_Basics::testWithers
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_withDay_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_withDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_athens
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_minute_NewYork_Spring_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_secondOfMinute_NewYork_Autumn_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusHour_NewYork_Autumn
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_day_NewYork_Autumn_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_addWrapFieldDay_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_addWrapFieldDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_minuteOfHour_NewYork_Autumn_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusHour_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusHour_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusHour_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusHour_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_hourOfDay_NewYork_Autumn_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusHour_Moscow_Autumn
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_setHourAcross_Moscow_Spring
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_setHourBack_Moscow_Spring
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_setHourBack_NewYork_Spring
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_paris
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_day_NewYork_Autumn_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_hourOfDay_NewYork_Autumn_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_hour_NewYork_Spring_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_day_NewYork_Autumn_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_hour_NewYork_Spring_preCutover
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_losAngeles
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_minute_NewYork_Spring_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_day_NewYork_Autumn_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_day_NewYork_Spring_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_setHourAcross_NewYork_Spring
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_setHourForward_NewYork_Spring
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_newYork
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_hourOfDay_NewYork_Autumn_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_constructor_NewYork_Autumn
  - org.joda.time.TestDateTimeZoneCutover::testWithMinuteOfHourInDstChange_mockZone
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_minute_NewYork_Spring_preCutover
  - org.joda.time.TestDateTimeZoneCutover::testBug3476684_adjustOffset
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_withHourZero_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_withHourZero_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_hourOfDay_NewYork_Autumn_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_secondOfMinute_NewYork_Autumn_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_day_NewYork_Spring_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_constructor_Moscow_Autumn
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_day_NewYork_Spring_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusHour_Guatemata_Autumn
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_hour_NewYork_Spring_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_secondOfMinute_NewYork_Autumn_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_minuteOfHour_NewYork_Autumn_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloorNotDST_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusHour_Moscow_Autumn
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusHour_Guatemata_Autumn
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_secondOfMinute_NewYork_Autumn_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_setHourZero_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_setHourZero_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_day_NewYork_Spring_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_minute_NewYork_Spring_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_setHourForward_Moscow_Spring
  - org.joda.time.TestDateTimeZoneCutover::testBug3192457_adjustOffset
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_minuteOfHour_NewYork_Autumn_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_minuteOfHour_NewYork_Autumn_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_hour_NewYork_Spring_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusHour_NewYork_Autumn
  - org.joda.time.TestDateTimeZone::testCommentParse
  - org.joda.time.TestDateMidnight_Properties::testPropertyGetDayOfMonth
  - org.joda.time.TestDateMidnight_Properties::testPropertySetMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyToIntervalMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyRoundHalfCeilingMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyAddMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyGetDayOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyGetDayOfWeek
  - org.joda.time.TestDateMidnight_Properties::testPropertyAddLongMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyWithMinimumValueDayOfMonth
  - org.joda.time.TestDateMidnight_Properties::testPropertySetTextLocaleMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertySetTextMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyRemainderMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyAddWrapFieldMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyWithMaximumValueDayOfMonth
  - org.joda.time.TestDateMidnight_Properties::testPropertyRoundHalfFloorMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyRoundHalfEvenMonthOfYear
  - org.joda.time.TestDateMidnight_Constructors::testParse_noFormatter
  - org.joda.time.TestDateMidnight_Constructors::testParse_formatter
  - org.joda.time.TestDateMidnight_Constructors::testConstructor_int_int_int
  - org.joda.time.TestDateMidnight_Constructors::testConstructor_int_int_int_nullChronology
  - org.joda.time.TestDateMidnight_Constructors::testConstructor_int_int_int_DateTimeZone
  - org.joda.time.TestDateMidnight_Constructors::testConstructor_int_int_int_Chronology
  - org.joda.time.TestDateMidnight_Constructors::testConstructor_int_int_int_nullDateTimeZone
  - org.joda.time.TestDateMidnight_Basics::testIsEqual
  - org.joda.time.TestDateMidnight_Basics::testIsAfter
  - org.joda.time.TestDateMidnight_Basics::testWithers
  - org.joda.time.TestDateMidnight_Basics::testIsBefore
  - org.joda.time.TestDateMidnight_Basics::testWithFields_RPartial
Failing tests: 353
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
zone=DateTimeUtils.getZone(zone);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
if(zone==null){
return DateTimeZone.getDefault();
}
throw new IllegalInstantException(localInstant,zone.getID());
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
if(iZone==zone){
return ;
}
throw new IllegalInstantException(localInstant,zone.getID());
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setChronology(getChronology().withZone(iZone));
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setMillis(localInstant);
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DateTimeZone zone=getZone();
int offset=tz.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
return iCutoverMillis;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
if(zone==getParam()){
return this;
}
throw new IllegalInstantException(localInstant,zone.getID());
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
throw new IllegalArgumentException("The datetime zone must not be null");
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(System.getSecurityManager()!=null){
sm.checkPermission(new JodaTimePermission("DateTimeZone.setDefault"));
}
if(offset!=zone.getOffset(localInstant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
synchronized(DateTimeZone.class){
iZone=zone;
}
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
if(localInstant==Long.MIN_VALUE){
return GregorianChronology.getInstance(zone);
}else if(cutover==Long.MAX_VALUE){
return JulianChronology.getInstance(zone);
}else {
return GJChronology.getInstance(zone,cutover,4);
}
throw new IllegalInstantException(localInstant,zone.getID());
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DateTimeZone zone=getZone();
int offset=tz.getOffset(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
throw new NullPointerException("Zone must not be null");
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
if(zone==DateTimeZone.UTC){
return withUTC();
}
throw new IllegalInstantException(localInstant,zone.getID());
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
if(zone==DateTimeZone.UTC){
return getBase();
}
throw new IllegalInstantException(localInstant,zone.getID());
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
return localInstant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
throw new IllegalArgumentException("The offset cannot be zero");
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(offset==zone.getOffset(localInstant)){
throw new IllegalArgumentException("The offset cannot be zero");
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
throw new IllegalArgumentException("DateTimeZone must not be null");
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
return localInstant-offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 0
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_tokyo_endOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_tokyo_endOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_tokyo_endOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_tokyo_endOfYear
Failing tests: 0
TESTING : time_7
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.joda.time.tz.TestCompiler::test_Amman_2006
  - org.joda.time.tz.TestCompiler::test_Amman_2005
  - org.joda.time.tz.TestCompiler::test_Amman_2004
  - org.joda.time.tz.TestCompiler::test_Amman_2003
  - org.joda.time.format.TestTextFields::testMonthNames_monthStart
  - org.joda.time.format.TestTextFields::testWeekdayNames
  - org.joda.time.format.TestTextFields::testMonthNames_monthEnd
  - org.joda.time.format.TestISODateTimeFormatParsing::test_basicWeekDate
  - org.joda.time.format.TestISODateTimeFormatParsing::test_dateElementParser
  - org.joda.time.format.TestISODateTimeFormatParsing::test_weekDate
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseShortName
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseShortNameWithLookup
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_localPrintParseZoneTokyo
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_parseWrongOffset
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseZoneTokyo
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseZoneParis
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseZoneBahiaBanderas
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseOffset
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseZoneDawsonCreek
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseLongNameWithLookup
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_localPrintParseOffset
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_localPrintParseOffsetAndZone
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_parseWrongOffsetAndZone
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseOffsetAndZone
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseShortNameWithAutoLookup
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseLongName
  - org.joda.time.format.TestDateTimeFormatter::testZoneNameNearTransition
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_simple
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_zone3
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_zone2
  - org.joda.time.format.TestDateTimeFormatter::testZoneShortNameNearTransition
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_zone
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_chrono
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_endOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseMutableDateTime_zone3
  - org.joda.time.format.TestDateTimeFormatter::testParseMutableDateTime_zone2
  - org.joda.time.format.TestDateTimeFormatter::testParseDateTime_zone3
  - org.joda.time.format.TestDateTimeFormatter::testParseDateTime_zone2
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthOnly
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_simple_precedence
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_offsetParsed
  - org.joda.time.format.TestDateTimeFormatter::testParseMutableDateTime_simple
  - org.joda.time.format.TestDateTimeFormatter::testParseDateTime_offsetParsed
  - org.joda.time.format.TestDateTimeFormatter::testParseDateTime_simple
  - org.joda.time.format.TestDateTimeFormatter::testParseMutableDateTime_zone
  - org.joda.time.format.TestDateTimeFormatter::testParseMutableDateTime_chrono
  - org.joda.time.format.TestDateTimeFormatter::testParseDateTime_simple_precedence
  - org.joda.time.format.TestDateTimeFormatter::testParseMutableDateTime_offsetParsed
  - org.joda.time.format.TestDateTimeFormatter::testParseDateTime_chrono
  - org.joda.time.format.TestDateTimeFormatter::testParseDateTime_zone
  - org.joda.time.format.TestDateTimeFormatter::testParseMutableDateTime_simple_precedence
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_tokyo_startOfYear
  - org.joda.time.convert.TestStringConverter::testSetIntoInterval_Object_Chronology6
  - org.joda.time.convert.TestStringConverter::testSetIntoInterval_Object_Chronology5
  - org.joda.time.convert.TestStringConverter::testSetIntoInterval_Object_Chronology4
  - org.joda.time.convert.TestStringConverter::testSetIntoInterval_Object_Chronology3
  - org.joda.time.convert.TestStringConverter::testSetIntoInterval_Object_Chronology2
  - org.joda.time.convert.TestStringConverter::testSetIntoInterval_Object_Chronology1
  - org.joda.time.convert.TestStringConverter::testGetInstantMillis_Object_Zone
  - org.joda.time.convert.TestStringConverter::testGetInstantMillis_Object
  - org.joda.time.convert.TestStringConverter::testGetInstantMillis_Object_Chronology
  - org.joda.time.chrono.TestLenientChronology::testNearDstTransition
  - org.joda.time.chrono.TestIslamicChronology::testSampleDateWithZone
  - org.joda.time.chrono.TestEthiopicChronology::testSampleDateWithZone
  - org.joda.time.chrono.TestCopticChronology::testSampleDateWithZone
  - org.joda.time.TestYearMonth_Constructors::testConstructor_DateTimeZone
  - org.joda.time.TestYearMonth_Basics::testToInterval_Zone
  - org.joda.time.TestYearMonthDay_Constructors::testConstructor_DateTimeZone
  - org.joda.time.TestYearMonthDay_Basics::testToInterval_Zone
  - org.joda.time.TestYearMonthDay_Basics::testToDateTime_TOD_Zone
  - org.joda.time.TestTimeOfDay_Constructors::testConstructor_nullDateTimeZone
  - org.joda.time.TestTimeOfDay_Constructors::testConstructor_DateTimeZone
  - org.joda.time.TestStringConvert::testDateMidnight
  - org.joda.time.TestStringConvert::testMutableDateTime
  - org.joda.time.TestStringConvert::testDateTime
  - org.joda.time.TestPeriod_Constructors::testConstructor_RI_RI4
  - org.joda.time.TestPeriod_Constructors::testConstructor_RI_RI3
  - org.joda.time.TestPeriod_Constructors::testConstructor_RI_RI_PeriodType4
  - org.joda.time.TestPartial_Match::testIsMatch_Instant
  - org.joda.time.TestMutablePeriod_Updates::testAdd_RInterval2
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_RI_RI4
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_RI_RI3
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_RI_RI_PeriodType4
  - org.joda.time.TestMutableInterval_Constructors::testParse_noFormatter
  - org.joda.time.TestMutableDateTime_Sets::testSetYear_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetMilliOfDay_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetWeekOfWeekyear_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetWeekOfWeekyear_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetMilliOfSecond_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetMilliOfSecond_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetDate_RI_same
  - org.joda.time.TestMutableDateTime_Sets::testSetDate_int_int_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetHourOfDay_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetDayOfYear_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetDayOfYear_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetMinuteOfDay_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetSecondOfMinute_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetSecondOfMinute_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetDayOfMonth_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetDayOfMonth_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetSecondOfDay_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetMonthOfYear_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetMonthOfYear_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetDate_RI_different2
  - org.joda.time.TestMutableDateTime_Sets::testSetDate_RI_different1
  - org.joda.time.TestMutableDateTime_Sets::testSetDate_long1
  - org.joda.time.TestMutableDateTime_Sets::testSetDate_RI2
  - org.joda.time.TestMutableDateTime_Sets::testSetDate_RI1
  - org.joda.time.TestMutableDateTime_Sets::testSetWeekyear_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetDayOfWeek_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetDayOfWeek_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetMinuteOfHour_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetMinuteOfHour_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetTime_int_int_int_int1
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetDayOfMonth
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetHourOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetTextDayOfMonth
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetWeekOfWeekyear
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetDayOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetDayOfWeek
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddWrapFieldYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetMonthOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyToIntervalMonthOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetTextDayOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetTextDayOfWeek
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddWeekOfWeekyear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyRoundCeilingHourOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetTextYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddWrapFieldDayOfMonth
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetMillisOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetMinuteOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddMonthOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddWrapFieldWeekOfWeekyear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetDayOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetDayOfWeek
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddDayOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddDayOfWeek
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetTextMonthOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyRoundFloorHourOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertyRoundHalfEvenHourOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertyRoundHalfFloorHourOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertyToIntervalDayOfMonth
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetTextWeekOfWeekyear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetSecondOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddWrapFieldMonthOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetDayOfMonth
  - org.joda.time.TestMutableDateTime_Properties::testPropertyRoundHalfCeilingHourOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddLongDayOfWeek
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddDayOfMonth
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddWrapFieldDayOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddWrapFieldDayOfWeek
  - org.joda.time.TestMutableDateTime_Constructors::testParse_noFormatter
  - org.joda.time.TestMutableDateTime_Constructors::testParse_formatter
  - org.joda.time.TestMutableDateTime_Constructors::testConstructor_int_int_int_int_int_int_int
  - org.joda.time.TestMutableDateTime_Constructors::testConstructor_int_int_int_int_int_int_int_nullChronology
  - org.joda.time.TestMutableDateTime_Constructors::testConstructor_int_int_int_int_int_int_int_Chronology
  - org.joda.time.TestMutableDateTime_Constructors::testConstructor_int_int_int_int_int_int_int_DateTimeZone
  - org.joda.time.TestMutableDateTime_Constructors::testConstructor_int_int_int_int_int_int_int_nullDateTimeZone
  - org.joda.time.TestMutableDateTime_Basics::testRounding6
  - org.joda.time.TestMutableDateTime_Basics::testRounding5
  - org.joda.time.TestMutableDateTime_Basics::testRounding4
  - org.joda.time.TestMutableDateTime_Basics::testRounding3
  - org.joda.time.TestMutableDateTime_Basics::testRounding2
  - org.joda.time.TestMutableDateTime_Basics::testRounding1
  - org.joda.time.TestMutableDateTime_Adds::testAddSeconds_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddMillis_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddMinutes_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddWeekyears_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddHours_int1
  - org.joda.time.TestMutableDateTime_Adds::testAdd_RP1
  - org.joda.time.TestMonthDay_Constructors::testConstructor_DateTimeZone
  - org.joda.time.TestLocalTime_Constructors::testConstructor_nullDateTimeZone
  - org.joda.time.TestLocalTime_Constructors::testConstructor_DateTimeZone
  - org.joda.time.TestLocalTime_Constructors::testConstructor_long_DateTimeZone_2
  - org.joda.time.TestLocalDate_Constructors::testConstructor_long3_DateTimeZone
  - org.joda.time.TestLocalDate_Constructors::testConstructor_DateTimeZone
  - org.joda.time.TestLocalDate_Basics::testToDateTimeAtStartOfDay_avoidDST
  - org.joda.time.TestLocalDate_Basics::testToDateTimeAtStartOfDay_Zone
  - org.joda.time.TestLocalDate_Basics::testToDateTime_LocalTime_Zone
  - org.joda.time.TestLocalDate_Basics::testToInterval_Zone_noMidnight
  - org.joda.time.TestLocalDate_Basics::testToDateTimeAtStartOfDay_Zone_avoidDST
  - org.joda.time.TestLocalDateTime_Constructors::testConstructor_DateTimeZone
  - org.joda.time.TestLocalDateTime_Basics::testToDateTime_nullRI
  - org.joda.time.TestInterval_Constructors::testParse_noFormatter
  - org.joda.time.TestInstant_Constructors::testParse_noFormatter
  - org.joda.time.TestInstant_Constructors::testParse_formatter
  - org.joda.time.TestDateTime_Properties::testPropertyGetDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertyGetHourOfDay
  - org.joda.time.TestDateTime_Properties::testPropertySetTextDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertySetWeekOfWeekyear
  - org.joda.time.TestDateTime_Properties::testPropertySetDayOfYear
  - org.joda.time.TestDateTime_Properties::testPropertySetDayOfWeek
  - org.joda.time.TestDateTime_Properties::testPropertyAddWrapFieldYear
  - org.joda.time.TestDateTime_Properties::testPropertySetMonthOfYear
  - org.joda.time.TestDateTime_Properties::testPropertyToIntervalMonthOfYear
  - org.joda.time.TestDateTime_Properties::testPropertySetYear
  - org.joda.time.TestDateTime_Properties::testPropertySetTextDayOfYear
  - org.joda.time.TestDateTime_Properties::testPropertySetTextDayOfWeek
  - org.joda.time.TestDateTime_Properties::testPropertyAddWeekOfWeekyear
  - org.joda.time.TestDateTime_Properties::testPropertyRoundCeilingHourOfDay
  - org.joda.time.TestDateTime_Properties::testPropertySetTextYear
  - org.joda.time.TestDateTime_Properties::testPropertyAddWrapFieldDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertyGetMillisOfDay
  - org.joda.time.TestDateTime_Properties::testPropertyGetMinuteOfDay
  - org.joda.time.TestDateTime_Properties::testPropertyAddMonthOfYear
  - org.joda.time.TestDateTime_Properties::testPropertyAddWrapFieldWeekOfWeekyear
  - org.joda.time.TestDateTime_Properties::testPropertyGetDayOfYear
  - org.joda.time.TestDateTime_Properties::testPropertyGetDayOfWeek
  - org.joda.time.TestDateTime_Properties::testPropertyWithMinimumValueDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertyAddDayOfYear
  - org.joda.time.TestDateTime_Properties::testPropertyAddDayOfWeek
  - org.joda.time.TestDateTime_Properties::testPropertySetTextMonthOfYear
  - org.joda.time.TestDateTime_Properties::testPropertyRoundFloorHourOfDay
  - org.joda.time.TestDateTime_Properties::testPropertyRoundHalfEvenHourOfDay
  - org.joda.time.TestDateTime_Properties::testPropertyRoundHalfFloorHourOfDay
  - org.joda.time.TestDateTime_Properties::testPropertyToIntervalDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertySetTextWeekOfWeekyear
  - org.joda.time.TestDateTime_Properties::testPropertyGetSecondOfDay
  - org.joda.time.TestDateTime_Properties::testPropertyAddWrapFieldMonthOfYear
  - org.joda.time.TestDateTime_Properties::testPropertyWithMaximumValueDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertySetDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertyRoundHalfCeilingHourOfDay
  - org.joda.time.TestDateTime_Properties::testPropertyAddLongDayOfWeek
  - org.joda.time.TestDateTime_Properties::testPropertyAddYear
  - org.joda.time.TestDateTime_Properties::testPropertyAddDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertyAddWrapFieldDayOfYear
  - org.joda.time.TestDateTime_Properties::testPropertyAddWrapFieldDayOfWeek
  - org.joda.time.TestDateTime_Constructors::testParse_noFormatter
  - org.joda.time.TestDateTime_Constructors::testParse_formatter
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_nullChronology
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_int
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_nullChronology
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_int_nullChronology
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_DateTimeZone
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_int_Chronology
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_Chronology
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_Chronology
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_DateTimeZone
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_nullDateTimeZone
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_int_DateTimeZone
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_nullDateTimeZone
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_int_nullDateTimeZone
  - org.joda.time.TestDateTime_Basics::testWithers
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_withDay_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_withDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_athens
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_minute_NewYork_Spring_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_secondOfMinute_NewYork_Autumn_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusHour_NewYork_Autumn
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_day_NewYork_Autumn_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_addWrapFieldDay_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_addWrapFieldDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_minuteOfHour_NewYork_Autumn_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusHour_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusHour_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusHour_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusHour_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_hourOfDay_NewYork_Autumn_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusHour_Moscow_Autumn
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_setHourAcross_Moscow_Spring
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_setHourBack_Moscow_Spring
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_setHourBack_NewYork_Spring
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_paris
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_day_NewYork_Autumn_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_hourOfDay_NewYork_Autumn_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_hour_NewYork_Spring_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_day_NewYork_Autumn_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_hour_NewYork_Spring_preCutover
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_losAngeles
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_minute_NewYork_Spring_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_day_NewYork_Autumn_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_day_NewYork_Spring_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_setHourAcross_NewYork_Spring
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_setHourForward_NewYork_Spring
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_newYork
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_hourOfDay_NewYork_Autumn_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_constructor_NewYork_Autumn
  - org.joda.time.TestDateTimeZoneCutover::testWithMinuteOfHourInDstChange_mockZone
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_minute_NewYork_Spring_preCutover
  - org.joda.time.TestDateTimeZoneCutover::testBug3476684_adjustOffset
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_withHourZero_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_withHourZero_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_hourOfDay_NewYork_Autumn_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_secondOfMinute_NewYork_Autumn_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_day_NewYork_Spring_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_constructor_Moscow_Autumn
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_day_NewYork_Spring_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusHour_Guatemata_Autumn
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_hour_NewYork_Spring_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_secondOfMinute_NewYork_Autumn_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_minuteOfHour_NewYork_Autumn_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloorNotDST_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusHour_Moscow_Autumn
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusHour_Guatemata_Autumn
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_secondOfMinute_NewYork_Autumn_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_setHourZero_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_setHourZero_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_day_NewYork_Spring_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_minute_NewYork_Spring_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_setHourForward_Moscow_Spring
  - org.joda.time.TestDateTimeZoneCutover::testBug3192457_adjustOffset
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundCeiling_minuteOfHour_NewYork_Autumn_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_minuteOfHour_NewYork_Autumn_postCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_roundFloor_hour_NewYork_Spring_preCutover
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusHour_NewYork_Autumn
  - org.joda.time.TestDateTimeZone::testCommentParse
  - org.joda.time.TestDateMidnight_Properties::testPropertyGetDayOfMonth
  - org.joda.time.TestDateMidnight_Properties::testPropertySetMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyToIntervalMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyRoundHalfCeilingMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyAddMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyGetDayOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyGetDayOfWeek
  - org.joda.time.TestDateMidnight_Properties::testPropertyAddLongMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyWithMinimumValueDayOfMonth
  - org.joda.time.TestDateMidnight_Properties::testPropertySetTextLocaleMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertySetTextMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyRemainderMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyAddWrapFieldMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyWithMaximumValueDayOfMonth
  - org.joda.time.TestDateMidnight_Properties::testPropertyRoundHalfFloorMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyRoundHalfEvenMonthOfYear
  - org.joda.time.TestDateMidnight_Constructors::testParse_noFormatter
  - org.joda.time.TestDateMidnight_Constructors::testParse_formatter
  - org.joda.time.TestDateMidnight_Constructors::testConstructor_int_int_int
  - org.joda.time.TestDateMidnight_Constructors::testConstructor_int_int_int_nullChronology
  - org.joda.time.TestDateMidnight_Constructors::testConstructor_int_int_int_DateTimeZone
  - org.joda.time.TestDateMidnight_Constructors::testConstructor_int_int_int_Chronology
  - org.joda.time.TestDateMidnight_Constructors::testConstructor_int_int_int_nullDateTimeZone
  - org.joda.time.TestDateMidnight_Basics::testIsEqual
  - org.joda.time.TestDateMidnight_Basics::testIsAfter
  - org.joda.time.TestDateMidnight_Basics::testWithers
  - org.joda.time.TestDateMidnight_Basics::testIsBefore
  - org.joda.time.TestDateMidnight_Basics::testWithFields_RPartial
Failing tests: 353
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
return millis;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
return serialVersionUID-offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
return next;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DateTimeZone zone=getZone();
int offset=zone.getOffsetFromLocal(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
return prev;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DateTimeZone zone=getZone();
int offset=zone.getOffsetToAdd(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
return localInstant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DateTimeZone zone=getZone();
int offset=zone.getOffsetToAdd(localInstant);
localInstant-=offset;
if(offset!=zone.getOffset(localInstant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.ZonedChronology,139
org.joda.time.chrono.ZonedChronology,140
org.joda.time.chrono.ZonedChronology,141
org.joda.time.chrono.ZonedChronology,144
org.joda.time.format.DateTimeFormat,147
Find no block!
org.joda.time.format.DateTimeFormat,149
Find no block!
org.joda.time.format.DateTimeFormat,170
org.joda.time.format.DateTimeFormat,400
========
case 'C' :

case 'G' :
builder.appendEraText();
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'a' :

case 'G' :
builder.appendEraText();
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'H' :

case 'G' :
builder.appendEraText();
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'K' :

case 'G' :
builder.appendEraText();
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 's' :

case 'G' :
builder.appendEraText();
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'E' :

case 'G' :
builder.appendEraText();
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'w' :

case 'G' :
builder.appendEraText();
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'y' :

case 'G' :
builder.appendEraText();
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'a' :

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'H' :

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'K' :

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 's' :

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'w' :

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'C' :
builder.appendYearOfEra(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'x' :

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'C' :
builder.appendWeekyear(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'y' :

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'C' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'e' :

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,tokenLen);
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'C' :
builder.appendTwoDigitWeekyear(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
indexRef[0]=iType;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iType=indexRef[0];
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TIME>=pattern.length()||(i+1)>=length<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<nextOffset){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length){
nameKeys[i+1]=(pattern+"-Summer").intern();
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<newLength){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<i){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<ruleSetCount){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<fieldIndex){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=~i;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iType=~i;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iType<transitions.length){
if(i>0){
return indexRef[i-1];
}
return "UTC";
}
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iType<transitions.length){
if(i>0){
return indexRef[i-1];
}
return 0;
}
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iType=~i;
if(iType<transitions.length){
if(i>0){
return indexRef[i-1];
}
return 0;
}
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length--;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length){
hasSignChar=true;
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length){
negative=pattern.charAt(length+i)=='-';
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length){
hasSignChar=true;
negative=pattern.charAt(length+i)=='-';

indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<=length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<position){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<=i){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<indicesIndex){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<suffixPos){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<max){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<est){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<transitions.length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iType=(i>=0)?(i+1):~i;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length){
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'){
break;
}
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length){
limit=Math.min(TIME+1,pattern.length()-i);
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length){
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'){
break;
}
limit=Math.min(TIME+1,pattern.length()-i);

indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<iFieldType){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<SECONDS_MILLIS){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<SECONDS_OPTIONAL_MILLIS){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length++;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<prev){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<end){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length){
negative=pattern.charAt(TIME+length)=='-';
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length){
if(length+1>=length||(c=pattern.charAt(TIME+length))<'0'||pattern.charAt(TIME+length)>'9'){
break;
}
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length){
limit=Math.min(length+1,pattern.length()-TIME);
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length){
negative=pattern.charAt(TIME+length)=='-';
if(length+1>=length||(c=pattern.charAt(TIME+length))<'0'||pattern.charAt(TIME+length)>'9'){
break;
}
limit=Math.min(length+1,pattern.length()-TIME);

indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'y' :

case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'a' :

case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'H' :

case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'K' :

case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 's' :

case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'E' :

case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'w' :

case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'x' :
builder.appendCenturyOfEra(new DateTime().getWeekyear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'x' :

case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'x' :
builder.appendWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'x' :
builder.appendYearOfEra(new DateTime().getWeekyear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :
builder.appendTwoDigitWeekyear(new DateTime().getYear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'a' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'H' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'K' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 's' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'w' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
default :
builder.appendYearOfEra(new DateTime().getYear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :
builder.appendCenturyOfEra(new DateTime().getYear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'x' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :
builder.appendWeekyear(new DateTime().getYear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :
builder.appendFractionOfSecond(new DateTime().getYear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'e' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TIME>=pattern.length()||(i+1)>=length<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<nextOffset){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length){
nameKeys[i+1]=(pattern+"-Summer").intern();
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<i){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<newLength){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<fieldIndex){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<ruleSetCount){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=~i;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length<=0){
return 0;
}
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length--;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<=length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<position){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<=i){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length){
hasSignChar=true;
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length){
negative=pattern.charAt(length+i)=='-';
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length){
hasSignChar=true;
negative=pattern.charAt(length+i)=='-';

indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<transitions.length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iType=~i;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iType<transitions.length){
if(i>0){
return indexRef[i-1];
}
return "UTC";
}
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iType<transitions.length){
if(i>0){
return indexRef[i-1];
}
return 0;
}
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iType=~i;
if(iType<transitions.length){
if(i>0){
return indexRef[i-1];
}
return 0;
}
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<max){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<est){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iType=(i>=0)?(i+1):~i;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<indicesIndex){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<suffixPos){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super();
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
maxDigits=tokenLen;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iType=length;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<prev){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<end){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<iFieldType){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<SECONDS_MILLIS){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<SECONDS_OPTIONAL_MILLIS){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length++;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<maxDigits){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'x' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'y' :

case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'a' :

case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'H' :

case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'K' :

case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 's' :

case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'w' :

case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'x' :
builder.appendCenturyOfEra(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'x' :

case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'x' :
builder.appendFractionOfSecond(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'e' :

case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'e' :

case 'x' :
builder.appendFractionOfSecond(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,tokenLen);
break;

case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'x' :
builder.appendTwoDigitWeekyear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'y' :
builder.appendWeekyear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'y' :

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'a' :

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'H' :

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'K' :

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 's' :

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'w' :

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'y' :
builder.appendCenturyOfEra(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'x' :

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'y' :
builder.appendFractionOfSecond(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'e' :

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'e' :

case 'y' :
builder.appendFractionOfSecond(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,tokenLen);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'y' :
builder.appendTwoDigitWeekyear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'Y' :
builder.appendWeekyear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'y' :

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'a' :

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'H' :

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'K' :

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 's' :

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'w' :

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'Y' :
builder.appendCenturyOfEra(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'x' :

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'Y' :
builder.appendFractionOfSecond(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'e' :

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'e' :

case 'Y' :
builder.appendFractionOfSecond(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,tokenLen);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'Y' :
builder.appendTwoDigitWeekyear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen==1){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen<0||length<=0){
throw new IllegalArgumentException();
}
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(indexRef==null){
throw new IllegalArgumentException("No parsers supplied");
}
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==1){
if(indexRef[0]==null){
throw new IllegalArgumentException("No parser supplied");
}
return append0(tokenLen,parsers[0]);
}
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new DateTimeParser[length][iType]=indexRef[i];
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen==18){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super();
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iType=TIME;
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iType=tokenLen;
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen!=2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen==0){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<bestValidPos){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
clearPrefix();
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=length;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=tokenLen;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen==length){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'Y' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'x' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'Y' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'e' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'Y' :
builder.appendDayOfMonth(tokenLen);
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'a' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'Y' :
builder.appendClockhourOfHalfday(tokenLen);
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'H' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'Y' :
builder.appendClockhourOfDay(tokenLen);
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'K' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'Y' :
builder.appendMinuteOfHour(tokenLen);
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 's' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'Y' :
builder.appendDayOfYear(tokenLen);
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'w' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0){
return ~TIME;
}
case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0){
return ~i;
}
case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>=9){
TIME=Integer.parseInt(pattern.substring(TIME,position+=length));
}else {
int iType=position;
if(lenientParse){
i++;
}
try{
value=text.charAt(i++)-'0';
}catch (StringIndexOutOfBoundsException e) {
  return ~position;
}

position+=length;
while(i<position){
value=((value<<3)+(value<<1))+text.charAt(i++)-'0';
}
if(negative){
value=-value;
}
}
case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<bestValidPos){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
clearPrefix();
case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!maxDigits){
return ~TIME;
}
case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>=0&&TIME+length!=suffixPos){
return position;
}
case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'Y' :
if(tokenLen==length){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen>=2){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(tokenLen>=0){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(tokenLen>=4){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendTimeZoneShortName(tokenLen);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen>=2){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(tokenLen>=0){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'M' :
builder.appendDayOfMonth(tokenLen);
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'a' :

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'M' :
builder.appendClockhourOfHalfday(tokenLen);
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'H' :

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'M' :
builder.appendClockhourOfDay(tokenLen);
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'K' :

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'M' :
builder.appendMinuteOfHour(tokenLen);
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 's' :

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'M' :
builder.appendDayOfYear(tokenLen);
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'w' :

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'M' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'x' :

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'M' :
builder.appendWeekyear(tokenLen,TIME);
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'y' :

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'M' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'e' :

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'M' :
builder.appendYearOfEra(tokenLen,TIME);
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,tokenLen);
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'M' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,tokenLen);
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'a' :

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'd' :
builder.appendClockhourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'H' :

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'd' :
builder.appendClockhourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'K' :

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'd' :
builder.appendMinuteOfHour(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 's' :

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'd' :
builder.appendDayOfYear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'w' :

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'x' :

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'y' :

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'e' :

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,tokenLen);
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'C' :

case 'a' :
builder.appendHalfdayOfDayText();
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'a' :

case 'a' :
builder.appendHalfdayOfDayText();
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'H' :

case 'a' :
builder.appendHalfdayOfDayText();
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'K' :

case 'a' :
builder.appendHalfdayOfDayText();
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 's' :

case 'a' :
builder.appendHalfdayOfDayText();
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'E' :

case 'a' :
builder.appendHalfdayOfDayText();
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'w' :

case 'a' :
builder.appendHalfdayOfDayText();
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'y' :

case 'a' :
builder.appendHalfdayOfDayText();
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'h' :
builder.appendDayOfMonth(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'a' :

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'H' :

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'h' :
builder.appendClockhourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'K' :

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'h' :
builder.appendMinuteOfHour(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 's' :

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'h' :
builder.appendDayOfYear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'w' :

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'x' :

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'y' :

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'e' :

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,tokenLen);
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'H' :
builder.appendDayOfMonth(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'a' :

case 'H' :
builder.appendHourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'H' :
builder.appendClockhourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'H' :

case 'H' :
builder.appendHourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'H' :
builder.appendClockhourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'K' :

case 'H' :
builder.appendHourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'H' :
builder.appendMinuteOfHour(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 's' :

case 'H' :
builder.appendHourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'H' :
builder.appendDayOfYear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'w' :

case 'H' :
builder.appendHourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'x' :

case 'H' :
builder.appendHourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'y' :

case 'H' :
builder.appendHourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'e' :

case 'H' :
builder.appendHourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'k' :
builder.appendDayOfMonth(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'a' :

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'k' :
builder.appendClockhourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'H' :

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'K' :

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'k' :
builder.appendMinuteOfHour(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 's' :

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'k' :
builder.appendDayOfYear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'w' :

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'x' :

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'y' :

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'e' :

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'K' :
builder.appendDayOfMonth(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'a' :

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'K' :
builder.appendClockhourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'H' :

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'K' :
builder.appendClockhourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'K' :

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'K' :
builder.appendMinuteOfHour(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 's' :

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'K' :
builder.appendDayOfYear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'w' :

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'x' :

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'y' :

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'e' :

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'm' :
builder.appendDayOfMonth(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'a' :

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'm' :
builder.appendClockhourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'H' :

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'm' :
builder.appendClockhourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'K' :

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 's' :

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'm' :
builder.appendDayOfYear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'w' :

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'x' :

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'y' :

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'e' :

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 's' :
builder.appendDayOfMonth(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'a' :

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 's' :
builder.appendClockhourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'H' :

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 's' :
builder.appendClockhourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'K' :

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 's' :
builder.appendMinuteOfHour(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 's' :

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 's' :
builder.appendDayOfYear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'w' :

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'x' :

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'y' :

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'e' :

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'a' :

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'H' :

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'K' :

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 's' :

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'w' :

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'S' :
builder.appendYearOfEra(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'S' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'x' :

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'S' :
builder.appendWeekyear(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'y' :

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'e' :

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'S' :
builder.appendTwoDigitWeekyear(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'e' :
builder.appendDayOfMonth(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'a' :

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'e' :
builder.appendClockhourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'H' :

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'e' :
builder.appendClockhourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'K' :

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'e' :
builder.appendMinuteOfHour(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 's' :

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'e' :
builder.appendDayOfYear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'w' :

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'x' :

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'y' :

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'e' :

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen>=2){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(tokenLen>=0){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'E' :
builder.appendDayOfMonth(TIME);
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'a' :

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'E' :
builder.appendClockhourOfHalfday(TIME);
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'H' :

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'E' :
builder.appendClockhourOfDay(TIME);
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'K' :

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'E' :
builder.appendMinuteOfHour(TIME);
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 's' :

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'E' :
builder.appendDayOfYear(TIME);
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'w' :

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'E' :
builder.appendCenturyOfEra(TIME,tokenLen);
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'x' :

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'E' :
builder.appendWeekyear(TIME,TIME);
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'y' :

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'E' :
builder.appendFractionOfSecond(TIME,tokenLen);
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'e' :

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'E' :
builder.appendYearOfEra(TIME,TIME);
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'D' :
builder.appendDayOfMonth(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'a' :

case 'D' :
builder.appendDayOfYear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'D' :
builder.appendClockhourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'H' :

case 'D' :
builder.appendDayOfYear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'D' :
builder.appendClockhourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'K' :

case 'D' :
builder.appendDayOfYear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'D' :
builder.appendMinuteOfHour(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 's' :

case 'D' :
builder.appendDayOfYear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'w' :

case 'D' :
builder.appendDayOfYear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'x' :

case 'D' :
builder.appendDayOfYear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'y' :

case 'D' :
builder.appendDayOfYear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'e' :

case 'D' :
builder.appendDayOfYear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,tokenLen);
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'w' :
builder.appendDayOfMonth(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'a' :

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'w' :
builder.appendClockhourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'H' :

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'w' :
builder.appendClockhourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'K' :

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'w' :
builder.appendMinuteOfHour(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 's' :

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'w' :
builder.appendDayOfYear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'w' :

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'x' :

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'y' :

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'e' :

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen>=2){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(tokenLen>=0){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'z' :
builder.appendDayOfMonth(TIME);
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'a' :

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'z' :
builder.appendClockhourOfHalfday(TIME);
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'H' :

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'z' :
builder.appendClockhourOfDay(TIME);
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'K' :

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'z' :
builder.appendMinuteOfHour(TIME);
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 's' :

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'z' :
builder.appendDayOfWeek(TIME);
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'E' :

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'z' :
builder.appendDayOfYear(TIME);
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'w' :

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'z' :
builder.appendCenturyOfEra(TIME,tokenLen);
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'x' :

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'z' :
builder.appendWeekyear(TIME,TIME);
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'y' :

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'z' :
builder.appendYearOfEra(TIME,TIME);
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(tokenLen==4){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(tokenLen==3){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(tokenLen==0){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'Z' :
builder.appendHourOfDay(TIME);
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'k' :

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'Z' :
builder.appendHourOfHalfday(TIME);
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'm' :

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'Z' :
builder.appendSecondOfMinute(TIME);
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'S' :

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'Z' :
builder.appendDayOfWeek(TIME);
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'E' :

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'Z' :
builder.appendDayOfYear(TIME);
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'w' :

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'Z' :
builder.appendWeekyear(TIME,TIME);
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'y' :

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'Z' :
builder.appendYearOfEra(TIME,TIME);
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'Z' :
builder.appendEraText();
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'C' :

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'Z' :
builder.appendHalfdayOfDayText();
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'h' :

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sub.length()==TIME){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(selectStyle(sub.charAt(0))==NONE&&selectStyle(sub.charAt(1))==NONE){
throw new IllegalArgumentException("Style \'--\' is invalid");
}
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(sub.length()!=1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(sub.charAt(TIME)==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(sub.charAt(TIME)!=1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
default :

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'y' :

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case '\'' :
builder.appendYearOfEra(TIME,TIME);
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case '\'' :
builder.appendDayOfMonth(TIME);
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'a' :

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case '\'' :
builder.appendClockhourOfHalfday(TIME);
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'H' :

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case '\'' :
builder.appendClockhourOfDay(TIME);
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'K' :

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case '\'' :
builder.appendMinuteOfHour(TIME);
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 's' :

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case '\'' :
builder.appendDayOfYear(TIME);
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'w' :

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case '\'' :
builder.appendCenturyOfEra(TIME,tokenLen);
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'x' :

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case '\'' :
builder.appendWeekyear(TIME,TIME);
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'y' :

case '\'' :
builder.appendWeekyear(TIME,TIME);
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case '\'' :
builder.appendFractionOfSecond(TIME,tokenLen);
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'e' :

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.format.DateTimeFormat,401
org.joda.time.format.DateTimeFormat,403
========
for(int i=0;i<length;i++){
c=token.charAt(i);
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
indexRef[0]=i;
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0){
return ~TIME;
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>=9){
TIME=Integer.parseInt(token.substring(TIME,position+=length));
}else {
int i=position;
if(lenientParse){
i++;
}
try{
value=text.charAt(i++)-'0';
}catch (StringIndexOutOfBoundsException e) {
  return ~position;
}

position+=length;
while(i<position){
value=((value<<3)+(value<<1))+text.charAt(i++)-'0';
}
if(negative){
value=-value;
}
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Invalid format: \""+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
pattern=str.substring(2,length-1);
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
position+=i;
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
found=true;
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
position+=i;
found=true;

swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(maxDigits<2){
return ~TIME;
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length==0){
return ~TIME;
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(token.charAt(TIME)<'0'||c>'9'){
return ~TIME;
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TIME=token.charAt(TIME)-'0';
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TIME=((year<<3)+(year<<1))+token.charAt(TIME)-'0';
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>=0){
i=low%100;
}else {
t=99+((low+1)%100);
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TIME+=length+((year<i)?100:0)-t;
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length>=10){
return Integer.parseInt(token.substring(TIME,position+length));
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length--;
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i=='-'){
if(--length<0){
return 0;
}
lenientParse=true;
value=token.charAt(TIME++);
}else {
negative=false;
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i-='0';
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Invalid pattern specification");

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;limit<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
char tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
TIME++;
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TIME=0;
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(pattern.regionMatches(true,TIME,sub,0,text1.length())){
return position+text1.length();
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(pattern.regionMatches(true,TIME,sub,0,text2.length())){
return position+text2.length();
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(pattern.regionMatches(true,TIME,sub,0,iText.length())){
return position+iText.length();
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(pattern.regionMatches(true,TIME,sub,0,iValue.length())){
return position+iValue.length();
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Invalid style specification: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxDigits==NONE&&selectStyle(token.charAt(1))==NONE){
throw new IllegalArgumentException("Style \'--\' is invalid");
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length>=pattern.length()){
return "Invalid format: \""+pattern;
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(TIME>=pattern.length()){
return (iType==PRINT_ZERO_ALWAYS)?~position:position;
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(-1>0){
TIME=Math.min(maxDigits,suffixPos-TIME);
}else {
limit=Math.min(iMaxParsedDigits,pattern.length()-position);
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!lenientParse){
return ~TIME;
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(-1>=0&&TIME+length!=suffixPos){
return position;
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TIME+=length;
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==0){
return ~TIME;
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length<=2){
return true;
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(TIME<=TIME){
return position;
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length>=sub.length()){
return ~position;
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(pattern.regionMatches(true,TIME,sub,0,maxDigits)){
return position+textLength;
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length<1000){
return 3;
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Literal must not be null");

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (sub.length()){
case 0 :
return this;

case 1 :
return append0(new CharacterLiteral(text.charAt(0)));

default :
return append0(new StringLiteral(text));

}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=TIME;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;pos<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<sourceLength;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(sub.regionMatches(true,maxDigits,pattern,0,TIME)){
return pos;
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
swtich (sub.charAt(maxDigits)){
case '-' :
break;

default :
break;

}
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Format requires a \'/\' separator: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sub.length()<=0){
throw new IllegalArgumentException("Format invalid: "+token);
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern.length()<=0){
throw new IllegalArgumentException("Format invalid: "+token);
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(token.length()==6&&(id.startsWith("+")||id.startsWith("-"))){
return java.util.TimeZone.getTimeZone("GMT"+getID());
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
advance=(length!=-1);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
month=token.getMonthOfYear();
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
day=token.getDayOfMonth();
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
advance=(length!=-1);
month=token.getMonthOfYear();
day=token.getDayOfMonth();

i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
printUsage();
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Types array must not contain null: index "+i);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Types array must not contain null");

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("ReadablePartial objects must have the same set of fields");

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<types.length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
int c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<size;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<size();i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<isize;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new ClassCastException("ReadablePartial objects must have matching field types");

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length>0){
return indexRef[i-1];
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Field type must not be null");

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxDigits<length){
maxDigits=minDigits;
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<0||maxDigits<=0){
throw new IllegalArgumentException();
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Cannot convert period to duration as "+token.getName());

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IndexOutOfBoundsException();

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException();

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
clearPrefix();
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("ReadablePartial objects must not have overlapping fields");

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.get(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
long tokenLen=token.length();
if(tokenLen==0){
break;
}
long c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
long tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
long c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
converter=converters[i];
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==1){
return set.iConverters[0];
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new StringBuilder().append("Unable to find best converter for type \"");
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new StringBuilder().append("\" from remaining set: ");
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=~i;
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<token.size();i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.getValue(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Period does not support field \'"+token.getFieldType(i).getName());

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<isize;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
int c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<iTypes.length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length!=indexRef[i]){
return false;
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("The divisor must be at least 2");

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iType=TIME;
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iType=(i>=0)?i/TIME:((i+1)/divisor-1);
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iType=(length>=0)?j/TIME:((j+1)/divisor-1);
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new UnsupportedOperationException();

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<=length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<max;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length-TIME>32){
return ~TIME;
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length>=args.length){
printUsage();
return ;
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=(i>=0)?(i+1):~i;
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<cycleRemainder;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<transitions.length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.getFieldType(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<args.length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<iTransitions.length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>65535){
throw new UnsupportedOperationException("String pool is too large");
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<TIME;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(args.length==0){
printUsage();
return ;
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<size;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
int c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(pattern==null){
return toString();
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<indices.length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Values array must be the same length as the types array");

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sub.length()<=0){
throw new IllegalArgumentException("Format invalid: "+token);
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Format requires a \'/\' separator: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern.length()<=0){
throw new IllegalArgumentException("Format invalid: "+token);
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Format requires a \'/\' separator: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sub.length()<=0){
throw new IllegalArgumentException("Format invalid: "+token);
}
if(pattern.length()<=0){
throw new IllegalArgumentException("Format invalid: "+token);
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sub.length()<=0){
throw new IllegalArgumentException("Format invalid: "+token);
}
if(pattern.length()<=0){
throw new IllegalArgumentException("Format invalid: "+token);
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Format requires a \'/\' separator: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length>=10){
return Integer.parseInt(token.substring(TIME,position+length));
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length--;
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length>=10){
return Integer.parseInt(token.substring(TIME,position+length));
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i=='-'){
if(--length<0){
return 0;
}
lenientParse=true;
value=token.charAt(TIME++);
}else {
negative=false;
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length>=10){
return Integer.parseInt(token.substring(TIME,position+length));
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i-='0';
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length>=10){
return Integer.parseInt(token.substring(TIME,position+length));
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
length--;
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
if(i=='-'){
if(--length<0){
return 0;
}
lenientParse=true;
value=token.charAt(TIME++);
}else {
negative=false;
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
i-='0';
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length--;
if(i=='-'){
if(--length<0){
return 0;
}
lenientParse=true;
value=token.charAt(TIME++);
}else {
negative=false;
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length--;
i-='0';
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i=='-'){
if(--length<0){
return 0;
}
lenientParse=true;
value=token.charAt(TIME++);
}else {
negative=false;
}
i-='0';
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
length--;
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length>=10){
return Integer.parseInt(token.substring(TIME,position+length));
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
if(i=='-'){
if(--length<0){
return 0;
}
lenientParse=true;
value=token.charAt(TIME++);
}else {
negative=false;
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length>=10){
return Integer.parseInt(token.substring(TIME,position+length));
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
i-='0';
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length>=10){
return Integer.parseInt(token.substring(TIME,position+length));
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length--;
if(i=='-'){
if(--length<0){
return 0;
}
lenientParse=true;
value=token.charAt(TIME++);
}else {
negative=false;
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length>=10){
return Integer.parseInt(token.substring(TIME,position+length));
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length--;
i-='0';
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length>=10){
return Integer.parseInt(token.substring(TIME,position+length));
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i=='-'){
if(--length<0){
return 0;
}
lenientParse=true;
value=token.charAt(TIME++);
}else {
negative=false;
}
i-='0';
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length>=10){
return Integer.parseInt(token.substring(TIME,position+length));
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
length--;
if(i=='-'){
if(--length<0){
return 0;
}
lenientParse=true;
value=token.charAt(TIME++);
}else {
negative=false;
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
length--;
i-='0';
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
if(i=='-'){
if(--length<0){
return 0;
}
lenientParse=true;
value=token.charAt(TIME++);
}else {
negative=false;
}
i-='0';
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length--;
if(i=='-'){
if(--length<0){
return 0;
}
lenientParse=true;
value=token.charAt(TIME++);
}else {
negative=false;
}
i-='0';
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
length--;
if(i=='-'){
if(--length<0){
return 0;
}
lenientParse=true;
value=token.charAt(TIME++);
}else {
negative=false;
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length>=10){
return Integer.parseInt(token.substring(TIME,position+length));
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
length--;
i-='0';
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length>=10){
return Integer.parseInt(token.substring(TIME,position+length));
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
if(i=='-'){
if(--length<0){
return 0;
}
lenientParse=true;
value=token.charAt(TIME++);
}else {
negative=false;
}
i-='0';
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length>=10){
return Integer.parseInt(token.substring(TIME,position+length));
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length--;
if(i=='-'){
if(--length<0){
return 0;
}
lenientParse=true;
value=token.charAt(TIME++);
}else {
negative=false;
}
i-='0';
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length>=10){
return Integer.parseInt(token.substring(TIME,position+length));
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
length--;
if(i=='-'){
if(--length<0){
return 0;
}
lenientParse=true;
value=token.charAt(TIME++);
}else {
negative=false;
}
i-='0';
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException(pattern);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=length;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
f=DateTimeFormat.forPattern(sub);
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Types array must not be null or empty");

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(transitions.length<=1){
return false;
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
System.arraycopy(indexRef,0,new int[size()-1],0,tokenLen);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
System.arraycopy(indexRef,tokenLen+1,new int[size()-1],index,newValues.length-index);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
System.arraycopy(indexRef,0,new int[size()-1],0,tokenLen);
System.arraycopy(indexRef,tokenLen+1,new int[size()-1],index,newValues.length-index);

swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
iSavedFields=savedFields=new SavedField[length==savedFields.length?savedFieldsCount*2:savedFields.length];
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
iValues=indexRef;
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.format.DateTimeFormat,404
========
indexRef[0]=value;
String token=parseToken(pattern,indexRef);
i=indexRef[0];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.format.DateTimeFormat,405
org.joda.time.format.DateTimeFormat,406
========
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=text1.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
String token=parseToken(pattern,indexRef);
i=indexRef[0];
if(pattern.length()<pattern.length()){
String pattern=text1;
text1=text2;
text2=temp;
}
int tokenLen=token.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=pattern.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=s.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=text.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern.regionMatches(true,TIME,token,0,tokenLen)){
return position+textLength;
}
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=str.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TIME=0;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
String token=parseToken(pattern,indexRef);
i=indexRef[0];
char tokenLen=token.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
String token=parseToken(pattern,indexRef);
i=indexRef[0];
char tokenLen=pattern.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>=0){
return indexRef[i];
}
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
String token=parseToken(pattern,indexRef);
i=indexRef[0];
long tokenLen=token.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i--;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy(getField(TIME).set(this,TIME,indexRef,TIME),0,indexRef,0,iValues.length);
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern.length()>=4&&(pattern.charAt(0)=='P'||str.charAt(0)=='p')&&(str.charAt(1)=='T'||str.charAt(1)=='t')&&(str.charAt(len-1)=='S'||str.charAt(len-1)=='s')){
}else {
throw new IllegalArgumentException("Invalid format: \""+pattern);
}
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
String token=parseToken(pattern,indexRef);
i=indexRef[0];
char tokenLen=text.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
String token=parseToken(pattern,indexRef);
i=indexRef[0];
if(length<=0){
return 0;
}
int tokenLen=token.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length--;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
length--;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=text.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.format.DateTimeFormat,408
========
i=indexRef[0];
int tokenLen=token.length();
if(parsePos==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
int tokenLen=token.length();
if(i==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
int tokenLen=token.length();
if(length==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
int tokenLen=token.length();
if(errorPos==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
int tokenLen=token.length();
if(newPos==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
int tokenLen=token.length();
if(position==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
int tokenLen=text2.length();
if(tokenLen==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length++;
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
int tokenLen=text.length();
if(tokenLen==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(token.regionMatches(true,TIME,pattern,0,tokenLen)){
return position+textLength;
}
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TIME=0;
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
int tokenLen=token.length();
if(limit==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
int tokenLen=str.length();
if(tokenLen==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
char tokenLen=token.length();
if(tokenLen==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
int tokenLen=token.length();
if(pos==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen!=0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
int tokenLen=token.length();
if(value==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen<transitions.length){
if(i>0){
return indexRef[i-1];
}
return 0;
}
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen<transitions.length){
if(i>0){
return indexRef[i-1];
}
return 0;
}
i=indexRef[0];
int tokenLen=token.length();
if(i==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
int tokenLen=token.length();
if(prev==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
long tokenLen=token.length();
if(tokenLen==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
int tokenLen=pattern.length();
if(tokenLen==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
char tokenLen=pattern.length();
if(tokenLen==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==TIME){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
int tokenLen=token.length();
if(TIME>=length){
throw new IndexOutOfBoundsException();
}
if(tokenLen==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
int tokenLen=token.length();
if(i!=0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen!=TIME){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
int tokenLen=token.length();
if(TIME>=length){
throw new IndexOutOfBoundsException();
}
if(tokenLen!=0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
int tokenLen=token.length();
if(i==TIME){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
int tokenLen=token.length();
if(TIME>=length){
throw new IndexOutOfBoundsException();
}
if(i==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
int tokenLen=token.length();
if(TIME>=length){
throw new IndexOutOfBoundsException();
}
if(tokenLen==TIME){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
int tokenLen=token.length();
if(i!=TIME){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
int tokenLen=token.length();
if(TIME>=length){
throw new IndexOutOfBoundsException();
}
if(i!=0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
int tokenLen=token.length();
if(TIME>=length){
throw new IndexOutOfBoundsException();
}
if(tokenLen!=TIME){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
int tokenLen=token.length();
if(TIME>=length){
throw new IndexOutOfBoundsException();
}
if(i==TIME){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
int tokenLen=token.length();
if(TIME>=length){
throw new IndexOutOfBoundsException();
}
if(i!=TIME){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
int tokenLen=token.length();
if(len==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
int tokenLen=token.length();
if(minDaysInFirstWeek==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
int tokenLen=token.length();
if(poolSize==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
int tokenLen=token.length();
if(TIME==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
int tokenLen=token.length();
if(j==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
int tokenLen=token.length();
if(TIME!=0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
int tokenLen=token.length();
if(index==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
int tokenLen=token.length();
if(instant==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
int tokenLen=token.length();
if(value!=0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tokenLen--;
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
int tokenLen=text.length();
if(length==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
int tokenLen=token.length();
if(suffixPos==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.format.DateTimeFormat,409
org.joda.time.format.DateTimeFormat,412
========
if(tokenLen==0){
break;
}
int c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(limit==0){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=token.charAt(TIME);
if(tokenLen==0){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen==0){
break;
}
char c=text.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c<'0'||c>'9'){
return ~TIME;
}
if(tokenLen==0){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c<'0'||c>'9'){
break;
}
if(tokenLen==0){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length++;
if(tokenLen==0){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
length++;
if(tokenLen==0){
break;
}
char c=text.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c=='-'){
length++;
}else {
TIME++;
}
if(tokenLen==0){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tokenLen--;
if(tokenLen==0){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length==0){
break;
}
char c=text.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0){
break;
}
int c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tokenLen--;
if(length==0){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(tokenLen==0){
break;
}
int c=text.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tokenLen--;
if(tokenLen==0){
break;
}
char c=text.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tokenLen--;
if(tokenLen==0){
break;
}
int c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length==0){
break;
}
int c=text.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tokenLen--;
if(length==0){
break;
}
char c=text.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tokenLen--;
if(length==0){
break;
}
int c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tokenLen--;
if(tokenLen==0){
break;
}
int c=text.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tokenLen--;
if(length==0){
break;
}
int c=text.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value==0){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(count==0){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TIME+=(token.charAt(TIME++)-'0')*100;
if(tokenLen==0){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen==0){
break;
}
char c=pattern.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i==0){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(position==0){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen==0){
negative=c=='-';
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen==0){
limit=Math.min(TIME+1,token.length()-TIME);
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen==0){
continue;
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen==0){
negative=c=='-';
limit=Math.min(TIME+1,token.length()-TIME);
continue;

break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NONE==NONE){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(dateStyle==0){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NONE==0){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(tokenLen==selectStyle(pattern.charAt(1))){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(tokenLen==NONE){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(pattern==null||style.length()!=2){
throw new IllegalArgumentException("Invalid style specification: "+style);
}
if(tokenLen==0){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NONE==selectStyle(pattern.charAt(1))){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(tokenLen==0){
break;
}
char c=leftStr.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen==0){
break;
}
char c=token.substring(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen==0&&(c=='-'||c=='+')){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen==0){
hasSignChar=true;
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen==0){
hasSignChar=true;
negative=c=='-';

break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0){
negative=c=='-';
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.format.DateTimeFormat,414
Find no block!
org.joda.time.format.DateTimeFormat,479
org.joda.time.format.DateTimeFormat,486
org.joda.time.format.DateTimeFormat,488
========
case 'M' :
builder.appendDayOfMonth(tokenLen);
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;


case 'd' :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'M' :
builder.appendClockhourOfHalfday(tokenLen);
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;


case 'd' :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'M' :
builder.appendClockhourOfDay(tokenLen);
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;


case 'd' :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'M' :
builder.appendMinuteOfHour(tokenLen);
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;


case 'd' :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'M' :
builder.appendDayOfYear(tokenLen);
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;


case 'd' :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'M' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;


case 'd' :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'M' :
builder.appendWeekyear(tokenLen,TIME);
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;


case 'd' :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'M' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;


case 'd' :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'M' :
builder.appendYearOfEra(tokenLen,TIME);
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;


case 'd' :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.joda.time.format.DateTimeFormat,490
org.joda.time.format.DateTimeFormat,491
========
case 'd' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'a' :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'd' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'a' :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'd' :
builder.appendMinuteOfHour(tokenLen);
break;

case 'a' :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'd' :
builder.appendDayOfWeek(tokenLen);
break;

case 'a' :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'd' :
builder.appendDayOfYear(tokenLen);
break;

case 'a' :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.joda.time.format.DateTimeFormat,549
========
case 'y' :

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'a' :

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'H' :

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'K' :

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 's' :

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'w' :

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'x' :

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'e' :

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
indexRef[0]=i;
case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen==0){
break;
}
case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.format.DateTimeFormat,550
org.joda.time.format.DateTimeFormat,551
org.joda.time.format.DateTimeFormat,563
Find no block!
org.joda.time.format.DateTimeFormat,574
========
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
int length=token.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
indexRef[0]=i;
int length=pattern.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
i=indexRef[0];
int length=pattern.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
indexRef[0]=i;
i=indexRef[0];
int length=pattern.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
int length=s.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
int length=text2.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
int length=str.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
int length=text.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
char length=pattern.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TIME=0;
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
int length=pattern.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
char length=text.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>=0){
return indexRef[i];
}
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
int length=pattern.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
long length=pattern.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
if(TIME<=0){
return 0;
}
int length=pattern.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TIME--;
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
int length=pattern.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<'0'||c>'9'){
break;
}
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
int length=pattern.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TIME++;
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
int length=pattern.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iType=(i>=0)?(i+1):~i;
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
int length=pattern.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Math.min(iType,8)--;
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
int length=pattern.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
i=TIME;
int length=pattern.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
System.arraycopy(getField(TIME).set(this,TIME,indexRef,TIME),0,indexRef,0,iValues.length);
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
int length=pattern.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern.length()>=4&&(pattern.charAt(0)=='P'||str.charAt(0)=='p')&&(str.charAt(1)=='T'||str.charAt(1)=='t')&&(str.charAt(len-1)=='S'||str.charAt(len-1)=='s')){
}else {
throw new IllegalArgumentException("Invalid format: \""+pattern);
}
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
int length=pattern.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.format.DateTimeFormat,576
org.joda.time.format.DateTimeFormat,577
========
int i=indexRef[0];
int length=str.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern.length()>=4&&(pattern.charAt(0)=='P'||str.charAt(0)=='p')&&(str.charAt(1)=='T'||str.charAt(1)=='t')&&(str.charAt(len-1)=='S'||str.charAt(len-1)=='s')){
}else {
throw new IllegalArgumentException("Invalid format: \""+pattern);
}
int i=indexRef[0];
int length=pattern.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int i=indexRef[0];
int length=token.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int i=indexRef[0];
indexRef[0]=i;
int length=pattern.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int i=indexRef[0];
i=indexRef[0];
int length=pattern.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int i=indexRef[0];
indexRef[0]=i;
i=indexRef[0];
int length=pattern.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int i=indexRef[0];
char length=pattern.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int i=indexRef[0];
int length=text.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int i=indexRef[0];
if(i>=pattern.length()){
return ~position;
}
int length=pattern.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int i=indexRef[0];
int length=pattern.length();
char c=text.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int i=indexRef[0];
int length=pattern.length();
TIME=0;
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int i=indexRef[0];
int length=s.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int i=indexRef[0];
char length=text.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c<'0'||c>'9'){
return ~i;
}
int i=indexRef[0];
int length=pattern.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int i=indexRef[0];
if(length<=0){
return 0;
}
int length=pattern.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length--;
int i=indexRef[0];
int length=pattern.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int i=indexRef[0];
int length=text2.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int i=indexRef[0];
int length=pattern.length();
char c=periodStr.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int i=indexRef[0];
int length=pattern.length();
int c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int i=indexRef[0];
int length=leftStr.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int i=indexRef[0];
int length=pattern.length();
char c=pattern.firstTransition(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>=0){
return indexRef[i];
}
int i=indexRef[0];
int length=pattern.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=(i>=0)?(i+1):~i;
int i=indexRef[0];
int length=pattern.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int i=indexRef[0];
long length=pattern.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int i=indexRef[0];
c=remainderField.iRangeField;
int length=pattern.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i--;
int i=indexRef[0];
int length=pattern.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int i=indexRef[0];
int length=pattern.length();
char c=pattern.get(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int i=indexRef[0];
i=TIME;
int length=pattern.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
int i=indexRef[0];
i=TIME;
int length=pattern.length();
int c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
System.arraycopy(getField(TIME).set(this,TIME,indexRef,TIME),0,indexRef,0,iValues.length);
int i=indexRef[0];
int length=pattern.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.format.DateTimeFormat,579
org.joda.time.format.DateTimeFormat,580
========
if(peek==c){
buf.append(pattern);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(peek==c){
buf.append(pattern);
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new StringBuilder().append("Unable to find best converter for type \"");
if(peek==c){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new StringBuilder().append("\" from remaining set: ");
if(peek==c){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new StringBuilder().append("Unable to find best converter for type \"");
new StringBuilder().append("\" from remaining set: ");
if(peek==c){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(peek==c){
buf.append('�');
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(peek==value){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==dp){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==c){
buf.append('.');
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(peek==c){
FormatUtils.appendPaddedInteger(buf,TIME,3);
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==c){
buf.append('.');
FormatUtils.appendPaddedInteger(buf,TIME,3);

buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TIME-=peek*DateTimeConstants.MILLIS_PER_SECOND;
if(peek==c){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.append('.');
if(peek==c){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
FormatUtils.appendPaddedInteger(buf,TIME,3);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='-'){
length++;
}else {
i++;
}
if(peek==c){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
TIME=c-'0';
if(peek==c){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=pattern.charAt(TIME+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(peek==iFieldType){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==SECONDS_MILLIS){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==SECONDS_OPTIONAL_MILLIS){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==c){
if(TIME>=0){
break;
}
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(peek==c){
fractPos=TIME+peek;
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==c){
if(TIME>=0){
break;
}
fractPos=TIME+peek;

buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==c){
buf.append(c);
expectSeparators=true;
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==c){
TIME++;
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==c){
expectSeparators=true;
TIME++;

buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=pattern.charAt(TIME);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(peek==c){
buf.append(c);
hasSignChar=true;
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==c){
negative=c=='-';
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==c){
hasSignChar=true;
negative=c=='-';

buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==c){
buf.append(c);
i++;
}else {
hasSignChar=true;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==c){
buf.append(c);
i++;
}else {
negative=c=='-';
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==c){
buf.append(c);
i++;
}else {
hasSignChar=true;
negative=c=='-';

break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==position){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==i){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(peek==ruleSetCount){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==index){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==length){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=(i>=0)?(i+1):~i;
if(peek==c){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=(i>=0)?(i+1):~i;
if(peek==length){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=~i;
if(peek==c){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
i=~i;
if(peek==length){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(i>=0){
return indexRef[i];
}
if(peek==c){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>=0){
return indexRef[i];
}
if(peek==length){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>=0){
return indexRef[i];
}
i=~i;
if(peek==c){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>=0){
return indexRef[i];
}
i=~i;
if(peek==length){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==c){
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=TIME;
}
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==c){
indexRef[0]--;
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(peek==c){
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=TIME;
}
indexRef[0]--;

buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==length){
indexRef[0]--;
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(peek==prev){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==end){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(args.length==c){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==c){
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==c){
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;

buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==c){
buf.println(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=TIME;
if(peek==c){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
TIME=peek-'0';
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
peek=pattern.charAt(TIME+1);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek<'0'||c>'9'){
return ~TIME;
}
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i--;
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
while(i+1<TIME){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
while(i+1<position){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
peek=pattern.charAt(TIME);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(i+1<length){
char peek=pattern.append(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(i+1<digits){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.append(Integer.toString(TIME));
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
while(i<TIME){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
while(i+1<limit){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(i+1<length){
char peek=text.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(i+1<length){
i++;
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
while(i<TIME){
i++;
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
while(i+1<TIME){
i++;
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
while(length<i){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
while(i+1<i){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.append(getClass().getName());
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.append('[');
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(peek!=null){
buf.append(zone.getID());
}
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(selectStyle(pattern.charAt(0))==NONE&&peek==NONE){
throw new IllegalArgumentException("Style \'--\' is invalid");
}
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i-=length*DateTimeConstants.MILLIS_PER_MINUTE;
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.append(':');
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
FormatUtils.appendPaddedInteger(buf,peek,2);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i-=peek*DateTimeConstants.MILLIS_PER_SECOND;
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==0){
return buf.toString();
}
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.append(':');
if(i==0){
return buf.toString();
}
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=~i;
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i<transitions.length){
if(i>0){
return indexRef[i-1];
}
return 0;
}
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=~i;
if(i<transitions.length){
if(i>0){
return indexRef[i-1];
}
return 0;
}
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern.charAt(TIME)!=c){
a=Character.toUpperCase(a);
b=Character.toUpperCase(b);
if(a!=b){
a=Character.toLowerCase(a);
b=Character.toLowerCase(b);
if(a!=b){
return ~TIME;
}
}
}
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iType=TIME;
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(i+1<length){
int peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
while(i+1<length){
values[i]=TIME;
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=(i>=0)?(i+1):~i;
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.append("PT");
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
FormatUtils.appendUnpaddedInteger(buf,getMillis());
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((getMillis()/1000)*1000==millis){
buf.setLength(buf.length()-3);
}else {
buf.insert(buf.length()-3,".");
}
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (pattern.length()){
case 0 :
return this;

case 1 :
return append0(new CharacterLiteral(text.charAt(0)));

default :
return append0(new StringLiteral(text));

}
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.append('[');
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&str.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\'9\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(len+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\'s\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.write(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c<'0'&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
TIME=c-'0';
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=pattern.charAt(length+1);
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c<'0'&&pattern.charAt(i+1)=='\'9\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=pattern.charAt(length+1);
if(c<'0'&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
c=pattern.charAt(length+1);
if(i+1<length&&pattern.charAt(i+1)=='\'9\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=pattern.charAt(length+1);
if(c<'0'&&pattern.charAt(i+1)=='\'9\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
if(i!=Integer.MIN_VALUE){
value=-i;
}else {
buf.append(""+-(long)Integer.MIN_VALUE);
return ;
}
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)!='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(TIME)!=','){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(TIME)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)==','){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&text.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\',\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(TIME)!='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)!=','){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(TIME)==','){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new StringBuilder().append("Unable to find best converter for type \"");
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new StringBuilder().append("\" from remaining set: ");
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new StringBuilder().append("Unable to find best converter for type \"");
new StringBuilder().append("\" from remaining set: ");
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1>=length<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(inLiteral){
i++;
}else {
TIME++;
}
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
inLiteral=c=='-';
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
inLiteral=c=='-';
if(i+1>=length<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(inLiteral){
i++;
}else {
TIME++;
}
if(i+1>=length<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
inLiteral=c=='-';
if(inLiteral){
i++;
}else {
TIME++;
}
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
inLiteral=c=='-';
if(inLiteral){
i++;
}else {
TIME++;
}
if(i+1>=length<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
hasSignChar=true;
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
negative=c=='-';
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
hasSignChar=true;
negative=c=='-';

i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
negative=c=='-';
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
continue;
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
negative=c=='-';
continue;

inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i<=1||pattern.charAt(i-1)!='0'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<=length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i<=1&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i-1)!='0'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i-1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='0'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\'0\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<=length&&pattern.charAt(i+1)!='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<=length&&pattern.charAt(i-1)!='0'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<=length&&pattern.charAt(i-1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<=length&&pattern.charAt(i+1)=='0'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<=length&&str.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i<=1&&pattern.charAt(i+1)!='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i-1)!='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)!='0'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&str.charAt(i+1)!='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i<=1&&pattern.charAt(i-1)!='0'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i<=1&&pattern.charAt(i-1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i<=1&&pattern.charAt(i+1)=='0'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i<=1&&str.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i-1)=='0'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&str.charAt(i+1)=='0'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<=length&&pattern.charAt(i-1)!='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<=length&&pattern.charAt(i+1)!='0'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<=length&&str.charAt(i+1)!='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<=length&&pattern.charAt(i-1)=='0'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<=length&&str.charAt(i+1)=='0'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i<=1&&pattern.charAt(i-1)!='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i<=1&&pattern.charAt(i+1)!='0'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i<=1&&str.charAt(i+1)!='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&str.charAt(i+1)!='0'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i<=1&&pattern.charAt(i-1)=='0'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i<=1&&str.charAt(i+1)=='0'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<=length&&str.charAt(i+1)!='0'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i<=1&&str.charAt(i+1)!='0'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&c=='+'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='+'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\'+\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
expectSeparators=true;
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
TIME++;
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
expectSeparators=true;
TIME++;

i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=pattern.charAt(TIME);
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
buf.append('�');
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.charAt(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
if(--length<0){
return 0;
}
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
negative=true;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
if(--length<0){
return 0;
}
negative=true;

buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern!=null){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(pattern);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern!=null){
i++;
buf.append(pattern);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
indexRef[0]--;
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;

i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
indexRef[0]++;
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
indexRef[0]--;
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
indexRef[0]++;
indexRef[0]--;

inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
indexRef[0]--;
i++;
buf.append(c);
}else {
indexRef[0]++;
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
indexRef[0]--;
i++;
buf.append(c);
}else {
indexRef[0]--;
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
indexRef[0]--;
i++;
buf.append(c);
}else {
indexRef[0]++;
indexRef[0]--;

inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
indexRef[0]++;
indexRef[0]--;
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
indexRef[0]++;
indexRef[0]++;
indexRef[0]--;

inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
indexRef[0]--;
indexRef[0]++;
indexRef[0]--;

inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
indexRef[0]--;
i++;
buf.append(c);
}else {
indexRef[0]++;
indexRef[0]--;
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
indexRef[0]--;
i++;
buf.append(c);
}else {
indexRef[0]++;
indexRef[0]++;
indexRef[0]--;

inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
indexRef[0]--;
i++;
buf.append(c);
}else {
indexRef[0]--;
indexRef[0]++;
indexRef[0]--;

inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
indexRef[0]++;
indexRef[0]--;
indexRef[0]++;
indexRef[0]--;

inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
indexRef[0]--;
i++;
buf.append(c);
}else {
indexRef[0]++;
indexRef[0]--;
indexRef[0]++;
indexRef[0]--;

inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=TIME;
}
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=TIME;
}
indexRef[0]--;

i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.substring(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.append(pattern);
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.append(pattern);
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.substring(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.append('[');
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.substring(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.append(pattern);
buf.append('[');
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.append(pattern);
buf.append('[');
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.substring(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i<=0){
return 0;
}
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i--;
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<i&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)==null){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&i==length-1){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<SECONDS_MILLIS&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
buf.append('.');
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
FormatUtils.appendPaddedInteger(buf,TIME,3);
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
buf.append('.');
FormatUtils.appendPaddedInteger(buf,TIME,3);

i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)!=null){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&selectStyle(pattern.charAt(1))==NONE){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<NONE&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(pattern==null||style.length()!=2){
throw new IllegalArgumentException("Invalid style specification: "+style);
}
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<NONE&&selectStyle(pattern.charAt(1))==NONE){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=~i;
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
FormatUtils.appendPaddedInteger(buf,length,2);
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i-=length*(int)DateTimeConstants.MILLIS_PER_HOUR;
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.append(':');
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
FormatUtils.appendPaddedInteger(buf,i/DateTimeConstants.MILLIS_PER_MINUTE,2);
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i-=i/DateTimeConstants.MILLIS_PER_MINUTE*DateTimeConstants.MILLIS_PER_MINUTE;
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&c=='p'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='p'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\'p\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&getFieldType(i)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(0)=='#'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(0)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='#'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&trimmed.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\'#\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
position+=TIME;
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
found=true;
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
position+=TIME;
found=true;

i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
position+=TIME;
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
break;
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
position+=TIME;
break;

inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=(i>=0)?(i+1):~i;
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i<transitions.length){
if(i>0){
return indexRef[i-1];
}
return 0;
}
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=~i;
if(i<transitions.length){
if(i>0){
return indexRef[i-1];
}
return 0;
}
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.println(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.writeByte(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
if(TIME>=0){
break;
}
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
fractPos=TIME+length;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
if(TIME>=0){
break;
}
fractPos=TIME+length;

buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length++;
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
length++;
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
if(TIME>=0){
break;
}
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(millis+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.setLength(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.append('S');
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.append('S');
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.setLength(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&TIME+length!=i){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i<=0){
return 0;
}
i--;
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&getFieldType(i)!='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.length()==0){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.length()=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&length==0){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(pattern==null){
throw new IllegalArgumentException("Literal must not be null");
}
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
buf.append(c);
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!inLiteral&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c<'0'&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c=='-'||c=='+'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c=='-'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!inLiteral&&c=='+'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c=='-'&&c=='+'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
expectSeparators=true;
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i++;
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
expectSeparators=true;
i++;

i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!inLiteral&&(c=='-'||c=='+')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
hasSignChar=true;
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
negative=c=='-';
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
hasSignChar=true;
negative=c=='-';

i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='0'&&c<='9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c>='0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!inLiteral&&c<='9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length==0&&(c=='-'||c=='+')&&!inLiteral){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length==0&&(c=='-'||c=='+')&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
if(c=='-'){
length++;
}else {
i++;
}
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
if(c=='-'){
length++;
}else {
i++;
}
continue;

buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')&&!inLiteral){
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length==0&&(c=='-'||c=='+')&&!inLiteral){
i--;
break;
}else {
if(c=='-'){
length++;
}else {
i++;
}
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length==0&&(c=='-'||c=='+')&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length==0&&(c=='-'||c=='+')&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
if(c=='-'){
length++;
}else {
i++;
}
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
if(c=='-'){
length++;
}else {
i++;
}
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length==0&&(c=='-'||c=='+')&&!inLiteral){
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
if(c=='-'){
length++;
}else {
i++;
}
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length==0&&(c=='-'||c=='+')&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
if(c=='-'){
length++;
}else {
i++;
}
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length==0&&(c=='-'||c=='+')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
negative=c=='-';
limit=Math.min(TIME+1,pattern.length()-i);

i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
negative=c=='-';
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
negative=c=='-';
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
continue;

buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')){
negative=c=='-';
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')){
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')){
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length==0&&(c=='-'||c=='+')){
i--;
break;
}else {
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
negative=c=='-';
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
negative=c=='-';
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
negative=c=='-';
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
negative=c=='-';
i--;
break;
}else {
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')){
negative=c=='-';
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')){
negative=c=='-';
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')){
negative=c=='-';
i--;
break;
}else {
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')){
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')){
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')){
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
negative=c=='-';
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
negative=c=='-';
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
negative=c=='-';
i--;
break;
}else {
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
negative=c=='-';
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
negative=c=='-';
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
negative=c=='-';
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')){
negative=c=='-';
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')){
negative=c=='-';
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')){
negative=c=='-';
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')){
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
negative=c=='-';
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
negative=c=='-';
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
negative=c=='-';
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
negative=c=='-';
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='P'||c=='p'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c=='P'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!inLiteral&&c=='p'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c=='P'&&c=='p'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(peek=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\'9\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c=='\'-\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\'+\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\'9\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=c-'0';
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
c=pattern.charAt(TIME+1);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c<'0'||c>'9'){
return ~TIME;
}
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=((year<<3)+(year<<1))+c-'0';
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=c-'0';
if(c=='\'9\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=pattern.charAt(TIME+1);
if(c=='\'9\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=c-'0';
c=pattern.charAt(TIME+1);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=c-'0';
c=pattern.charAt(TIME+1);
if(c=='\'9\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c==':'){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c=='\':\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(c>='0'&&c<='9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(c>='0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c<='9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length<=0){
break;
}
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
c=pattern.charAt(TIME);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c==':'){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(c>='0'&&c<='9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c==':'){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(c>='0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c==':'){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c<='9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length<=0){
break;
}
if(c==':'){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
c=pattern.charAt(TIME);
if(c==':'){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length<=0){
break;
}
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(c>='0'&&c<='9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
c=pattern.charAt(TIME);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(c>='0'&&c<='9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length<=0){
break;
}
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(c>='0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
c=pattern.charAt(TIME);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(c>='0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length<=0){
break;
}
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c<='9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
c=pattern.charAt(TIME);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c<='9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length<=0){
break;
}
c=pattern.charAt(TIME);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length<=0){
break;
}
if(c==':'){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(c>='0'&&c<='9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
c=pattern.charAt(TIME);
if(c==':'){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(c>='0'&&c<='9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length<=0){
break;
}
if(c==':'){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(c>='0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
c=pattern.charAt(TIME);
if(c==':'){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(c>='0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length<=0){
break;
}
if(c==':'){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c<='9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
c=pattern.charAt(TIME);
if(c==':'){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c<='9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length<=0){
break;
}
c=pattern.charAt(TIME);
if(c==':'){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length<=0){
break;
}
c=pattern.charAt(TIME);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(c>='0'&&c<='9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length<=0){
break;
}
c=pattern.charAt(TIME);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(c>='0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length<=0){
break;
}
c=pattern.charAt(TIME);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c<='9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length<=0){
break;
}
c=pattern.charAt(TIME);
if(c==':'){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(c>='0'&&c<='9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length<=0){
break;
}
c=pattern.charAt(TIME);
if(c==':'){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(c>='0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length<=0){
break;
}
c=pattern.charAt(TIME);
if(c==':'){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c<='9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(i+1>=TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+i))<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+length))<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(c=='-'){
i++;
}else {
length++;
}
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
limit=Math.min(TIME+1,pattern.length()-length);
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
continue;
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
if(c=='-'){
i++;
}else {
length++;
}
limit=Math.min(TIME+1,pattern.length()-length);
continue;

if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\''){
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+i))<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+length))<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
if(c=='-'){
i++;
}else {
length++;
}
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+i))<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+length))<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(c=='-'){
i++;
}else {
length++;
}
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(c=='-'){
i++;
}else {
length++;
}
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+i))<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+length))<'0'&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(c=='-'){
i++;
}else {
length++;
}
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+length))<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(c=='-'){
i++;
}else {
length++;
}
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+i))<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+length))<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
if(c=='-'){
i++;
}else {
length++;
}
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
if(c=='-'){
i++;
}else {
length++;
}
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+i))<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+length))<'0'&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
if(c=='-'){
i++;
}else {
length++;
}
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+length))<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
if(c=='-'){
i++;
}else {
length++;
}
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(c=='-'){
i++;
}else {
length++;
}
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+i))<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+length))<'0'&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(c=='-'){
i++;
}else {
length++;
}
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+length))<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(c=='-'){
i++;
}else {
length++;
}
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(c=='-'){
i++;
}else {
length++;
}
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+length))<'0'&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
if(c=='-'){
i++;
}else {
length++;
}
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+i))<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+length))<'0'&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
if(c=='-'){
i++;
}else {
length++;
}
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+length))<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
if(c=='-'){
i++;
}else {
length++;
}
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
if(c=='-'){
i++;
}else {
length++;
}
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+length))<'0'&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(c=='-'){
i++;
}else {
length++;
}
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+length))<'0'&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+i))<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
negative=c=='-';
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
limit=Math.min(TIME+1,pattern.length()-TIME);
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
negative=c=='-';
limit=Math.min(TIME+1,pattern.length()-TIME);
continue;

if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\''){
if(i+1>=TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+i))<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
continue;
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
if(i+1>=TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+i))<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
if(i+1>=TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
if(i+1>=TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
continue;
if(i+1>=TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+i))<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
continue;
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
continue;
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+i))<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
continue;
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
continue;
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\''){
if(i+1>=TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+i))<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\''){
if(i+1>=TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\''){
if(i+1>=TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\''){
continue;
if(i+1>=TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\''){
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+i))<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
continue;
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\''){
continue;
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+i))<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
continue;
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\''){
continue;
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
continue;
if(i+1>=TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+i))<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
if(i+1>=TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
continue;
if(i+1>=TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
continue;
if(i+1>=TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
continue;
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+i))<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
continue;
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
continue;
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
continue;
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\''){
continue;
if(i+1>=TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+i))<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\''){
if(i+1>=TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\''){
continue;
if(i+1>=TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\''){
continue;
if(i+1>=TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\''){
continue;
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+i))<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\''){
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
continue;
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\''){
continue;
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\''){
continue;
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
continue;
if(i+1>=TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
continue;
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==0){
return ~TIME;
}
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\'p\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=pattern.charAt(0);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if((c=='.'||c==',')&&(i==SECONDS_MILLIS||i==SECONDS_OPTIONAL_MILLIS)){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if((c=='.'||c==',')&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(i==SECONDS_MILLIS||iFieldType==SECONDS_OPTIONAL_MILLIS)){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
fractPos=TIME+length;
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
limit=Math.min(TIME+1,pattern.length()-TIME);
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
fractPos=TIME+length;
limit=Math.min(TIME+1,pattern.length()-TIME);

i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\'9\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if((c=='.'||c==',')&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c!='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.toLowerCase(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
b=Character.toLowerCase(c);
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
if(pattern.charAt(i)!=c){
return ~i;
}
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
b=Character.toLowerCase(c);
if(pattern.charAt(i)!=c){
return ~i;
}

buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>=pattern.length()){
return ~position;
}
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(divisor=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iType=TIME;
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iType=(i>=0)?i/TIME:((i+1)/divisor-1);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iType=(TIME>=0)?j/TIME:((j+1)/divisor-1);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(;i<size;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length=digitCount(pattern,i,3);
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TIME+=(pattern.charAt(i++)-'0')*100;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>1){
TIME+=(pattern.charAt(i++)-'0')*10;
if(count>2){
offset+=text.charAt(position++)-'0';
}
}
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(;size<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(;i<digits;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(;size<digits;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.append("Unable to find best converter for type \"");
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.append("\" from remaining set: ");
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.append("Unable to find best converter for type \"");
buf.append("\" from remaining set: ");
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
length=c-'0';
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
c=pattern.charAt(i+1);
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c<'0'||c>'9'){
return ~i;
}
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length=((year<<3)+(year<<1))+c-'0';
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length=c-'0';
c=pattern.charAt(i+1);
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Timeout!
