java version "1.7.0_231"
OpenJDK Runtime Environment (rhel-2.6.19.1.el7_6-x86_64 u231-b01)
OpenJDK 64-Bit Server VM (build 24.231-b01, mixed mode)
Check out 0da657a6 to /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/ OK
Init local repository...................................................... OK
Tag post-fix revision...................................................... OK
Initialize fixed program version........................................... OK
Apply patch................................................................ OK
Initialize buggy program version........................................... OK
Diff 0da657a6:1780da71..................................................... OK
Apply patch................................................................ OK
Tag pre-fix revision....................................................... OK
Check out program version: Math-1b......................................... OK
Running ant (compile)...................................................... OK
Running ant (compile.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Running ant (run.dev.tests)................................................ OK
Failing tests: 2
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor
/home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2
PURIFY IS TRUE
=================================================
Project : math_1	start : 19/10/23 13:34

Field type inconsistancy 'SUPER' with types : AbstractOptimizer<PointVectorValuePair,OPTIM> and JacobianMultivariateVectorOptimizer
Field type inconsistancy 'SUPER' with types : AbstractLeastSquaresOptimizer<LevenbergMarquardtOptimizer> and AbstractLeastSquaresOptimizer
Field type inconsistancy 'SUPER' with types : AbstractLeastSquaresOptimizer<GaussNewtonOptimizer> and AbstractLeastSquaresOptimizer
Field type inconsistancy 'SUPER' with types : LinearOptimizer and AbstractLinearOptimizer
Field type inconsistancy 'SUPER' with types : UnivariateOptimizer and BaseAbstractUnivariateOptimizer
Field type inconsistancy 'SUPER' with types : MultivariateOptimizer and BaseAbstractMultivariateSimpleBoundsOptimizer<MultivariateFunction>
Field type inconsistancy 'SUPER' with types : MultivariateOptimizer and BaseAbstractMultivariateSimpleBoundsOptimizer<MultivariateFunction>
Field type inconsistancy 'SUPER' with types : MultivariateOptimizer and BaseAbstractMultivariateOptimizer<MultivariateFunction>
Field type inconsistancy 'SUPER' with types : MultivariateOptimizer and BaseAbstractMultivariateOptimizer<MultivariateFunction>
Field type inconsistancy 'SUPER' with types : AbstractOptimizer<PointVectorValuePair,OPTIM> and BaseAbstractMultivariateVectorOptimizer<DifferentiableMultivariateVectorFunction>
Field type inconsistancy 'SUPER' with types : GradientMultivariateOptimizer and AbstractScalarDifferentiableOptimizer
Field type inconsistancy 'updateFormula' with types : Formula and ConjugateGradientFormula
Field type inconsistancy 'SUPER' with types : AbstractLeastSquaresOptimizer<GaussNewtonOptimizer> and AbstractLeastSquaresOptimizer
Field type inconsistancy 'SUPER' with types : AbstractLeastSquaresOptimizer<LevenbergMarquardtOptimizer> and AbstractLeastSquaresOptimizer
Field type inconsistancy 'optimizer' with types : MultivariateVectorOptimizer and MultivariateDifferentiableVectorOptimizer
Field type inconsistancy 'random' with types : RandomGenerator and Random
Variable type inconsistancy of 'visited' in method 'cluster,Collection<T>' with types : Map<Clusterable,PointStatus> and Map<Clusterable<T>,PointStatus>
Variable type inconsistancy of 'start' in method 'getSegments' with types : Vector2D and Vector3D
Variable type inconsistancy of 'end' in method 'getSegments' with types : Vector2D and Vector3D
Field type inconsistancy 'start' with types : Vector2D and Vector3D
Field type inconsistancy 'end' with types : Vector2D and Vector3D
readFailedTest: path is /mnt/nfs/work1/brun/mmotwani/SimFix/d4j-info/failed_tests/math/1.txtTESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_1
Failing tests: 0
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_2
Failing tests: 0
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_3
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_3
Failing tests: 0
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_4
Failing tests: 0
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_5
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_5
Failing tests: 0
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_6
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_6
Failing tests: 0
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_7
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_7
Failing tests: 0
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_1
Failing tests: 0
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_2
Failing tests: 0
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_3
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_3
Failing tests: 0
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_4
Failing tests: 0
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_5
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_5
Failing tests: 0
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_6
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_6
Failing tests: 0
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_7
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_7
Failing tests: 0
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
IN COMMENT TEST CASE: org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
IN COMMENT TEST CASE: org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
IN COMMENT TEST CASE: /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy/src/test/java/org/apache/commons/math3/fraction/FractionTest.java

# FAILING TESTS: 1
TIMEOUT : 9000000
===========
locations= [<org.apache.commons.math3.fraction.FractionConversionException,53>, <org.apache.commons.math3.fraction.FractionConversionException,54>, <org.apache.commons.math3.exception.ConvergenceException,48>, <org.apache.commons.math3.exception.ConvergenceException,49>, <org.apache.commons.math3.exception.ConvergenceException,50>, <org.apache.commons.math3.fraction.BigFraction,271>, <org.apache.commons.math3.fraction.BigFraction,272>, <org.apache.commons.math3.fraction.BigFraction,273>, <org.apache.commons.math3.fraction.BigFraction,274>, <org.apache.commons.math3.fraction.BigFraction,275>, <org.apache.commons.math3.fraction.BigFraction,281>, <org.apache.commons.math3.fraction.BigFraction,287>, <org.apache.commons.math3.fraction.BigFraction,288>, <org.apache.commons.math3.fraction.BigFraction,289>, <org.apache.commons.math3.fraction.BigFraction,290>, <org.apache.commons.math3.fraction.BigFraction,292>, <org.apache.commons.math3.fraction.BigFraction,293>, <org.apache.commons.math3.fraction.BigFraction,295>, <org.apache.commons.math3.fraction.BigFraction,296>, <org.apache.commons.math3.fraction.BigFraction,298>, <org.apache.commons.math3.fraction.BigFraction,299>, <org.apache.commons.math3.fraction.BigFraction,300>, <org.apache.commons.math3.fraction.BigFraction,301>, <org.apache.commons.math3.fraction.BigFraction,302>, <org.apache.commons.math3.fraction.BigFraction,303>, <org.apache.commons.math3.fraction.BigFraction,306>, <org.apache.commons.math3.fraction.BigFraction,309>, <org.apache.commons.math3.fraction.BigFraction,310>, <org.apache.commons.math3.fraction.BigFraction,313>, <org.apache.commons.math3.fraction.BigFraction,314>, <org.apache.commons.math3.fraction.BigFraction,315>, <org.apache.commons.math3.fraction.BigFraction,316>, <org.apache.commons.math3.fraction.BigFraction,317>, <org.apache.commons.math3.fraction.BigFraction,318>, <org.apache.commons.math3.fraction.BigFraction,320>, <org.apache.commons.math3.fraction.BigFraction,322>, <org.apache.commons.math3.fraction.BigFraction,324>, <org.apache.commons.math3.fraction.BigFraction,328>, <org.apache.commons.math3.fraction.BigFraction,329>, <org.apache.commons.math3.fraction.BigFraction,330>, <org.apache.commons.math3.fraction.BigFraction,332>, <org.apache.commons.math3.fraction.BigFraction,333>, <org.apache.commons.math3.fraction.BigFraction,335>, <org.apache.commons.math3.fraction.BigFraction,356>, <org.apache.commons.math3.fraction.BigFraction,357>, <org.apache.commons.math3.exception.util.LocalizedFormats,382>, <org.apache.commons.math3.exception.util.LocalizedFormats,383>, <org.apache.commons.math3.exception.util.LocalizedFormats,390>, <org.apache.commons.math3.exception.util.LocalizedFormats,396>, <org.apache.commons.math3.exception.MathIllegalStateException,86>, <org.apache.commons.math3.fraction.Fraction,144>, <org.apache.commons.math3.fraction.Fraction,145>, <org.apache.commons.math3.fraction.Fraction,215>, <org.apache.commons.math3.fraction.Fraction,239>, <org.apache.commons.math3.fraction.Fraction,240>, <org.apache.commons.math3.exception.MathIllegalStateException,69>, <org.apache.commons.math3.exception.MathIllegalStateException,70>, <org.apache.commons.math3.exception.MathIllegalStateException,74>, <org.apache.commons.math3.exception.MathIllegalStateException,45>, <org.apache.commons.math3.exception.MathIllegalStateException,46>, <org.apache.commons.math3.exception.MathIllegalStateException,47>, <org.apache.commons.math3.exception.MathIllegalStateException,48>, <org.apache.commons.math3.fraction.BigFraction,768>, <org.apache.commons.math3.util.FastMath,3352>, <org.apache.commons.math3.fraction.BigFraction,801>, <org.apache.commons.math3.util.FastMath,3338>, <org.apache.commons.math3.util.FastMath,3342>, <org.apache.commons.math3.util.FastMath,3346>, <org.apache.commons.math3.util.FastMath,3347>, <org.apache.commons.math3.util.FastMath,3351>, <org.apache.commons.math3.util.FastMath,3355>, <org.apache.commons.math3.fraction.Fraction,220>, <org.apache.commons.math3.fraction.Fraction,221>, <org.apache.commons.math3.fraction.Fraction,222>, <org.apache.commons.math3.fraction.Fraction,223>, <org.apache.commons.math3.fraction.Fraction,224>, <org.apache.commons.math3.fraction.Fraction,225>, <org.apache.commons.math3.util.FastMath,3024>, <org.apache.commons.math3.fraction.Fraction,366>, <org.apache.commons.math3.fraction.Fraction,374>, <org.apache.commons.math3.exception.util.LocalizedFormats,370>, <org.apache.commons.math3.exception.util.LocalizedFormats,371>, <org.apache.commons.math3.exception.util.LocalizedFormats,372>, <org.apache.commons.math3.exception.util.LocalizedFormats,44>, <org.apache.commons.math3.exception.util.LocalizedFormats,45>, <org.apache.commons.math3.exception.util.LocalizedFormats,46>, <org.apache.commons.math3.exception.util.LocalizedFormats,47>, <org.apache.commons.math3.exception.util.LocalizedFormats,48>, <org.apache.commons.math3.exception.util.LocalizedFormats,49>, <org.apache.commons.math3.exception.util.LocalizedFormats,50>, <org.apache.commons.math3.exception.util.LocalizedFormats,51>, <org.apache.commons.math3.exception.util.LocalizedFormats,52>, <org.apache.commons.math3.exception.util.LocalizedFormats,53>, <org.apache.commons.math3.exception.util.LocalizedFormats,54>, <org.apache.commons.math3.exception.util.LocalizedFormats,55>, <org.apache.commons.math3.exception.util.LocalizedFormats,56>, <org.apache.commons.math3.exception.util.LocalizedFormats,57>, <org.apache.commons.math3.exception.util.LocalizedFormats,58>, <org.apache.commons.math3.exception.util.LocalizedFormats,59>, <org.apache.commons.math3.exception.util.LocalizedFormats,60>, <org.apache.commons.math3.exception.util.LocalizedFormats,61>, <org.apache.commons.math3.exception.util.LocalizedFormats,62>, <org.apache.commons.math3.exception.util.LocalizedFormats,63>, <org.apache.commons.math3.exception.util.LocalizedFormats,64>, <org.apache.commons.math3.exception.util.LocalizedFormats,65>, <org.apache.commons.math3.exception.util.LocalizedFormats,66>, <org.apache.commons.math3.exception.util.LocalizedFormats,67>, <org.apache.commons.math3.exception.util.LocalizedFormats,68>, <org.apache.commons.math3.exception.util.LocalizedFormats,69>, <org.apache.commons.math3.exception.util.LocalizedFormats,70>, <org.apache.commons.math3.exception.util.LocalizedFormats,71>, <org.apache.commons.math3.exception.util.LocalizedFormats,72>, <org.apache.commons.math3.exception.util.LocalizedFormats,73>, <org.apache.commons.math3.exception.util.LocalizedFormats,74>, <org.apache.commons.math3.exception.util.LocalizedFormats,75>, <org.apache.commons.math3.exception.util.LocalizedFormats,76>, <org.apache.commons.math3.exception.util.LocalizedFormats,77>, <org.apache.commons.math3.exception.util.LocalizedFormats,78>, <org.apache.commons.math3.exception.util.LocalizedFormats,79>, <org.apache.commons.math3.exception.util.LocalizedFormats,80>, <org.apache.commons.math3.exception.util.LocalizedFormats,81>, <org.apache.commons.math3.exception.util.LocalizedFormats,82>, <org.apache.commons.math3.exception.util.LocalizedFormats,83>, <org.apache.commons.math3.exception.util.LocalizedFormats,84>, <org.apache.commons.math3.exception.util.LocalizedFormats,85>, <org.apache.commons.math3.exception.util.LocalizedFormats,86>, <org.apache.commons.math3.exception.util.LocalizedFormats,87>, <org.apache.commons.math3.exception.util.LocalizedFormats,88>, <org.apache.commons.math3.exception.util.LocalizedFormats,89>, <org.apache.commons.math3.exception.util.LocalizedFormats,90>, <org.apache.commons.math3.exception.util.LocalizedFormats,91>, <org.apache.commons.math3.exception.util.LocalizedFormats,92>, <org.apache.commons.math3.exception.util.LocalizedFormats,93>, <org.apache.commons.math3.exception.util.LocalizedFormats,94>, <org.apache.commons.math3.exception.util.LocalizedFormats,95>, <org.apache.commons.math3.exception.util.LocalizedFormats,96>, <org.apache.commons.math3.exception.util.LocalizedFormats,97>, <org.apache.commons.math3.exception.util.LocalizedFormats,98>, <org.apache.commons.math3.exception.util.LocalizedFormats,99>, <org.apache.commons.math3.exception.util.LocalizedFormats,100>, <org.apache.commons.math3.exception.util.LocalizedFormats,101>, <org.apache.commons.math3.exception.util.LocalizedFormats,102>, <org.apache.commons.math3.exception.util.LocalizedFormats,103>, <org.apache.commons.math3.exception.util.LocalizedFormats,104>, <org.apache.commons.math3.exception.util.LocalizedFormats,105>, <org.apache.commons.math3.exception.util.LocalizedFormats,106>, <org.apache.commons.math3.exception.util.LocalizedFormats,107>, <org.apache.commons.math3.exception.util.LocalizedFormats,108>, <org.apache.commons.math3.exception.util.LocalizedFormats,109>, <org.apache.commons.math3.exception.util.LocalizedFormats,110>, <org.apache.commons.math3.exception.util.LocalizedFormats,111>, <org.apache.commons.math3.exception.util.LocalizedFormats,112>, <org.apache.commons.math3.exception.util.LocalizedFormats,113>, <org.apache.commons.math3.exception.util.LocalizedFormats,114>, <org.apache.commons.math3.exception.util.LocalizedFormats,115>, <org.apache.commons.math3.exception.util.LocalizedFormats,116>, <org.apache.commons.math3.exception.util.LocalizedFormats,117>, <org.apache.commons.math3.exception.util.LocalizedFormats,118>, <org.apache.commons.math3.exception.util.LocalizedFormats,119>, <org.apache.commons.math3.exception.util.LocalizedFormats,120>, <org.apache.commons.math3.exception.util.LocalizedFormats,121>, <org.apache.commons.math3.exception.util.LocalizedFormats,122>, <org.apache.commons.math3.exception.util.LocalizedFormats,123>, <org.apache.commons.math3.exception.util.LocalizedFormats,124>, <org.apache.commons.math3.exception.util.LocalizedFormats,125>, <org.apache.commons.math3.exception.util.LocalizedFormats,126>, <org.apache.commons.math3.exception.util.LocalizedFormats,127>, <org.apache.commons.math3.exception.util.LocalizedFormats,128>, <org.apache.commons.math3.exception.util.LocalizedFormats,129>, <org.apache.commons.math3.exception.util.LocalizedFormats,130>, <org.apache.commons.math3.exception.util.LocalizedFormats,132>, <org.apache.commons.math3.exception.util.LocalizedFormats,133>, <org.apache.commons.math3.exception.util.LocalizedFormats,134>, <org.apache.commons.math3.exception.util.LocalizedFormats,135>, <org.apache.commons.math3.exception.util.LocalizedFormats,136>, <org.apache.commons.math3.exception.util.LocalizedFormats,137>, <org.apache.commons.math3.exception.util.LocalizedFormats,138>, <org.apache.commons.math3.exception.util.LocalizedFormats,139>, <org.apache.commons.math3.exception.util.LocalizedFormats,140>, <org.apache.commons.math3.exception.util.LocalizedFormats,141>, <org.apache.commons.math3.exception.util.LocalizedFormats,142>, <org.apache.commons.math3.exception.util.LocalizedFormats,143>, <org.apache.commons.math3.exception.util.LocalizedFormats,144>, <org.apache.commons.math3.exception.util.LocalizedFormats,145>, <org.apache.commons.math3.exception.util.LocalizedFormats,146>, <org.apache.commons.math3.exception.util.LocalizedFormats,147>, <org.apache.commons.math3.exception.util.LocalizedFormats,148>, <org.apache.commons.math3.exception.util.LocalizedFormats,149>, <org.apache.commons.math3.exception.util.LocalizedFormats,150>, <org.apache.commons.math3.exception.util.LocalizedFormats,151>, <org.apache.commons.math3.exception.util.LocalizedFormats,152>, <org.apache.commons.math3.exception.util.LocalizedFormats,153>, <org.apache.commons.math3.exception.util.LocalizedFormats,154>, <org.apache.commons.math3.exception.util.LocalizedFormats,155>, <org.apache.commons.math3.exception.util.LocalizedFormats,156>, <org.apache.commons.math3.exception.util.LocalizedFormats,157>, <org.apache.commons.math3.exception.util.LocalizedFormats,158>, <org.apache.commons.math3.exception.util.LocalizedFormats,159>, <org.apache.commons.math3.exception.util.LocalizedFormats,160>, <org.apache.commons.math3.exception.util.LocalizedFormats,161>]
======================org.apache.commons.math3.fraction.FractionConversionException,53
org.apache.commons.math3.fraction.FractionConversionException,54
Find no block!
org.apache.commons.math3.exception.ConvergenceException,48
Find no block!
org.apache.commons.math3.exception.ConvergenceException,49
========
getContext().addMessage(LocalizedFormats.INTERNAL_ERROR,args);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
getContext().addMessage(pattern,REPORT_URL);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
getContext().addMessage(LocalizedFormats.INTERNAL_ERROR,REPORT_URL);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
getContext().addMessage(LocalizedFormats.CONTRACTION_CRITERIA_SMALLER_THAN_ONE,args);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
getContext().addMessage(LocalizedFormats.EXPANSION_FACTOR_SMALLER_THAN_ONE,args);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.apache.commons.math3.exception.ConvergenceException,50
Find no block!
org.apache.commons.math3.fraction.BigFraction,271
Find no block!
org.apache.commons.math3.fraction.BigFraction,272
========
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}
long overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long overflow=Integer.MAX_VALUE;
long r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++maxDenominator;
long overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
a0=(overflow*serialVersionUID)+serialVersionUID;
long overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double overflow=Integer.MAX_VALUE;
long r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++maxDenominator;
double overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
a0=(overflow*serialVersionUID)+serialVersionUID;
double overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++maxDenominator;
long overflow=Integer.MAX_VALUE;
long r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
a0=(overflow*serialVersionUID)+serialVersionUID;
long overflow=Integer.MAX_VALUE;
long r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++maxDenominator;
a0=(overflow*serialVersionUID)+serialVersionUID;
long overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++maxDenominator;
double overflow=Integer.MAX_VALUE;
long r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
a0=(overflow*serialVersionUID)+serialVersionUID;
double overflow=Integer.MAX_VALUE;
long r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++maxDenominator;
a0=(overflow*serialVersionUID)+serialVersionUID;
double overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++maxDenominator;
a0=(overflow*serialVersionUID)+serialVersionUID;
long overflow=Integer.MAX_VALUE;
long r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++maxDenominator;
a0=(overflow*serialVersionUID)+serialVersionUID;
double overflow=Integer.MAX_VALUE;
long r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0)>overflow){
throw new FractionConversionException(value,a0,1l);
}
long overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long overflow=Integer.MAX_VALUE;
double r0=p;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long overflow=Integer.MAX_VALUE;
double r0=n;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long overflow=Integer.MAX_VALUE;
double r0=value;
int a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long overflow=Integer.MAX_VALUE;
double r0=a;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(r0-floor(value)>0.5){
if(floor(value)==-1.0){
return -0.0;
}
return y+1.0;
}
long overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
value=FastMath.nextAfter(unscaled,Double.NEGATIVE_INFINITY);
long overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(r0>0.5){
value=FastMath.ceil(unscaled);
}else {
unscaled=FastMath.floor(unscaled);
}
long overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
value=FastMath.nextAfter(unscaled,Double.POSITIVE_INFINITY);
long overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(r0>=0.5){
value=FastMath.ceil(unscaled);
}else {
unscaled=FastMath.floor(unscaled);
}
long overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long overflow=Integer.MAX_VALUE;
double r0=meanPoisson;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long overflow=Integer.MAX_VALUE;
double r0=lambda;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(r0>value||x<-value){
continue;
}
long overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
value=r0<0?FastMath.floor(x):FastMath.ceil(x);
long overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isInfinite(r0)){
throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_VALUE_CONVERSION);
}
long overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long overflow=value;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new StringBuilder().append('(');
long overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new StringBuilder().append(r0);
long overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new StringBuilder().append(')');
long overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new StringBuilder().append('(');
int overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new StringBuilder().append(')');
int overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new StringBuilder().append('(');
new StringBuilder().append(')');
long overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new StringBuilder().append('(');
new StringBuilder().append(')');
int overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long overflow=Double.NaN;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxDenominator<1){
throw new MathIllegalStateException(LocalizedFormats.CANNOT_SUBSTITUTE_ELEMENT_FROM_EMPTY_ARRAY);
}
long overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long overflow=Integer.MAX_VALUE;
double r0=start;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long overflow=c.length;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkMatrixIndex(this,maxDenominator,maxDenominator);
long overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int overflow=Integer.MAX_VALUE;
double r0=start;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.fraction.BigFraction,273
org.apache.commons.math3.fraction.BigFraction,274
========
double r0=MAX_VALUE;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long r0=MAX_VALUE;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if((a0>overflow)||(serialVersionUID>overflow)){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(p2>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>q2){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,serialVersionUID);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if((a0>overflow)||(serialVersionUID>overflow)){
throw new FractionConversionException(value,a0,serialVersionUID);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>epsilon){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
numerator=BigInteger.valueOf(a0);
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
denominator=BigInteger.ONE;
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>epsilon){
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>epsilon){
numerator=BigInteger.valueOf(a0);
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>epsilon){
denominator=BigInteger.ONE;
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
numerator=BigInteger.valueOf(a0);
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
denominator=BigInteger.ONE;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
numerator=BigInteger.valueOf(a0);
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>epsilon){
numerator=BigInteger.valueOf(a0);
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>epsilon){
denominator=BigInteger.ONE;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>epsilon){
numerator=BigInteger.valueOf(a0);
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>epsilon){
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
numerator=BigInteger.valueOf(a0);
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>epsilon){
numerator=BigInteger.valueOf(a0);
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>epsilon){
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
if(FastMath.abs(a0-value)<epsilon){
this.numerator=(int)a0;
this.denominator=1;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
this.numerator=(int)a0;
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
this.denominator=1;
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
this.numerator=(int)a0;
this.denominator=1;

throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=unscaled;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(fraction>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
r0=FastMath.nextAfter(unscaled,Double.NEGATIVE_INFINITY);
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
r0=FastMath.nextAfter(unscaled,Double.POSITIVE_INFINITY);
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=unscaled;
long a0=(long)FastMath.floor(r0);
if(fraction>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=x;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=y;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(d>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
if(floor(r0)==-1.0){
return -0.0;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
return floor(r0)+1.0;
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
if(maxDenominator<67){
return binomialCoefficient(n,maxDenominator);
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(epsilon>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(epsilon>q2){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(sign>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new NotPositiveException(LocalizedFormats.FACTORIAL_NEGATIVE_PARAMETER,maxDenominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxDenominator<21){
return FACTORIALS[n];
}
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=lastTime;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=h;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(length>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(value)){
throw new MathIllegalArgumentException(LocalizedFormats.NAN_VALUE_CONVERSION);
}
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isInfinite(value)){
throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_VALUE_CONVERSION);
}
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(value)){
throw new MathIllegalArgumentException(LocalizedFormats.NAN_VALUE_CONVERSION);
}
long r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isInfinite(value)){
throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_VALUE_CONVERSION);
}
long r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(value)){
throw new MathIllegalArgumentException(LocalizedFormats.NAN_VALUE_CONVERSION);
}
if(Double.isInfinite(value)){
throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_VALUE_CONVERSION);
}
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(value)){
throw new MathIllegalArgumentException(LocalizedFormats.NAN_VALUE_CONVERSION);
}
if(Double.isInfinite(value)){
throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_VALUE_CONVERSION);
}
long r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new NumberIsTooLargeException(maxDenominator,maxDenominator,false);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
this(maxDenominator,maxDenominator,value);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=scalRelativeTolerance;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>internalArray.length){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>length){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
maxDenominator+=1;
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(shouldContract()){
contract();
}
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>value){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double r0=end;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=start;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=step;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=length;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>=overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(maxDenominator<0){
throw new ArrayIndexOutOfBoundsException(index);
}
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(maxDenominator+1>maxDenominator){
numElements=index+1;
}
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>=internalArray.length){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>=length){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case BigDecimal.ROUND_HALF_UP :

double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int r0=end;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int r0=start;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int r0=step;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.fraction.BigFraction,275
========
if((a0>overflow)||(serialVersionUID>overflow)){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(p2>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>q2){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>overflow){
throw new FractionConversionException(value,a0,serialVersionUID);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((a0>overflow)||(serialVersionUID>overflow)){
throw new FractionConversionException(value,a0,serialVersionUID);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a0>overflow){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a0>epsilon){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a0>overflow){
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a0>overflow){
numerator=BigInteger.valueOf(a0);
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a0>overflow){
denominator=BigInteger.ONE;
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a0>overflow){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a0>epsilon){
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a0>epsilon){
numerator=BigInteger.valueOf(a0);
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a0>epsilon){
denominator=BigInteger.ONE;
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a0>epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a0>overflow){
numerator=BigInteger.valueOf(a0);
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>overflow){
denominator=BigInteger.ONE;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>overflow){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>overflow){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a0>overflow){
numerator=BigInteger.valueOf(a0);
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>overflow){
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>epsilon){
numerator=BigInteger.valueOf(a0);
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>epsilon){
denominator=BigInteger.ONE;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a0>epsilon){
numerator=BigInteger.valueOf(a0);
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>epsilon){
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>overflow){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>overflow){
numerator=BigInteger.valueOf(a0);
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>overflow){
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>overflow){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>epsilon){
numerator=BigInteger.valueOf(a0);
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>epsilon){
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>overflow){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>overflow){
if(FastMath.abs(a0-value)<epsilon){
this.numerator=(int)a0;
this.denominator=1;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>overflow){
this.numerator=(int)a0;
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>overflow){
this.denominator=1;
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>overflow){
this.numerator=(int)a0;
this.denominator=1;

throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(epsilon>q2){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>overflow){
throw new NumberIsTooLargeException(maxDenominator,maxDenominator,false);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this(maxDenominator,maxDenominator,value);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>value){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a0>overflow){
throw new MathIllegalStateException(LocalizedFormats.CANNOT_SUBSTITUTE_ELEMENT_FROM_EMPTY_ARRAY);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>=overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a0>internalArray.length){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>length){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.fraction.BigFraction,281
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(overflow);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(r0<epsilon*r0){
break;
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
maxDenominator--;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon*value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<s){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<delta){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<=epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<TINY+EPS*value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<TINY){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<EPS){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<t){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<threshold){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<largest){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
largest=FastMath.abs(epsilon);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<p){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
d=r0;
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q0=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q1=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<functionValueAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxDenominator>=25326001){
maxDenominator=4;
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<maxAbsoluteValue){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
shift.x=0.75*epsilon;
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
shift.y=0.75*epsilon;
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
shift.x=0.75*epsilon;
shift.y=0.75*epsilon;

denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q0=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q1=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q0=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q1=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q0=overflow;
q1=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q0=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q0=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q1=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q1=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
q0=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
q1=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q0=overflow;
q1=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q0=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q0=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q1=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q1=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q0=overflow;
q1=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q0=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q0=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q1=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q1=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q0=overflow;
q1=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q0=overflow;
q1=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q0=overflow;
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q1=overflow;
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
q0=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
q0=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
q1=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
q1=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q0=overflow;
q1=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q0=overflow;
q1=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q0=overflow;
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q1=overflow;
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q0=overflow;
q1=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q0=overflow;
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q1=overflow;
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q0=overflow;
q1=overflow;
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(value-1.0)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
r0=r0;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
r0=r0;
if(FastMath.abs(a0-value)<functionValueAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(computeObjectiveValue(r0-epsilon))<=value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(computeObjectiveValue(r0-epsilon))<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(r0-epsilon-r0)<=FastMath.max(r0*FastMath.abs(r0-epsilon),r0)){
return x;
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<=value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<=functionValueAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<relativeTolerance){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ZERO;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0).valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.multiply(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0).valueOf(a0);
denominator=BigInteger.ZERO;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(r0-epsilon)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<mainSetDimension){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.sqrt(FastMath.abs(r0-r0*meanX))<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.sqrt(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<accuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<difference){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<tol1){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<tol){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon)<value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<cutOff){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(r0-epsilon)<=value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<absoluteAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(r0-epsilon)<=epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(r0-epsilon)<value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon-value)<=r0){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<r0){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon-value)<=epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<=r0){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<=threshold){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon-value)<r0){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon-value)<threshold){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon-value)<=threshold){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<ONE_OVER_FOUR){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
vlag=ONE_OVER_FOUR;
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon)<=value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon)<=epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon)<functionValueAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon)<=functionValueAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<ftol){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<singularityThreshold){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<convergence){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<Precision.EPSILON*value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<EPSILON){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<=maxAbsoluteValue){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<=Precision.EPSILON*value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<=EPSILON){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon)<accuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon)<threshold){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon)<=threshold){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<temp){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<parRelativeTolerance){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<xNorm){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.isNaN(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<parl){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<fp){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<previousFP){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon-r0)<=value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon-r0)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon-r0)<=epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<=absoluteAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon-r0)<value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon-r0)<absoluteAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon-r0)<=absoluteAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<cgnorm){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<maxDelta){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<rho){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
r0=Math.abs(r0);
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
r0=r0;
r0=Math.abs(r0);
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<standardDeviation){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<shape){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(maxDenominator)==maxDenominator){
return ;
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<stopTolX){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<limit){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsa){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
setCost(r0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(ArithmeticUtils.mulAndCheck(maxDenominator/gcd(a,maxDenominator),b))==Integer.MIN_VALUE){
throw new MathArithmeticException(LocalizedFormats.LCM_OVERFLOW_32_BITS,maxDenominator,maxDenominator);
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(ArithmeticUtils.mulAndCheck(a0/gcd(a,overflow),b))==Long.MIN_VALUE){
throw new MathArithmeticException(LocalizedFormats.LCM_OVERFLOW_64_BITS,a0,overflow);
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<ratio){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<hyperplaneThickness){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(numerator.equals(BigInteger.ZERO)||fraction.numerator.equals(BigInteger.ZERO)){
return ZERO;
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<Precision.SAFE_MIN){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<SAFE_MIN){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<ANY_SIDE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.doubleToLongBits(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<max){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(BigInteger.ZERO.equals(denominator)){
throw new MathArithmeticException(LocalizedFormats.ZERO_DENOMINATOR);
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<length){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<ztest){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this(maxDenominator,maxDenominator,value);
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
maxDenominator+=1;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(shouldContract()){
contract();
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxDenominator+1>maxDenominator){
numElements=index+1;
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((maxDenominator+maxDenominator)>=internalArray.length){
expandTo(startIndex+(index+1));
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Precision.compareTo(value,0.0,epsilon)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<this.epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
d[m]=r0*X;
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
r[m1]=1.0/X;
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
rhs[m]=rhs[m]/X;
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
d[m]=r0*X;
r[m1]=1.0/X;
rhs[m]=rhs[m]/X;

denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxDenominator==Integer.MAX_VALUE){
return 1;
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=value;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=epsilon;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=value;
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=epsilon;
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
epsilon=value;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
epsilon=epsilon;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=value;
epsilon=epsilon;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
epsilon=value;
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
epsilon=epsilon;
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=value;
epsilon=epsilon;
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
epsilon=value;
epsilon=epsilon;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
epsilon=value;
epsilon=epsilon;
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(value)<tol1){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
r0=r0;
if(FastMath.abs(a0-value)<rho){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
r0=Math.abs(r0);
if(FastMath.abs(a0-value)<rho){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
r0=r0;
r0=Math.abs(r0);
if(FastMath.abs(a0-value)<rho){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(r0-epsilon)<absoluteAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(r0-epsilon)<=absoluteAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<ONE_OVER_FOUR){
numerator=BigInteger.valueOf(a0);
vlag=ONE_OVER_FOUR;
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.fraction.BigFraction,287
========
if(r0<epsilon*r0){
break;
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
maxDenominator--;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(p0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
if(FastMath.abs(a0-value)<epsilon){
this.numerator=(int)a0;
this.denominator=1;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon*value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<s){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<=epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<TINY+EPS*value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<TINY){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<EPS){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<t){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<threshold){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<delta){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q0=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q1=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q0=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q1=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q0=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q1=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q0=overflow;
q1=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q0=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q0=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q1=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q1=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
q0=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
q1=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q0=overflow;
q1=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q0=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q0=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q1=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q1=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q0=overflow;
q1=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q0=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q0=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q1=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q1=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q0=overflow;
q1=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q0=overflow;
q1=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q0=overflow;
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q1=overflow;
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
q0=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
q0=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
q1=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
q1=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q0=overflow;
q1=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q0=overflow;
q1=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q0=overflow;
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q1=overflow;
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q0=overflow;
q1=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q0=overflow;
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q1=overflow;
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q0=overflow;
q1=overflow;
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
double p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
if(FastMath.abs(r0)<FastMath.abs(r0)){
r0=r0;
b=r0;
c=a;
r0=fb;
fb=fc;
fc=fa;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
shift.exShift+=shift.x;
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
shift.x=0.75*epsilon;
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
shift.w=-0.4375*epsilon;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
shift.exShift+=shift.x;
shift.x=0.75*epsilon;
shift.w=-0.4375*epsilon;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<p){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<largest){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<b){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<u){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<tol2){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<m){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<maxAbsoluteValue){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<maxDelta){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<relativeTolerance){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(computeObjectiveValue(r0-epsilon))<=value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(computeObjectiveValue(r0-epsilon))<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<functionValueAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(r0-epsilon-r0)<=FastMath.max(r0*FastMath.abs(r0-epsilon),r0)){
return x;
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<=value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(value-1.0)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ZERO;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0).valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.multiply(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0).valueOf(a0);
denominator=BigInteger.ZERO;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(r0-epsilon)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<mainSetDimension){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(r0-r0)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.sqrt(FastMath.abs(r0-r0*meanX))<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.sqrt(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<accuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<difference){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=maxDenominator;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
double p0=maxDenominator;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon)<value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<cutOff){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<tol1){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<tol){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
if(FastMath.abs(epsilon)>=1.0){
return 0.0;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
double p0=1;
double q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
double q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<Precision.EPSILON*value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<EPSILON){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<=maxAbsoluteValue){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<=Precision.EPSILON*value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<=EPSILON){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<ONE_OVER_FOUR){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<singularityThreshold){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
singular=true;
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<convergence){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(r0-epsilon)<=value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<absoluteAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(r0-epsilon)<=epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(r0-epsilon)<value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon-value)<=r0){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<r0){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon-value)<=epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<=r0){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<=threshold){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon-value)<r0){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon-value)<threshold){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon-value)<=threshold){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon)<=value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon)<=epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon)<threshold){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon)<=threshold){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<=functionValueAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon)<functionValueAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon)<=functionValueAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<ftol){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<temp){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<parRelativeTolerance){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<xNorm){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<parl){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<fp){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<previousFP){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon)<accuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<=epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
double p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<threshold){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
double p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<=threshold){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
double p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
boolean p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<imaginary){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value>=0.0){
return createComplex(FastMath.sqrt((FastMath.abs(value)+abs())/2.0),value/(2.0*t));
}else {
return createComplex(FastMath.abs(imaginary)/(2.0*t),FastMath.copySign(1.0,imaginary)*t);
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=Math.abs((r0-r0)*(r0-value)-(r0-r0)*(r0-epsilon))<EPS_MIN?1:0;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<standardDeviation){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<shape){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.isNaN(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
pendingEvent=true;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
ta=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=FastMath.max(1,(int)FastMath.ceil(FastMath.abs(r0-value)/epsilon));
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
if(FastMath.abs(r0-value)<r0){
return false;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
double p0=FastMath.max(1,(int)FastMath.ceil(FastMath.abs(r0-value)/epsilon));
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=FastMath.abs(maxDenominator);
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
if(FastMath.abs(maxDenominator)==maxDenominator){
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
double p0=FastMath.abs(maxDenominator);
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon-r0)<=value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon-r0)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon-r0)<=epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<=absoluteAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon-r0)<value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon-r0)<absoluteAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon-r0)<=absoluteAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<cgnorm){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<stopTolX){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
int p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=denominator.intValue();
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsa){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
if(maxDenominator<0){
xInt=SGN_MASK_FLOAT-xInt;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
if(maxDenominator<0){
yInt=SGN_MASK_FLOAT-yInt;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
boolean p0=maxDenominator;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
if(Double.doubleToLongBits(epsilon)<0){
xInt=SGN_MASK-xInt;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
if(Double.doubleToLongBits(epsilon)<0){
yInt=SGN_MASK-yInt;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(ArithmeticUtils.mulAndCheck(maxDenominator/gcd(a,maxDenominator),b))==Integer.MIN_VALUE){
throw new MathArithmeticException(LocalizedFormats.LCM_OVERFLOW_32_BITS,maxDenominator,maxDenominator);
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(p0==Long.MIN_VALUE){
throw new MathArithmeticException(LocalizedFormats.LCM_OVERFLOW_64_BITS,a0,overflow);
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++maxDenominator;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p0=(q0*overflow)+p0;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
a0=(q0*overflow)+overflow;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<ratio){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=(denominator.mod(BigInteger.valueOf(maxDenominator)).intValue()==0)?1:0;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(denominator.divide(BigInteger.valueOf((denominator.mod(BigInteger.valueOf(maxDenominator)).intValue()==0)?maxDenominator:ArithmeticUtils.gcd(tmodd1,d1))).bitLength()>31){
throw new MathArithmeticException(LocalizedFormats.NUMERATOR_OVERFLOW_AFTER_MULTIPLY,w);
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
int p0=maxDenominator;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<hyperplaneThickness){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<Precision.SAFE_MIN){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<SAFE_MIN){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(numerator.equals(BigInteger.ZERO)||fraction.numerator.equals(BigInteger.ZERO)){
return ZERO;
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=maxDenominator;
long q0=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=maxDenominator;
double q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
double p0=1;
long q0=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
double q0=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
double p0=maxDenominator;
long q0=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=maxDenominator;
double q0=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
double p0=maxDenominator;
double q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
double p0=1;
double q0=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
double p0=maxDenominator;
double q0=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<max){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.doubleToLongBits(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<ANY_SIDE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<length){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(BigInteger.ZERO.equals(denominator)){
throw new MathArithmeticException(LocalizedFormats.ZERO_DENOMINATOR);
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<ztest){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this(maxDenominator,maxDenominator,value);
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
maxDenominator+=1;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(shouldContract()){
contract();
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Precision.compareTo(value,0.0,epsilon)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxDenominator+1>maxDenominator){
numElements=index+1;
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((maxDenominator+maxDenominator)>=internalArray.length){
expandTo(startIndex+(index+1));
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxDenominator==Integer.MAX_VALUE){
return 1;
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
if(Double.isInfinite(log(r0,new double[2]))){
return lores;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<a){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<this.epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=value;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=epsilon;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
q0=new LineSearch(epsilon,epsilon);
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=value;
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=epsilon;
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
q0=new LineSearch(epsilon,epsilon);
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
epsilon=value;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
epsilon=epsilon;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
q0=new LineSearch(epsilon,epsilon);
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=value;
epsilon=epsilon;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=value;
q0=new LineSearch(epsilon,epsilon);
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=epsilon;
q0=new LineSearch(epsilon,epsilon);
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
epsilon=value;
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
epsilon=epsilon;
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
q0=new LineSearch(epsilon,epsilon);
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=value;
epsilon=epsilon;
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=value;
q0=new LineSearch(epsilon,epsilon);
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=epsilon;
q0=new LineSearch(epsilon,epsilon);
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
epsilon=value;
epsilon=epsilon;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
epsilon=value;
q0=new LineSearch(epsilon,epsilon);
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
epsilon=epsilon;
q0=new LineSearch(epsilon,epsilon);
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=value;
epsilon=epsilon;
q0=new LineSearch(epsilon,epsilon);
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
epsilon=value;
epsilon=epsilon;
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
epsilon=value;
q0=new LineSearch(epsilon,epsilon);
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
epsilon=epsilon;
q0=new LineSearch(epsilon,epsilon);
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=value;
epsilon=epsilon;
q0=new LineSearch(epsilon,epsilon);
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
epsilon=value;
epsilon=epsilon;
q0=new LineSearch(epsilon,epsilon);
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
q0=epsilon;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
q0=epsilon;
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
q0=epsilon;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=value;
q0=epsilon;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
q0=epsilon;
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=value;
q0=epsilon;
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
epsilon=value;
q0=epsilon;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
epsilon=value;
q0=epsilon;
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(value)<tol1){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(r0-epsilon)<absoluteAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(r0-epsilon)<=absoluteAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
double p0=Math.abs((r0-r0)*(r0-value)-(r0-r0)*(r0-epsilon))<EPS_MIN?1:0;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.fraction.BigFraction,288
========
long p0=1;
long q0=0;
long p1=r0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p0=1;
long q0=0;
double p1=a0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p0=1;
long q0=0;
++maxDenominator;
long p1=a0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p1=(p0*a0)+p0;
long p0=1;
long q0=0;
long p1=a0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p0=1;
long q0=0;
double p1=r0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p0=1;
long q0=0;
++maxDenominator;
long p1=r0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p1=(p0*a0)+p0;
long p0=1;
long q0=0;
long p1=r0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p0=1;
long q0=0;
++maxDenominator;
double p1=a0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p1=(p0*a0)+p0;
long p0=1;
long q0=0;
double p1=a0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p1=(p0*a0)+p0;
long p0=1;
long q0=0;
++maxDenominator;
long p1=a0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p0=1;
long q0=0;
++maxDenominator;
double p1=r0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p1=(p0*a0)+p0;
long p0=1;
long q0=0;
double p1=r0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p1=(p0*a0)+p0;
long p0=1;
long q0=0;
++maxDenominator;
long p1=r0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p1=(p0*a0)+p0;
long p0=1;
long q0=0;
++maxDenominator;
double p1=a0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p1=(p0*a0)+p0;
long p0=1;
long q0=0;
++maxDenominator;
double p1=r0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p0=1;
long q0=0;
long p1=value;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(p1>overflow){
throw new FractionConversionException(value,a0,1l);
}
long p0=1;
long q0=0;
long p1=a0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(p1)>overflow){
throw new FractionConversionException(value,a0,1l);
}
long p0=1;
long q0=0;
long p1=a0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p0=1;
long q0=0;
double p1=value;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.fraction.BigFraction,289
========
long q0=0;
long p1=r0;
long q1=1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long q0=0;
double p1=a0;
long q1=1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long q0=0;
++maxDenominator;
long p1=a0;
long q1=1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p1=(q1*p1)+p0;
long q0=0;
long p1=a0;
long q1=1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long q0=0;
double p1=r0;
long q1=1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long q0=0;
++maxDenominator;
long p1=r0;
long q1=1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p1=(q1*p1)+p0;
long q0=0;
long p1=r0;
long q1=1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long q0=0;
++maxDenominator;
double p1=a0;
long q1=1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p1=(q1*p1)+p0;
long q0=0;
double p1=a0;
long q1=1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p1=(q1*p1)+p0;
long q0=0;
++maxDenominator;
long p1=a0;
long q1=1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long q0=0;
++maxDenominator;
double p1=r0;
long q1=1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p1=(q1*p1)+p0;
long q0=0;
double p1=r0;
long q1=1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p1=(q1*p1)+p0;
long q0=0;
++maxDenominator;
long p1=r0;
long q1=1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p1=(q1*p1)+p0;
long q0=0;
++maxDenominator;
double p1=a0;
long q1=1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p1=(q1*p1)+p0;
long q0=0;
++maxDenominator;
double p1=r0;
long q1=1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long q0=0;
long p1=value;
long q1=1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(q1>overflow){
throw new FractionConversionException(value,a0,1l);
}
long q0=0;
long p1=a0;
long q1=1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(q1)>overflow){
throw new FractionConversionException(value,a0,1l);
}
long q0=0;
long p1=a0;
long q1=1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long q0=0;
double p1=value;
long q1=1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.fraction.BigFraction,290
========
long p1=r0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double p1=a0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++maxDenominator;
long p1=a0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(q1*p1)+p0;
long p1=a0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double p1=r0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++maxDenominator;
long p1=r0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(q1*p1)+p0;
long p1=r0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++maxDenominator;
double p1=a0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(q1*p1)+p0;
double p1=a0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++maxDenominator;
p2=(q1*p1)+p0;
long p1=a0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++maxDenominator;
double p1=r0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(q1*p1)+p0;
double p1=r0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++maxDenominator;
p2=(q1*p1)+p0;
long p1=r0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++maxDenominator;
p2=(q1*p1)+p0;
double p1=a0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++maxDenominator;
p2=(q1*p1)+p0;
double p1=r0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p1=p2;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p1=q2;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
q1=(a0*q1)+q0;
long p1=a0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((p1>overflow)||(q1>overflow)){
throw new FractionConversionException(value,p2,q2);
}
long p1=a0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(p1)>overflow)||(FastMath.abs(q1)>overflow)){
throw new FractionConversionException(value,p2,q2);
}
long p1=a0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double p1=p2;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
q1=(a0*q1)+q0;
long p1=p2;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double p1=q2;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
q1=(a0*q1)+q0;
long p1=q2;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
q1=(a0*q1)+q0;
double p1=a0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
q1=(a0*q1)+q0;
double p1=p2;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
q1=(a0*q1)+q0;
double p1=q2;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p1=value;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(p2>overflow){
throw new FractionConversionException(value,a0,1l);
}
long p1=a0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(p2)>overflow){
throw new FractionConversionException(value,a0,1l);
}
long p1=a0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double p1=value;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.fraction.BigFraction,292
org.apache.commons.math3.fraction.BigFraction,293
UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

========
long p2=0;
long q2=1;
long n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x.length<3){
throw new NumberIsTooSmallException(LocalizedFormats.NUMBER_OF_POINTS,x.length,3,true);
}
long p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x.length<2){
throw new NumberIsTooSmallException(LocalizedFormats.NUMBER_OF_POINTS,x.length,2,true);
}
long p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=0;
int q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=0;
int q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
assert b.length == n;

long p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=0;
double q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Precision.equals(value,0.0,value)){
hPrev=small;
}
long p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==0){
throw new NoDataException(LocalizedFormats.POLYNOMIAL);
}
long p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=0;
long q2=maxDenominator;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int p2=0;
long q2=maxDenominator;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=0;
int q2=maxDenominator;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=0;
int q2=maxDenominator;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=maxDenominator;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((int)(value*maxDenominator)<2){
throw new NumberIsTooSmallException(LocalizedFormats.BANDWIDTH,bandwidthInPoints,2,true);
}
long p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=maxDenominator;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=maxDenominator;
double q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isPrime(n)){
return n;
}
long p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(0==n%3){
n+=2;
}else if(1==rem){
n+=4;
}
long p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=maxDenominator;
long q2=maxDenominator;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(maxDenominator-maxDenominator*value>=1){
throw new NumberIsTooLargeException(hDouble,1.0,false);
}
long p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=0;
double q2=maxDenominator;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=0;
double q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=maxDenominator;
long q2=maxDenominator;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=maxDenominator;
double q2=maxDenominator;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=maxDenominator;
double q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=0;
double q2=maxDenominator;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=maxDenominator;
double q2=maxDenominator;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxDenominator<=1&&maxDenominator==4*mant.length-3){
return super.round(maxDenominator);
}
long p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=0;
long q2=((int)(q1>>>52))&0x7ff;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int p2=0;
long q2=((int)(q1>>>52))&0x7ff;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=0;
int q2=((int)(q1>>>52))&0x7ff;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=0;
int q2=((int)(q1>>>52))&0x7ff;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=maxDenominator;
long q2=maxDenominator;
int n=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long p2=0;
long q2=maxDenominator;
int n=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long p2=0;
long q2=1;
int n=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long p2=maxDenominator;
long q2=1;
int n=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long p2=maxDenominator;
int q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=0;
long q2=1;
int n=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=0;
int q2=1;
int n=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=maxDenominator;
int q2=maxDenominator;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=maxDenominator;
long q2=1;
int n=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=maxDenominator;
int q2=1;
int n=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=maxDenominator;
int q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=0;
long q2=maxDenominator;
int n=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=0;
int q2=maxDenominator;
int n=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=0;
int q2=1;
int n=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=maxDenominator;
long q2=maxDenominator;
int n=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=maxDenominator;
int q2=maxDenominator;
int n=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=maxDenominator;
int q2=maxDenominator;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=maxDenominator;
int q2=1;
int n=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=0;
int q2=maxDenominator;
int n=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=0;
long q2=maxDenominator-1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int p2=0;
long q2=maxDenominator-1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=0;
int q2=maxDenominator-1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=maxDenominator;
long q2=maxDenominator-1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int p2=0;
int q2=maxDenominator-1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=maxDenominator;
long q2=maxDenominator-1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=maxDenominator;
int q2=maxDenominator-1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=maxDenominator;
int q2=maxDenominator-1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!ArithmeticUtils.isPowerOfTwo(n)){
throw new MathIllegalArgumentException(LocalizedFormats.NOT_POWER_OF_TWO,Integer.valueOf(n));
}
long p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=(householderVectors.length>=n)?0:1;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=(householderVectors.length>=n)?0:0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!ArithmeticUtils.isPowerOfTwo(n)){
throw new MathIllegalArgumentException(LocalizedFormats.NOT_POWER_OF_TWO_PLUS_ONE,Integer.valueOf(f.length));
}
long p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=getEvaluations();
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=0;
long q2=getEvaluations();
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double p2=0;
double q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double p2=maxDenominator;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double p2=0;
long q2=maxDenominator;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double p2=maxDenominator;
long q2=maxDenominator;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double p2=maxDenominator;
double q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double p2=0;
double q2=maxDenominator;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double p2=maxDenominator;
double q2=maxDenominator;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n!=sample2.length){
throw new DimensionMismatchException(n,sample2.length);
}
long p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(value)<value){
return false;
}
long p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxDenominator<=0){
throw new NotStrictlyPositiveException(n);
}
long p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
printMethod();
long p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=0;
long q2=1;
int n=maxDenominator+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long p2=maxDenominator;
long q2=1;
int n=maxDenominator+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long p2=0;
long q2=maxDenominator;
int n=maxDenominator+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int p2=0;
long q2=1;
int n=maxDenominator+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=0;
int q2=1;
int n=maxDenominator+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=maxDenominator;
long q2=maxDenominator;
int n=maxDenominator+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int p2=maxDenominator;
long q2=1;
int n=maxDenominator+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=maxDenominator;
int q2=1;
int n=maxDenominator+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=0;
long q2=maxDenominator;
int n=maxDenominator+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=0;
int q2=maxDenominator;
int n=maxDenominator+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=0;
int q2=1;
int n=maxDenominator+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=maxDenominator;
long q2=maxDenominator;
int n=maxDenominator+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=maxDenominator;
int q2=maxDenominator;
int n=maxDenominator+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=maxDenominator;
int q2=1;
int n=maxDenominator+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=0;
int q2=maxDenominator;
int n=maxDenominator+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
maxDenominator=(int)(q2%maxDenominator);
long p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(0==maxDenominator){
return gcdPositive(FastMath.abs((int)q1),maxDenominator);
}
long p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value>=value){
throw new NumberIsTooLargeException(min,max,false);
}
long p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=FastMath.max(0,maxDenominator+1-maxDenominator);
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double p2=FastMath.max(0,maxDenominator+1-maxDenominator);
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=FastMath.max(0,maxDenominator+1-maxDenominator);
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=BlockRealMatrix.BLOCK_SIZE;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkIndex(maxDenominator+maxDenominator-1);
long p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkIndex(maxDenominator+maxDenominator-1);
long p2=maxDenominator;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkIndex(maxDenominator+maxDenominator-1);
int p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkIndex(maxDenominator+maxDenominator-1);
int p2=maxDenominator;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
printMethod();
long p2=maxDenominator;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
printMethod();
int p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
printMethod();
int p2=maxDenominator;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=getEvaluations();
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=0;
long q2=getEvaluations();
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=getEvaluations();
int q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=0;
int q2=getEvaluations();
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=getEvaluations();
long q2=getEvaluations();
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=maxDenominator;
long q2=getEvaluations();
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=getEvaluations();
int q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=0;
int q2=getEvaluations();
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=getEvaluations();
long q2=getEvaluations();
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=maxDenominator;
long q2=getEvaluations();
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=getEvaluations();
int q2=getEvaluations();
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=maxDenominator;
int q2=getEvaluations();
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=getEvaluations();
int q2=getEvaluations();
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=maxDenominator;
int q2=getEvaluations();
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
char p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!ArithmeticUtils.isPowerOfTwo(n)){
throw new MathIllegalArgumentException(LocalizedFormats.NOT_POWER_OF_TWO,Integer.valueOf(n));
}
int p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.fraction.BigFraction,295
UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

========
long q2=1;
long n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x.length<3){
throw new NumberIsTooSmallException(LocalizedFormats.NUMBER_OF_POINTS,x.length,3,true);
}
long q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x.length<2){
throw new NumberIsTooSmallException(LocalizedFormats.NUMBER_OF_POINTS,x.length,2,true);
}
long q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
assert b.length == n;

long q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long q2=1;
double n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Precision.equals(value,0.0,value)){
hPrev=small;
}
long q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int q2=1;
double n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==0){
throw new NoDataException(LocalizedFormats.POLYNOMIAL);
}
long q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((int)(value*n)<2){
throw new NumberIsTooSmallException(LocalizedFormats.BANDWIDTH,bandwidthInPoints,2,true);
}
long q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isPrime(n)){
return n;
}
long q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(0==n%3){
n+=2;
}else if(1==rem){
n+=4;
}
long q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n-n*value>=1){
throw new NumberIsTooLargeException(hDouble,1.0,false);
}
long q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n<=1&&n==4*mant.length-3){
return super.round(n);
}
long q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long q2=1;
int n=((int)(q1>>>52))&0x7ff;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int q2=1;
int n=((int)(q1>>>52))&0x7ff;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long q2=maxDenominator;
int n=maxDenominator;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long q2=maxDenominator;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long q2=1;
int n=maxDenominator;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int q2=maxDenominator;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int q2=1;
int n=maxDenominator;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int q2=maxDenominator;
int n=maxDenominator;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long q2=1;
int n=n-1;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long q2=1;
int n=Integer.numberOfTrailingZeros(n-1);
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!ArithmeticUtils.isPowerOfTwo(n)){
throw new MathIllegalArgumentException(LocalizedFormats.NOT_POWER_OF_TWO,Integer.valueOf(n));
}
long q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long q2=(householderVectors.length>=n)?1:1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long q2=(householderVectors.length>=n)?1:0;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!ArithmeticUtils.isPowerOfTwo(n)){
throw new MathIllegalArgumentException(LocalizedFormats.NOT_POWER_OF_TWO_PLUS_ONE,Integer.valueOf(f.length));
}
long q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long q2=getEvaluations();
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long q2=1;
int n=getEvaluations();
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double q2=1;
double n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n!=sample2.length){
throw new DimensionMismatchException(n,sample2.length);
}
long q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(value)<value){
return false;
}
long q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n<=0){
throw new NotStrictlyPositiveException(n);
}
long q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
printMethod();
long q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=(int)(q2%n);
long q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(0==n){
return gcdPositive(FastMath.abs((int)q1),n);
}
long q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value>=value){
throw new NumberIsTooLargeException(min,max,false);
}
long q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long q2=FastMath.max(0,n+1-n);
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long q2=BlockRealMatrix.BLOCK_SIZE;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkIndex(maxDenominator+n-1);
long q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkIndex(maxDenominator+n-1);
long q2=maxDenominator;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkIndex(maxDenominator+n-1);
int q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkIndex(maxDenominator+n-1);
int q2=maxDenominator;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
printMethod();
long q2=maxDenominator;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
printMethod();
int q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
printMethod();
int q2=maxDenominator;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int q2=getEvaluations();
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long q2=getEvaluations();
int n=getEvaluations();
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int q2=1;
int n=getEvaluations();
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int q2=getEvaluations();
int n=getEvaluations();
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
char q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!ArithmeticUtils.isPowerOfTwo(n)){
throw new MathIllegalArgumentException(LocalizedFormats.NOT_POWER_OF_TWO,Integer.valueOf(n));
}
int q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.fraction.BigFraction,296
org.apache.commons.math3.fraction.BigFraction,298
UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

========
a1=((long)FastMath.floor(r1)*p1)+p0;
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++n;
 final double r1=1.0/(r0-a0);
 final int a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a1>a0){
throw new FractionConversionException(value,a0,1l);
}
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a1)>a0){
throw new FractionConversionException(value,a0,1l);
}
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++n;
 final int r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++n;
checkIndex(n+n-1);
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++n;
checkIndex(n+n-1);
 final int r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++n;
 final long r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=(int)(a1%n);
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(0==n){
return gcdPositive(FastMath.abs((int)q2),n);
}
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++n;
assert b.length == n;

 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Precision.equals(r1,0.0,value)){
dN=small;
}
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(r1>=1){
throw new NumberIsTooLargeException(hDouble,1.0,false);
}
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++sign;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++n;
 final double r1=1.0/(r0-a0);
if(n<=0){
throw new NotStrictlyPositiveException(n);
}
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++n;
 final double r1=1.0/(x-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.r1=new double[n];
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++n;
 final double r1=1.0/(r0-medianResidual);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++n;
 final double r1=1.0/(r0-a0);
n=smallTrialDivision(n,new ArrayList<Integer>(32));
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++n;
 final double r1=1.0/(r0-a0);
if(1==n){
return new ArrayList<Integer>(32);
}
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
boundedTrialDivision(n,r1,new ArrayList<Integer>(32));
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=n-(n-n)/n*n-n;
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n=n+(n-n)/n;
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>n){
 final int a1=n;
jpt=ipt-n;
ipt=tmp2;
}
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=n-(n-n)/n*n-n;
++n;
 final int r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=n+(n-n)/n;
++n;
 final int r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=n-(n-n)/n*n-n;
n=n+(n-n)/n;
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n=n-(n-n)/n*n-n;
n=n+(n-n)/n;
++n;
 final int r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
r1*=value;
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++initialTrustRegionRadius;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++t;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++n;
 final int r1=1.0/(r0-a0);
 final int a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++beta;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++sn;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++nact;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++alpha;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>n){
 final int a1=n;
jpt=ipt-n;
ipt=tmp2;
}
++n;
 final int r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=n-(n-n)/n*n-n;
if(n>n){
 final int a1=n;
jpt=ipt-n;
ipt=tmp2;
}
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=n+(n-n)/n;
if(n>n){
 final int a1=n;
jpt=ipt-n;
ipt=tmp2;
}
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=n-(n-n)/n*n-n;
if(n>n){
 final int a1=n;
jpt=ipt-n;
ipt=tmp2;
}
++n;
 final int r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=n+(n-n)/n;
if(n>n){
 final int a1=n;
jpt=ipt-n;
ipt=tmp2;
}
++n;
 final int r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=n-(n-n)/n*n-n;
n=n+(n-n)/n;
if(n>n){
 final int a1=n;
jpt=ipt-n;
ipt=tmp2;
}
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=n-(n-n)/n*n-n;
n=n+(n-n)/n;
if(n>n){
 final int a1=n;
jpt=ipt-n;
ipt=tmp2;
}
++n;
 final int r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a1==0){
throw new NoDataException(LocalizedFormats.POLYNOMIAL);
}
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.fraction.BigFraction,299
org.apache.commons.math3.fraction.BigFraction,300
========
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
q2=(a1*q1)+q0;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++n;
q2=(a1*q1)+q0;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double r1=1.0/(r0-a0);
 final int a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>a1){
throw new FractionConversionException(value,a0,1l);
}
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(p2)>a1){
throw new FractionConversionException(value,a0,1l);
}
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p1=p2;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
a1=q1;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
q1=q2;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p1=p2;
q1=q2;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p1=p2;
a1=q1;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
a1=q1;
q1=q2;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p1=p2;
a1=q1;
q1=q2;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.fraction.BigFraction,301
========
++n;
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final int a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a1>q1){
throw new FractionConversionException(value,a0,1l);
}
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final long a1=(long)FastMath.floor(r1);
if(r1>value||x<-value){
continue;
}
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(q2)>q1){
throw new FractionConversionException(value,a0,1l);
}
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.apache.commons.math3.fraction.BigFraction,302
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((FastMath.abs(p2)>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
if(FastMath.abs(q2-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
numerator=BigInteger.valueOf(q2);
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
denominator=BigInteger.ONE;
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
numerator=BigInteger.valueOf(q2);
if(FastMath.abs(q2-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
denominator=BigInteger.ONE;
if(FastMath.abs(q2-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;

if(FastMath.abs(q2-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
numerator=BigInteger.valueOf(q2);
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;
if(FastMath.abs(q2-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
numerator=BigInteger.valueOf(q2);
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;

if(FastMath.abs(q2-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;

if(FastMath.abs(q2-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;

if(FastMath.abs(q2-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if(n<0){
throw new ArrayIndexOutOfBoundsException(index);
}
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if(n+1>n){
numElements=index+1;
}
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n+=1;
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(shouldContract()){
contract();
}
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new MathIllegalStateException(LocalizedFormats.CANNOT_SUBSTITUTE_ELEMENT_FROM_EMPTY_ARRAY);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
MatrixUtils.checkRowIndex(this,n);
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
MatrixUtils.checkColumnIndex(this,n);
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
MatrixUtils.checkRowIndex(this,n);
MatrixUtils.checkColumnIndex(this,n);
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new NumberIsTooLargeException(n,n,false);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
this(n,n,value);
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)&&(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.apache.commons.math3.fraction.BigFraction,303
========
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(p2)>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((p2>overflow)||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((p2>overflow)&&(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&(FastMath.abs(value-value)>epsilon)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.BigFractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
Failing tests: 0
TESTING : math_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
Failing tests: 0
Successfully repair!
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
IN COMMENT TEST CASE: org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8
IN COMMENT TEST CASE: org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
IN COMMENT TEST CASE: /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy/src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java

# FAILING TESTS: 1
TIMEOUT : 9000000
===========
locations= [<org.apache.commons.math3.fraction.FractionConversionException,53>, <org.apache.commons.math3.fraction.FractionConversionException,54>, <org.apache.commons.math3.exception.ConvergenceException,48>, <org.apache.commons.math3.exception.ConvergenceException,49>, <org.apache.commons.math3.exception.ConvergenceException,50>, <org.apache.commons.math3.fraction.BigFraction,271>, <org.apache.commons.math3.fraction.BigFraction,272>, <org.apache.commons.math3.fraction.BigFraction,273>, <org.apache.commons.math3.fraction.BigFraction,274>, <org.apache.commons.math3.fraction.BigFraction,275>, <org.apache.commons.math3.fraction.BigFraction,281>, <org.apache.commons.math3.fraction.BigFraction,287>, <org.apache.commons.math3.fraction.BigFraction,288>, <org.apache.commons.math3.fraction.BigFraction,289>, <org.apache.commons.math3.fraction.BigFraction,290>, <org.apache.commons.math3.fraction.BigFraction,292>, <org.apache.commons.math3.fraction.BigFraction,293>, <org.apache.commons.math3.fraction.BigFraction,295>, <org.apache.commons.math3.fraction.BigFraction,296>, <org.apache.commons.math3.fraction.BigFraction,298>, <org.apache.commons.math3.fraction.BigFraction,299>, <org.apache.commons.math3.fraction.BigFraction,300>, <org.apache.commons.math3.fraction.BigFraction,301>, <org.apache.commons.math3.fraction.BigFraction,302>, <org.apache.commons.math3.fraction.BigFraction,303>, <org.apache.commons.math3.fraction.BigFraction,306>, <org.apache.commons.math3.fraction.BigFraction,309>, <org.apache.commons.math3.fraction.BigFraction,310>, <org.apache.commons.math3.fraction.BigFraction,313>, <org.apache.commons.math3.fraction.BigFraction,314>, <org.apache.commons.math3.fraction.BigFraction,315>, <org.apache.commons.math3.fraction.BigFraction,316>, <org.apache.commons.math3.fraction.BigFraction,317>, <org.apache.commons.math3.fraction.BigFraction,318>, <org.apache.commons.math3.fraction.BigFraction,320>, <org.apache.commons.math3.fraction.BigFraction,322>, <org.apache.commons.math3.fraction.BigFraction,324>, <org.apache.commons.math3.fraction.BigFraction,328>, <org.apache.commons.math3.fraction.BigFraction,329>, <org.apache.commons.math3.fraction.BigFraction,330>, <org.apache.commons.math3.fraction.BigFraction,332>, <org.apache.commons.math3.fraction.BigFraction,333>, <org.apache.commons.math3.fraction.BigFraction,335>, <org.apache.commons.math3.fraction.BigFraction,356>, <org.apache.commons.math3.fraction.BigFraction,357>, <org.apache.commons.math3.exception.util.LocalizedFormats,382>, <org.apache.commons.math3.exception.util.LocalizedFormats,383>, <org.apache.commons.math3.exception.util.LocalizedFormats,390>, <org.apache.commons.math3.exception.util.LocalizedFormats,396>, <org.apache.commons.math3.exception.MathIllegalStateException,86>, <org.apache.commons.math3.fraction.Fraction,144>, <org.apache.commons.math3.fraction.Fraction,145>, <org.apache.commons.math3.fraction.Fraction,215>, <org.apache.commons.math3.fraction.Fraction,239>, <org.apache.commons.math3.fraction.Fraction,240>, <org.apache.commons.math3.exception.MathIllegalStateException,69>, <org.apache.commons.math3.exception.MathIllegalStateException,70>, <org.apache.commons.math3.exception.MathIllegalStateException,74>, <org.apache.commons.math3.exception.MathIllegalStateException,45>, <org.apache.commons.math3.exception.MathIllegalStateException,46>, <org.apache.commons.math3.exception.MathIllegalStateException,47>, <org.apache.commons.math3.exception.MathIllegalStateException,48>, <org.apache.commons.math3.fraction.BigFraction,768>, <org.apache.commons.math3.util.FastMath,3352>, <org.apache.commons.math3.fraction.BigFraction,801>, <org.apache.commons.math3.util.FastMath,3338>, <org.apache.commons.math3.util.FastMath,3342>, <org.apache.commons.math3.util.FastMath,3346>, <org.apache.commons.math3.util.FastMath,3347>, <org.apache.commons.math3.util.FastMath,3351>, <org.apache.commons.math3.util.FastMath,3355>, <org.apache.commons.math3.fraction.Fraction,220>, <org.apache.commons.math3.fraction.Fraction,221>, <org.apache.commons.math3.fraction.Fraction,222>, <org.apache.commons.math3.fraction.Fraction,223>, <org.apache.commons.math3.fraction.Fraction,224>, <org.apache.commons.math3.fraction.Fraction,225>, <org.apache.commons.math3.util.FastMath,3024>, <org.apache.commons.math3.fraction.Fraction,366>, <org.apache.commons.math3.fraction.Fraction,374>, <org.apache.commons.math3.exception.util.LocalizedFormats,370>, <org.apache.commons.math3.exception.util.LocalizedFormats,371>, <org.apache.commons.math3.exception.util.LocalizedFormats,372>, <org.apache.commons.math3.exception.util.LocalizedFormats,44>, <org.apache.commons.math3.exception.util.LocalizedFormats,45>, <org.apache.commons.math3.exception.util.LocalizedFormats,46>, <org.apache.commons.math3.exception.util.LocalizedFormats,47>, <org.apache.commons.math3.exception.util.LocalizedFormats,48>, <org.apache.commons.math3.exception.util.LocalizedFormats,49>, <org.apache.commons.math3.exception.util.LocalizedFormats,50>, <org.apache.commons.math3.exception.util.LocalizedFormats,51>, <org.apache.commons.math3.exception.util.LocalizedFormats,52>, <org.apache.commons.math3.exception.util.LocalizedFormats,53>, <org.apache.commons.math3.exception.util.LocalizedFormats,54>, <org.apache.commons.math3.exception.util.LocalizedFormats,55>, <org.apache.commons.math3.exception.util.LocalizedFormats,56>, <org.apache.commons.math3.exception.util.LocalizedFormats,57>, <org.apache.commons.math3.exception.util.LocalizedFormats,58>, <org.apache.commons.math3.exception.util.LocalizedFormats,59>, <org.apache.commons.math3.exception.util.LocalizedFormats,60>, <org.apache.commons.math3.exception.util.LocalizedFormats,61>, <org.apache.commons.math3.exception.util.LocalizedFormats,62>, <org.apache.commons.math3.exception.util.LocalizedFormats,63>, <org.apache.commons.math3.exception.util.LocalizedFormats,64>, <org.apache.commons.math3.exception.util.LocalizedFormats,65>, <org.apache.commons.math3.exception.util.LocalizedFormats,66>, <org.apache.commons.math3.exception.util.LocalizedFormats,67>, <org.apache.commons.math3.exception.util.LocalizedFormats,68>, <org.apache.commons.math3.exception.util.LocalizedFormats,69>, <org.apache.commons.math3.exception.util.LocalizedFormats,70>, <org.apache.commons.math3.exception.util.LocalizedFormats,71>, <org.apache.commons.math3.exception.util.LocalizedFormats,72>, <org.apache.commons.math3.exception.util.LocalizedFormats,73>, <org.apache.commons.math3.exception.util.LocalizedFormats,74>, <org.apache.commons.math3.exception.util.LocalizedFormats,75>, <org.apache.commons.math3.exception.util.LocalizedFormats,76>, <org.apache.commons.math3.exception.util.LocalizedFormats,77>, <org.apache.commons.math3.exception.util.LocalizedFormats,78>, <org.apache.commons.math3.exception.util.LocalizedFormats,79>, <org.apache.commons.math3.exception.util.LocalizedFormats,80>, <org.apache.commons.math3.exception.util.LocalizedFormats,81>, <org.apache.commons.math3.exception.util.LocalizedFormats,82>, <org.apache.commons.math3.exception.util.LocalizedFormats,83>, <org.apache.commons.math3.exception.util.LocalizedFormats,84>, <org.apache.commons.math3.exception.util.LocalizedFormats,85>, <org.apache.commons.math3.exception.util.LocalizedFormats,86>, <org.apache.commons.math3.exception.util.LocalizedFormats,87>, <org.apache.commons.math3.exception.util.LocalizedFormats,88>, <org.apache.commons.math3.exception.util.LocalizedFormats,89>, <org.apache.commons.math3.exception.util.LocalizedFormats,90>, <org.apache.commons.math3.exception.util.LocalizedFormats,91>, <org.apache.commons.math3.exception.util.LocalizedFormats,92>, <org.apache.commons.math3.exception.util.LocalizedFormats,93>, <org.apache.commons.math3.exception.util.LocalizedFormats,94>, <org.apache.commons.math3.exception.util.LocalizedFormats,95>, <org.apache.commons.math3.exception.util.LocalizedFormats,96>, <org.apache.commons.math3.exception.util.LocalizedFormats,97>, <org.apache.commons.math3.exception.util.LocalizedFormats,98>, <org.apache.commons.math3.exception.util.LocalizedFormats,99>, <org.apache.commons.math3.exception.util.LocalizedFormats,100>, <org.apache.commons.math3.exception.util.LocalizedFormats,101>, <org.apache.commons.math3.exception.util.LocalizedFormats,102>, <org.apache.commons.math3.exception.util.LocalizedFormats,103>, <org.apache.commons.math3.exception.util.LocalizedFormats,104>, <org.apache.commons.math3.exception.util.LocalizedFormats,105>, <org.apache.commons.math3.exception.util.LocalizedFormats,106>, <org.apache.commons.math3.exception.util.LocalizedFormats,107>, <org.apache.commons.math3.exception.util.LocalizedFormats,108>, <org.apache.commons.math3.exception.util.LocalizedFormats,109>, <org.apache.commons.math3.exception.util.LocalizedFormats,110>, <org.apache.commons.math3.exception.util.LocalizedFormats,111>, <org.apache.commons.math3.exception.util.LocalizedFormats,112>, <org.apache.commons.math3.exception.util.LocalizedFormats,113>, <org.apache.commons.math3.exception.util.LocalizedFormats,114>, <org.apache.commons.math3.exception.util.LocalizedFormats,115>, <org.apache.commons.math3.exception.util.LocalizedFormats,116>, <org.apache.commons.math3.exception.util.LocalizedFormats,117>, <org.apache.commons.math3.exception.util.LocalizedFormats,118>, <org.apache.commons.math3.exception.util.LocalizedFormats,119>, <org.apache.commons.math3.exception.util.LocalizedFormats,120>, <org.apache.commons.math3.exception.util.LocalizedFormats,121>, <org.apache.commons.math3.exception.util.LocalizedFormats,122>, <org.apache.commons.math3.exception.util.LocalizedFormats,123>, <org.apache.commons.math3.exception.util.LocalizedFormats,124>, <org.apache.commons.math3.exception.util.LocalizedFormats,125>, <org.apache.commons.math3.exception.util.LocalizedFormats,126>, <org.apache.commons.math3.exception.util.LocalizedFormats,127>, <org.apache.commons.math3.exception.util.LocalizedFormats,128>, <org.apache.commons.math3.exception.util.LocalizedFormats,129>, <org.apache.commons.math3.exception.util.LocalizedFormats,130>, <org.apache.commons.math3.exception.util.LocalizedFormats,132>, <org.apache.commons.math3.exception.util.LocalizedFormats,133>, <org.apache.commons.math3.exception.util.LocalizedFormats,134>, <org.apache.commons.math3.exception.util.LocalizedFormats,135>, <org.apache.commons.math3.exception.util.LocalizedFormats,136>, <org.apache.commons.math3.exception.util.LocalizedFormats,137>, <org.apache.commons.math3.exception.util.LocalizedFormats,138>, <org.apache.commons.math3.exception.util.LocalizedFormats,139>, <org.apache.commons.math3.exception.util.LocalizedFormats,140>, <org.apache.commons.math3.exception.util.LocalizedFormats,141>, <org.apache.commons.math3.exception.util.LocalizedFormats,142>, <org.apache.commons.math3.exception.util.LocalizedFormats,143>, <org.apache.commons.math3.exception.util.LocalizedFormats,144>, <org.apache.commons.math3.exception.util.LocalizedFormats,145>, <org.apache.commons.math3.exception.util.LocalizedFormats,146>, <org.apache.commons.math3.exception.util.LocalizedFormats,147>, <org.apache.commons.math3.exception.util.LocalizedFormats,148>, <org.apache.commons.math3.exception.util.LocalizedFormats,149>, <org.apache.commons.math3.exception.util.LocalizedFormats,150>, <org.apache.commons.math3.exception.util.LocalizedFormats,151>, <org.apache.commons.math3.exception.util.LocalizedFormats,152>, <org.apache.commons.math3.exception.util.LocalizedFormats,153>, <org.apache.commons.math3.exception.util.LocalizedFormats,154>, <org.apache.commons.math3.exception.util.LocalizedFormats,155>, <org.apache.commons.math3.exception.util.LocalizedFormats,156>, <org.apache.commons.math3.exception.util.LocalizedFormats,157>, <org.apache.commons.math3.exception.util.LocalizedFormats,158>, <org.apache.commons.math3.exception.util.LocalizedFormats,159>, <org.apache.commons.math3.exception.util.LocalizedFormats,160>, <org.apache.commons.math3.exception.util.LocalizedFormats,161>]
======================org.apache.commons.math3.fraction.FractionConversionException,53
org.apache.commons.math3.fraction.FractionConversionException,54
Find no block!
org.apache.commons.math3.exception.ConvergenceException,48
Find no block!
org.apache.commons.math3.exception.ConvergenceException,49
========
getContext().addMessage(LocalizedFormats.INTERNAL_ERROR,args);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
getContext().addMessage(pattern,REPORT_URL);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
getContext().addMessage(LocalizedFormats.INTERNAL_ERROR,REPORT_URL);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
getContext().addMessage(LocalizedFormats.CONTRACTION_CRITERIA_SMALLER_THAN_ONE,args);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
getContext().addMessage(LocalizedFormats.EXPANSION_FACTOR_SMALLER_THAN_ONE,args);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.apache.commons.math3.exception.ConvergenceException,50
Find no block!
org.apache.commons.math3.fraction.BigFraction,271
Find no block!
org.apache.commons.math3.fraction.BigFraction,272
========
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}
long overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long overflow=Integer.MAX_VALUE;
long r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++maxDenominator;
long overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
a0=(overflow*serialVersionUID)+serialVersionUID;
long overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double overflow=Integer.MAX_VALUE;
long r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++maxDenominator;
double overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
a0=(overflow*serialVersionUID)+serialVersionUID;
double overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++maxDenominator;
long overflow=Integer.MAX_VALUE;
long r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
a0=(overflow*serialVersionUID)+serialVersionUID;
long overflow=Integer.MAX_VALUE;
long r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++maxDenominator;
a0=(overflow*serialVersionUID)+serialVersionUID;
long overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++maxDenominator;
double overflow=Integer.MAX_VALUE;
long r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
a0=(overflow*serialVersionUID)+serialVersionUID;
double overflow=Integer.MAX_VALUE;
long r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++maxDenominator;
a0=(overflow*serialVersionUID)+serialVersionUID;
double overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++maxDenominator;
a0=(overflow*serialVersionUID)+serialVersionUID;
long overflow=Integer.MAX_VALUE;
long r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++maxDenominator;
a0=(overflow*serialVersionUID)+serialVersionUID;
double overflow=Integer.MAX_VALUE;
long r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0)>overflow){
throw new FractionConversionException(value,a0,1l);
}
long overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long overflow=Integer.MAX_VALUE;
double r0=p;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long overflow=Integer.MAX_VALUE;
double r0=n;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long overflow=Integer.MAX_VALUE;
double r0=value;
int a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long overflow=Integer.MAX_VALUE;
double r0=a;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(r0-floor(value)>0.5){
if(floor(value)==-1.0){
return -0.0;
}
return y+1.0;
}
long overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
value=FastMath.nextAfter(unscaled,Double.NEGATIVE_INFINITY);
long overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(r0>0.5){
value=FastMath.ceil(unscaled);
}else {
unscaled=FastMath.floor(unscaled);
}
long overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
value=FastMath.nextAfter(unscaled,Double.POSITIVE_INFINITY);
long overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(r0>=0.5){
value=FastMath.ceil(unscaled);
}else {
unscaled=FastMath.floor(unscaled);
}
long overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long overflow=Integer.MAX_VALUE;
double r0=meanPoisson;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long overflow=Integer.MAX_VALUE;
double r0=lambda;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(r0>value||x<-value){
continue;
}
long overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
value=r0<0?FastMath.floor(x):FastMath.ceil(x);
long overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isInfinite(r0)){
throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_VALUE_CONVERSION);
}
long overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long overflow=value;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new StringBuilder().append('(');
long overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new StringBuilder().append(r0);
long overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new StringBuilder().append(')');
long overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new StringBuilder().append('(');
int overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new StringBuilder().append(')');
int overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new StringBuilder().append('(');
new StringBuilder().append(')');
long overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new StringBuilder().append('(');
new StringBuilder().append(')');
int overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long overflow=Double.NaN;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxDenominator<1){
throw new MathIllegalStateException(LocalizedFormats.CANNOT_SUBSTITUTE_ELEMENT_FROM_EMPTY_ARRAY);
}
long overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long overflow=Integer.MAX_VALUE;
double r0=start;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long overflow=c.length;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkMatrixIndex(this,maxDenominator,maxDenominator);
long overflow=Integer.MAX_VALUE;
double r0=value;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int overflow=Integer.MAX_VALUE;
double r0=start;
long a0=(long)FastMath.floor(r0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.fraction.BigFraction,273
org.apache.commons.math3.fraction.BigFraction,274
========
double r0=MAX_VALUE;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long r0=MAX_VALUE;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if((a0>overflow)||(serialVersionUID>overflow)){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(p2>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>q2){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,serialVersionUID);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if((a0>overflow)||(serialVersionUID>overflow)){
throw new FractionConversionException(value,a0,serialVersionUID);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>epsilon){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
numerator=BigInteger.valueOf(a0);
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
denominator=BigInteger.ONE;
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>epsilon){
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>epsilon){
numerator=BigInteger.valueOf(a0);
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>epsilon){
denominator=BigInteger.ONE;
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
numerator=BigInteger.valueOf(a0);
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
denominator=BigInteger.ONE;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
numerator=BigInteger.valueOf(a0);
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>epsilon){
numerator=BigInteger.valueOf(a0);
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>epsilon){
denominator=BigInteger.ONE;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>epsilon){
numerator=BigInteger.valueOf(a0);
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>epsilon){
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
numerator=BigInteger.valueOf(a0);
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>epsilon){
numerator=BigInteger.valueOf(a0);
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>epsilon){
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
if(FastMath.abs(a0-value)<epsilon){
this.numerator=(int)a0;
this.denominator=1;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
this.numerator=(int)a0;
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
this.denominator=1;
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
this.numerator=(int)a0;
this.denominator=1;

throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=unscaled;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(fraction>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
r0=FastMath.nextAfter(unscaled,Double.NEGATIVE_INFINITY);
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
r0=FastMath.nextAfter(unscaled,Double.POSITIVE_INFINITY);
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=unscaled;
long a0=(long)FastMath.floor(r0);
if(fraction>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=x;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=y;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(d>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
if(floor(r0)==-1.0){
return -0.0;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
return floor(r0)+1.0;
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
if(maxDenominator<67){
return binomialCoefficient(n,maxDenominator);
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(epsilon>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(epsilon>q2){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(sign>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new NotPositiveException(LocalizedFormats.FACTORIAL_NEGATIVE_PARAMETER,maxDenominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxDenominator<21){
return FACTORIALS[n];
}
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=lastTime;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=h;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(length>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(value)){
throw new MathIllegalArgumentException(LocalizedFormats.NAN_VALUE_CONVERSION);
}
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isInfinite(value)){
throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_VALUE_CONVERSION);
}
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(value)){
throw new MathIllegalArgumentException(LocalizedFormats.NAN_VALUE_CONVERSION);
}
long r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isInfinite(value)){
throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_VALUE_CONVERSION);
}
long r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(value)){
throw new MathIllegalArgumentException(LocalizedFormats.NAN_VALUE_CONVERSION);
}
if(Double.isInfinite(value)){
throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_VALUE_CONVERSION);
}
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(value)){
throw new MathIllegalArgumentException(LocalizedFormats.NAN_VALUE_CONVERSION);
}
if(Double.isInfinite(value)){
throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_VALUE_CONVERSION);
}
long r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new NumberIsTooLargeException(maxDenominator,maxDenominator,false);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
this(maxDenominator,maxDenominator,value);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=scalRelativeTolerance;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>internalArray.length){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>length){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
maxDenominator+=1;
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(shouldContract()){
contract();
}
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>value){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double r0=end;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=start;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=step;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=length;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>=overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(maxDenominator<0){
throw new ArrayIndexOutOfBoundsException(index);
}
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(maxDenominator+1>maxDenominator){
numElements=index+1;
}
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>=internalArray.length){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>=length){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case BigDecimal.ROUND_HALF_UP :

double r0=value;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int r0=end;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int r0=start;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int r0=step;
long a0=(long)FastMath.floor(r0);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.fraction.BigFraction,275
========
if((a0>overflow)||(serialVersionUID>overflow)){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(p2>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>q2){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>overflow){
throw new FractionConversionException(value,a0,serialVersionUID);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((a0>overflow)||(serialVersionUID>overflow)){
throw new FractionConversionException(value,a0,serialVersionUID);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a0>overflow){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a0>epsilon){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a0>overflow){
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a0>overflow){
numerator=BigInteger.valueOf(a0);
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a0>overflow){
denominator=BigInteger.ONE;
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a0>overflow){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a0>epsilon){
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a0>epsilon){
numerator=BigInteger.valueOf(a0);
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a0>epsilon){
denominator=BigInteger.ONE;
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a0>epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a0>overflow){
numerator=BigInteger.valueOf(a0);
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>overflow){
denominator=BigInteger.ONE;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>overflow){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>overflow){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a0>overflow){
numerator=BigInteger.valueOf(a0);
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>overflow){
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>epsilon){
numerator=BigInteger.valueOf(a0);
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>epsilon){
denominator=BigInteger.ONE;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a0>epsilon){
numerator=BigInteger.valueOf(a0);
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>epsilon){
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>overflow){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>overflow){
numerator=BigInteger.valueOf(a0);
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>overflow){
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>overflow){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>epsilon){
numerator=BigInteger.valueOf(a0);
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>epsilon){
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>overflow){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>overflow){
if(FastMath.abs(a0-value)<epsilon){
this.numerator=(int)a0;
this.denominator=1;
return ;
}
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>overflow){
this.numerator=(int)a0;
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>overflow){
this.denominator=1;
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>overflow){
this.numerator=(int)a0;
this.denominator=1;

throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(epsilon>q2){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>overflow){
throw new NumberIsTooLargeException(maxDenominator,maxDenominator,false);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this(maxDenominator,maxDenominator,value);
if(a0>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>value){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a0>overflow){
throw new MathIllegalStateException(LocalizedFormats.CANNOT_SUBSTITUTE_ELEMENT_FROM_EMPTY_ARRAY);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>=overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a0>internalArray.length){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>length){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.fraction.BigFraction,281
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(overflow);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(r0<epsilon*r0){
break;
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
maxDenominator--;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon*value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<s){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<delta){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<=epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<TINY+EPS*value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<TINY){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<EPS){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<t){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<threshold){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<largest){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
largest=FastMath.abs(epsilon);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<p){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
d=r0;
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q0=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q1=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<functionValueAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxDenominator>=25326001){
maxDenominator=4;
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<maxAbsoluteValue){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
shift.x=0.75*epsilon;
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
shift.y=0.75*epsilon;
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
shift.x=0.75*epsilon;
shift.y=0.75*epsilon;

denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q0=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q1=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q0=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q1=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q0=overflow;
q1=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q0=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q0=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q1=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q1=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
q0=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
q1=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q0=overflow;
q1=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q0=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q0=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q1=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q1=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q0=overflow;
q1=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q0=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q0=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q1=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q1=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q0=overflow;
q1=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q0=overflow;
q1=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q0=overflow;
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q1=overflow;
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
q0=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
q0=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
q1=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
q1=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q0=overflow;
q1=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q0=overflow;
q1=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q0=overflow;
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q1=overflow;
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q0=overflow;
q1=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q0=overflow;
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q1=overflow;
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q0=overflow;
q1=overflow;
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(value-1.0)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
r0=r0;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
r0=r0;
if(FastMath.abs(a0-value)<functionValueAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(computeObjectiveValue(r0-epsilon))<=value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(computeObjectiveValue(r0-epsilon))<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(r0-epsilon-r0)<=FastMath.max(r0*FastMath.abs(r0-epsilon),r0)){
return x;
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<=value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<=functionValueAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<relativeTolerance){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ZERO;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0).valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.multiply(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0).valueOf(a0);
denominator=BigInteger.ZERO;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(r0-epsilon)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<mainSetDimension){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.sqrt(FastMath.abs(r0-r0*meanX))<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.sqrt(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<accuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<difference){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<tol1){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<tol){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon)<value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<cutOff){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(r0-epsilon)<=value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<absoluteAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(r0-epsilon)<=epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(r0-epsilon)<value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon-value)<=r0){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<r0){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon-value)<=epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<=r0){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<=threshold){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon-value)<r0){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon-value)<threshold){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon-value)<=threshold){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<ONE_OVER_FOUR){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
vlag=ONE_OVER_FOUR;
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon)<=value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon)<=epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon)<functionValueAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon)<=functionValueAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<ftol){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<singularityThreshold){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<convergence){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<Precision.EPSILON*value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<EPSILON){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<=maxAbsoluteValue){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<=Precision.EPSILON*value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<=EPSILON){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon)<accuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon)<threshold){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon)<=threshold){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<temp){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<parRelativeTolerance){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<xNorm){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.isNaN(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<parl){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<fp){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<previousFP){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon-r0)<=value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon-r0)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon-r0)<=epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<=absoluteAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon-r0)<value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon-r0)<absoluteAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon-r0)<=absoluteAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<cgnorm){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<maxDelta){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<rho){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
r0=Math.abs(r0);
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
r0=r0;
r0=Math.abs(r0);
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<standardDeviation){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<shape){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(maxDenominator)==maxDenominator){
return ;
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<stopTolX){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<limit){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsa){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
setCost(r0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(ArithmeticUtils.mulAndCheck(maxDenominator/gcd(a,maxDenominator),b))==Integer.MIN_VALUE){
throw new MathArithmeticException(LocalizedFormats.LCM_OVERFLOW_32_BITS,maxDenominator,maxDenominator);
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(ArithmeticUtils.mulAndCheck(a0/gcd(a,overflow),b))==Long.MIN_VALUE){
throw new MathArithmeticException(LocalizedFormats.LCM_OVERFLOW_64_BITS,a0,overflow);
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<ratio){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<hyperplaneThickness){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(numerator.equals(BigInteger.ZERO)||fraction.numerator.equals(BigInteger.ZERO)){
return ZERO;
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<Precision.SAFE_MIN){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<SAFE_MIN){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<ANY_SIDE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.doubleToLongBits(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<max){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(BigInteger.ZERO.equals(denominator)){
throw new MathArithmeticException(LocalizedFormats.ZERO_DENOMINATOR);
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<length){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<ztest){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this(maxDenominator,maxDenominator,value);
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
maxDenominator+=1;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(shouldContract()){
contract();
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxDenominator+1>maxDenominator){
numElements=index+1;
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((maxDenominator+maxDenominator)>=internalArray.length){
expandTo(startIndex+(index+1));
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Precision.compareTo(value,0.0,epsilon)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<this.epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
d[m]=r0*X;
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
r[m1]=1.0/X;
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
rhs[m]=rhs[m]/X;
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
d[m]=r0*X;
r[m1]=1.0/X;
rhs[m]=rhs[m]/X;

denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxDenominator==Integer.MAX_VALUE){
return 1;
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=value;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=epsilon;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=value;
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=epsilon;
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
epsilon=value;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
epsilon=epsilon;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=value;
epsilon=epsilon;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
epsilon=value;
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
epsilon=epsilon;
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=value;
epsilon=epsilon;
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
epsilon=value;
epsilon=epsilon;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
epsilon=value;
epsilon=epsilon;
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(value)<tol1){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
r0=r0;
if(FastMath.abs(a0-value)<rho){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
r0=Math.abs(r0);
if(FastMath.abs(a0-value)<rho){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
r0=r0;
r0=Math.abs(r0);
if(FastMath.abs(a0-value)<rho){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(r0-epsilon)<absoluteAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(r0-epsilon)<=absoluteAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<ONE_OVER_FOUR){
numerator=BigInteger.valueOf(a0);
vlag=ONE_OVER_FOUR;
denominator=BigInteger.ONE;
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.fraction.BigFraction,287
========
if(r0<epsilon*r0){
break;
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
maxDenominator--;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(p0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
if(FastMath.abs(a0-value)<epsilon){
this.numerator=(int)a0;
this.denominator=1;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon*value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<s){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<=epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<TINY+EPS*value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<TINY){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<EPS){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<t){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<threshold){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<delta){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q0=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q1=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q0=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q1=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q0=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q1=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q0=overflow;
q1=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q0=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q0=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q1=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q1=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
q0=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
q1=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q0=overflow;
q1=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q0=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q0=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q1=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q1=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q0=overflow;
q1=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q0=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q0=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q1=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q1=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q0=overflow;
q1=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q0=overflow;
q1=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q0=overflow;
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q1=overflow;
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
q0=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
q0=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
q1=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
q1=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
p1=overflow;
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q0=overflow;
q1=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q0=overflow;
q1=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q0=overflow;
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p0=overflow;
q1=overflow;
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q0=overflow;
q1=overflow;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q0=overflow;
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
p1=overflow;
q1=overflow;
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
q0=overflow;
q1=overflow;
r0=r0;
p0=overflow;
p1=overflow;
q0=overflow;
q1=overflow;
r0=r0;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
double p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
if(FastMath.abs(r0)<FastMath.abs(r0)){
r0=r0;
b=r0;
c=a;
r0=fb;
fb=fc;
fc=fa;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
shift.exShift+=shift.x;
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
shift.x=0.75*epsilon;
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
shift.w=-0.4375*epsilon;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
shift.exShift+=shift.x;
shift.x=0.75*epsilon;
shift.w=-0.4375*epsilon;

numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<p){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<largest){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<b){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<u){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<tol2){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<m){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<maxAbsoluteValue){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<maxDelta){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<relativeTolerance){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(computeObjectiveValue(r0-epsilon))<=value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(computeObjectiveValue(r0-epsilon))<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<functionValueAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(r0-epsilon-r0)<=FastMath.max(r0*FastMath.abs(r0-epsilon),r0)){
return x;
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<=value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(value-1.0)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ZERO;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0).valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.multiply(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0).valueOf(a0);
denominator=BigInteger.ZERO;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(r0-epsilon)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<mainSetDimension){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(r0-r0)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.sqrt(FastMath.abs(r0-r0*meanX))<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.sqrt(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<accuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<difference){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=maxDenominator;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
double p0=maxDenominator;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon)<value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<cutOff){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<tol1){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<tol){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
if(FastMath.abs(epsilon)>=1.0){
return 0.0;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
double p0=1;
double q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
double q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<Precision.EPSILON*value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<EPSILON){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<=maxAbsoluteValue){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<=Precision.EPSILON*value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<=EPSILON){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<ONE_OVER_FOUR){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<singularityThreshold){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
singular=true;
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<convergence){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(r0-epsilon)<=value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<absoluteAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(r0-epsilon)<=epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(r0-epsilon)<value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon-value)<=r0){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<r0){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon-value)<=epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<=r0){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<=threshold){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon-value)<r0){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon-value)<threshold){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon-value)<=threshold){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon)<=value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon)<=epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon)<threshold){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon)<=threshold){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<=functionValueAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon)<functionValueAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon)<=functionValueAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<ftol){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<temp){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<parRelativeTolerance){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<xNorm){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<parl){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<fp){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<previousFP){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon)<accuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<=epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
double p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<threshold){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
double p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<=threshold){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
double p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
boolean p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<imaginary){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value>=0.0){
return createComplex(FastMath.sqrt((FastMath.abs(value)+abs())/2.0),value/(2.0*t));
}else {
return createComplex(FastMath.abs(imaginary)/(2.0*t),FastMath.copySign(1.0,imaginary)*t);
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=Math.abs((r0-r0)*(r0-value)-(r0-r0)*(r0-epsilon))<EPS_MIN?1:0;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<standardDeviation){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<shape){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.isNaN(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
pendingEvent=true;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
ta=r0;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=FastMath.max(1,(int)FastMath.ceil(FastMath.abs(r0-value)/epsilon));
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
if(FastMath.abs(r0-value)<r0){
return false;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
double p0=FastMath.max(1,(int)FastMath.ceil(FastMath.abs(r0-value)/epsilon));
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=FastMath.abs(maxDenominator);
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
if(FastMath.abs(maxDenominator)==maxDenominator){
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
double p0=FastMath.abs(maxDenominator);
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon-r0)<=value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon-r0)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon-r0)<=epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<=absoluteAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon-r0)<value){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon-r0)<absoluteAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(epsilon-r0)<=absoluteAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<cgnorm){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<stopTolX){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
int p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=denominator.intValue();
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsa){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
if(maxDenominator<0){
xInt=SGN_MASK_FLOAT-xInt;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
if(maxDenominator<0){
yInt=SGN_MASK_FLOAT-yInt;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
boolean p0=maxDenominator;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
if(Double.doubleToLongBits(epsilon)<0){
xInt=SGN_MASK-xInt;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
if(Double.doubleToLongBits(epsilon)<0){
yInt=SGN_MASK-yInt;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(ArithmeticUtils.mulAndCheck(maxDenominator/gcd(a,maxDenominator),b))==Integer.MIN_VALUE){
throw new MathArithmeticException(LocalizedFormats.LCM_OVERFLOW_32_BITS,maxDenominator,maxDenominator);
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(p0==Long.MIN_VALUE){
throw new MathArithmeticException(LocalizedFormats.LCM_OVERFLOW_64_BITS,a0,overflow);
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++maxDenominator;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p0=(q0*overflow)+p0;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
a0=(q0*overflow)+overflow;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<ratio){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=(denominator.mod(BigInteger.valueOf(maxDenominator)).intValue()==0)?1:0;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(denominator.divide(BigInteger.valueOf((denominator.mod(BigInteger.valueOf(maxDenominator)).intValue()==0)?maxDenominator:ArithmeticUtils.gcd(tmodd1,d1))).bitLength()>31){
throw new MathArithmeticException(LocalizedFormats.NUMERATOR_OVERFLOW_AFTER_MULTIPLY,w);
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
int p0=maxDenominator;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<hyperplaneThickness){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<Precision.SAFE_MIN){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<SAFE_MIN){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(numerator.equals(BigInteger.ZERO)||fraction.numerator.equals(BigInteger.ZERO)){
return ZERO;
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=maxDenominator;
long q0=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=maxDenominator;
double q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
double p0=1;
long q0=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
double q0=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
double p0=maxDenominator;
long q0=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=maxDenominator;
double q0=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
double p0=maxDenominator;
double q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
double p0=1;
double q0=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
double p0=maxDenominator;
double q0=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<max){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.doubleToLongBits(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<ANY_SIDE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<length){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(BigInteger.ZERO.equals(denominator)){
throw new MathArithmeticException(LocalizedFormats.ZERO_DENOMINATOR);
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<ztest){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this(maxDenominator,maxDenominator,value);
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
maxDenominator+=1;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(shouldContract()){
contract();
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Precision.compareTo(value,0.0,epsilon)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxDenominator+1>maxDenominator){
numElements=index+1;
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((maxDenominator+maxDenominator)>=internalArray.length){
expandTo(startIndex+(index+1));
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxDenominator==Integer.MAX_VALUE){
return 1;
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
if(Double.isInfinite(log(r0,new double[2]))){
return lores;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<a){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<this.epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=value;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=epsilon;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
q0=new LineSearch(epsilon,epsilon);
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=value;
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=epsilon;
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
q0=new LineSearch(epsilon,epsilon);
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
epsilon=value;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
epsilon=epsilon;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
q0=new LineSearch(epsilon,epsilon);
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=value;
epsilon=epsilon;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=value;
q0=new LineSearch(epsilon,epsilon);
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=epsilon;
q0=new LineSearch(epsilon,epsilon);
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
epsilon=value;
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
epsilon=epsilon;
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
q0=new LineSearch(epsilon,epsilon);
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=value;
epsilon=epsilon;
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=value;
q0=new LineSearch(epsilon,epsilon);
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=epsilon;
q0=new LineSearch(epsilon,epsilon);
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
epsilon=value;
epsilon=epsilon;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
epsilon=value;
q0=new LineSearch(epsilon,epsilon);
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
epsilon=epsilon;
q0=new LineSearch(epsilon,epsilon);
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=value;
epsilon=epsilon;
q0=new LineSearch(epsilon,epsilon);
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
epsilon=value;
epsilon=epsilon;
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
epsilon=value;
q0=new LineSearch(epsilon,epsilon);
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
epsilon=epsilon;
q0=new LineSearch(epsilon,epsilon);
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=value;
epsilon=epsilon;
q0=new LineSearch(epsilon,epsilon);
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
epsilon=value;
epsilon=epsilon;
q0=new LineSearch(epsilon,epsilon);
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
q0=epsilon;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
q0=epsilon;
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
q0=epsilon;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=value;
q0=epsilon;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
q0=epsilon;
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=value;
q0=epsilon;
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
epsilon=value;
q0=epsilon;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon<=0){
throw new NotStrictlyPositiveException(abs);
}
epsilon=value;
q0=epsilon;
if(FastMath.abs(a0-value)<MIN_RELATIVE_TOLERANCE){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(value)<tol1){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(r0-epsilon)<absoluteAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(r0-epsilon)<=absoluteAccuracy){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
long p0=1;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
double p0=Math.abs((r0-r0)*(r0-value)-(r0-r0)*(r0-epsilon))<EPS_MIN?1:0;
long q0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.fraction.BigFraction,288
========
long p0=1;
long q0=0;
long p1=r0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p0=1;
long q0=0;
double p1=a0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p0=1;
long q0=0;
++maxDenominator;
long p1=a0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p1=(p0*a0)+p0;
long p0=1;
long q0=0;
long p1=a0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p0=1;
long q0=0;
double p1=r0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p0=1;
long q0=0;
++maxDenominator;
long p1=r0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p1=(p0*a0)+p0;
long p0=1;
long q0=0;
long p1=r0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p0=1;
long q0=0;
++maxDenominator;
double p1=a0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p1=(p0*a0)+p0;
long p0=1;
long q0=0;
double p1=a0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p1=(p0*a0)+p0;
long p0=1;
long q0=0;
++maxDenominator;
long p1=a0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p0=1;
long q0=0;
++maxDenominator;
double p1=r0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p1=(p0*a0)+p0;
long p0=1;
long q0=0;
double p1=r0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p1=(p0*a0)+p0;
long p0=1;
long q0=0;
++maxDenominator;
long p1=r0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p1=(p0*a0)+p0;
long p0=1;
long q0=0;
++maxDenominator;
double p1=a0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p1=(p0*a0)+p0;
long p0=1;
long q0=0;
++maxDenominator;
double p1=r0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p0=1;
long q0=0;
long p1=value;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(p1>overflow){
throw new FractionConversionException(value,a0,1l);
}
long p0=1;
long q0=0;
long p1=a0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(p1)>overflow){
throw new FractionConversionException(value,a0,1l);
}
long p0=1;
long q0=0;
long p1=a0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p0=1;
long q0=0;
double p1=value;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.fraction.BigFraction,289
========
long q0=0;
long p1=r0;
long q1=1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long q0=0;
double p1=a0;
long q1=1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long q0=0;
++maxDenominator;
long p1=a0;
long q1=1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p1=(q1*p1)+p0;
long q0=0;
long p1=a0;
long q1=1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long q0=0;
double p1=r0;
long q1=1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long q0=0;
++maxDenominator;
long p1=r0;
long q1=1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p1=(q1*p1)+p0;
long q0=0;
long p1=r0;
long q1=1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long q0=0;
++maxDenominator;
double p1=a0;
long q1=1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p1=(q1*p1)+p0;
long q0=0;
double p1=a0;
long q1=1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p1=(q1*p1)+p0;
long q0=0;
++maxDenominator;
long p1=a0;
long q1=1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long q0=0;
++maxDenominator;
double p1=r0;
long q1=1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p1=(q1*p1)+p0;
long q0=0;
double p1=r0;
long q1=1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p1=(q1*p1)+p0;
long q0=0;
++maxDenominator;
long p1=r0;
long q1=1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p1=(q1*p1)+p0;
long q0=0;
++maxDenominator;
double p1=a0;
long q1=1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p1=(q1*p1)+p0;
long q0=0;
++maxDenominator;
double p1=r0;
long q1=1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long q0=0;
long p1=value;
long q1=1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(q1>overflow){
throw new FractionConversionException(value,a0,1l);
}
long q0=0;
long p1=a0;
long q1=1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(q1)>overflow){
throw new FractionConversionException(value,a0,1l);
}
long q0=0;
long p1=a0;
long q1=1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long q0=0;
double p1=value;
long q1=1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.fraction.BigFraction,290
========
long p1=r0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double p1=a0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++maxDenominator;
long p1=a0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(q1*p1)+p0;
long p1=a0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double p1=r0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++maxDenominator;
long p1=r0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(q1*p1)+p0;
long p1=r0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++maxDenominator;
double p1=a0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(q1*p1)+p0;
double p1=a0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++maxDenominator;
p2=(q1*p1)+p0;
long p1=a0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++maxDenominator;
double p1=r0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(q1*p1)+p0;
double p1=r0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++maxDenominator;
p2=(q1*p1)+p0;
long p1=r0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++maxDenominator;
p2=(q1*p1)+p0;
double p1=a0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++maxDenominator;
p2=(q1*p1)+p0;
double p1=r0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p1=p2;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p1=q2;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
q1=(a0*q1)+q0;
long p1=a0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((p1>overflow)||(q1>overflow)){
throw new FractionConversionException(value,p2,q2);
}
long p1=a0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(p1)>overflow)||(FastMath.abs(q1)>overflow)){
throw new FractionConversionException(value,p2,q2);
}
long p1=a0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double p1=p2;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
q1=(a0*q1)+q0;
long p1=p2;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double p1=q2;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
q1=(a0*q1)+q0;
long p1=q2;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
q1=(a0*q1)+q0;
double p1=a0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
q1=(a0*q1)+q0;
double p1=p2;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
q1=(a0*q1)+q0;
double p1=q2;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p1=value;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(p2>overflow){
throw new FractionConversionException(value,a0,1l);
}
long p1=a0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(p2)>overflow){
throw new FractionConversionException(value,a0,1l);
}
long p1=a0;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double p1=value;
long q1=1;
long p2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.fraction.BigFraction,292
org.apache.commons.math3.fraction.BigFraction,293
UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

========
long p2=0;
long q2=1;
long n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x.length<3){
throw new NumberIsTooSmallException(LocalizedFormats.NUMBER_OF_POINTS,x.length,3,true);
}
long p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x.length<2){
throw new NumberIsTooSmallException(LocalizedFormats.NUMBER_OF_POINTS,x.length,2,true);
}
long p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=0;
int q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=0;
int q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
assert b.length == n;

long p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=0;
double q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Precision.equals(value,0.0,value)){
hPrev=small;
}
long p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==0){
throw new NoDataException(LocalizedFormats.POLYNOMIAL);
}
long p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=0;
long q2=maxDenominator;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int p2=0;
long q2=maxDenominator;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=0;
int q2=maxDenominator;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=0;
int q2=maxDenominator;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=maxDenominator;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((int)(value*maxDenominator)<2){
throw new NumberIsTooSmallException(LocalizedFormats.BANDWIDTH,bandwidthInPoints,2,true);
}
long p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=maxDenominator;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=maxDenominator;
double q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isPrime(n)){
return n;
}
long p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(0==n%3){
n+=2;
}else if(1==rem){
n+=4;
}
long p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=maxDenominator;
long q2=maxDenominator;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(maxDenominator-maxDenominator*value>=1){
throw new NumberIsTooLargeException(hDouble,1.0,false);
}
long p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=0;
double q2=maxDenominator;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=0;
double q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=maxDenominator;
long q2=maxDenominator;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=maxDenominator;
double q2=maxDenominator;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=maxDenominator;
double q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=0;
double q2=maxDenominator;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=maxDenominator;
double q2=maxDenominator;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxDenominator<=1&&maxDenominator==4*mant.length-3){
return super.round(maxDenominator);
}
long p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=0;
long q2=((int)(q1>>>52))&0x7ff;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int p2=0;
long q2=((int)(q1>>>52))&0x7ff;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=0;
int q2=((int)(q1>>>52))&0x7ff;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=0;
int q2=((int)(q1>>>52))&0x7ff;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=maxDenominator;
long q2=maxDenominator;
int n=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long p2=0;
long q2=maxDenominator;
int n=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long p2=0;
long q2=1;
int n=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long p2=maxDenominator;
long q2=1;
int n=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long p2=maxDenominator;
int q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=0;
long q2=1;
int n=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=0;
int q2=1;
int n=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=maxDenominator;
int q2=maxDenominator;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=maxDenominator;
long q2=1;
int n=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=maxDenominator;
int q2=1;
int n=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=maxDenominator;
int q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=0;
long q2=maxDenominator;
int n=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=0;
int q2=maxDenominator;
int n=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=0;
int q2=1;
int n=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=maxDenominator;
long q2=maxDenominator;
int n=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=maxDenominator;
int q2=maxDenominator;
int n=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=maxDenominator;
int q2=maxDenominator;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=maxDenominator;
int q2=1;
int n=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=0;
int q2=maxDenominator;
int n=maxDenominator;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=0;
long q2=maxDenominator-1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int p2=0;
long q2=maxDenominator-1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=0;
int q2=maxDenominator-1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=maxDenominator;
long q2=maxDenominator-1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int p2=0;
int q2=maxDenominator-1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=maxDenominator;
long q2=maxDenominator-1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=maxDenominator;
int q2=maxDenominator-1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=maxDenominator;
int q2=maxDenominator-1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!ArithmeticUtils.isPowerOfTwo(n)){
throw new MathIllegalArgumentException(LocalizedFormats.NOT_POWER_OF_TWO,Integer.valueOf(n));
}
long p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=(householderVectors.length>=n)?0:1;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=(householderVectors.length>=n)?0:0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!ArithmeticUtils.isPowerOfTwo(n)){
throw new MathIllegalArgumentException(LocalizedFormats.NOT_POWER_OF_TWO_PLUS_ONE,Integer.valueOf(f.length));
}
long p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=getEvaluations();
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=0;
long q2=getEvaluations();
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double p2=0;
double q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double p2=maxDenominator;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double p2=0;
long q2=maxDenominator;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double p2=maxDenominator;
long q2=maxDenominator;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double p2=maxDenominator;
double q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double p2=0;
double q2=maxDenominator;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double p2=maxDenominator;
double q2=maxDenominator;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n!=sample2.length){
throw new DimensionMismatchException(n,sample2.length);
}
long p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(value)<value){
return false;
}
long p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxDenominator<=0){
throw new NotStrictlyPositiveException(n);
}
long p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
printMethod();
long p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=0;
long q2=1;
int n=maxDenominator+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long p2=maxDenominator;
long q2=1;
int n=maxDenominator+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long p2=0;
long q2=maxDenominator;
int n=maxDenominator+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int p2=0;
long q2=1;
int n=maxDenominator+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=0;
int q2=1;
int n=maxDenominator+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=maxDenominator;
long q2=maxDenominator;
int n=maxDenominator+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int p2=maxDenominator;
long q2=1;
int n=maxDenominator+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=maxDenominator;
int q2=1;
int n=maxDenominator+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=0;
long q2=maxDenominator;
int n=maxDenominator+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=0;
int q2=maxDenominator;
int n=maxDenominator+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=0;
int q2=1;
int n=maxDenominator+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=maxDenominator;
long q2=maxDenominator;
int n=maxDenominator+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=maxDenominator;
int q2=maxDenominator;
int n=maxDenominator+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=maxDenominator;
int q2=1;
int n=maxDenominator+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=0;
int q2=maxDenominator;
int n=maxDenominator+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
maxDenominator=(int)(q2%maxDenominator);
long p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(0==maxDenominator){
return gcdPositive(FastMath.abs((int)q1),maxDenominator);
}
long p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value>=value){
throw new NumberIsTooLargeException(min,max,false);
}
long p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=FastMath.max(0,maxDenominator+1-maxDenominator);
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double p2=FastMath.max(0,maxDenominator+1-maxDenominator);
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=FastMath.max(0,maxDenominator+1-maxDenominator);
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=BlockRealMatrix.BLOCK_SIZE;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkIndex(maxDenominator+maxDenominator-1);
long p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkIndex(maxDenominator+maxDenominator-1);
long p2=maxDenominator;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkIndex(maxDenominator+maxDenominator-1);
int p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkIndex(maxDenominator+maxDenominator-1);
int p2=maxDenominator;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
printMethod();
long p2=maxDenominator;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
printMethod();
int p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
printMethod();
int p2=maxDenominator;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=getEvaluations();
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=0;
long q2=getEvaluations();
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=getEvaluations();
int q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=0;
int q2=getEvaluations();
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=getEvaluations();
long q2=getEvaluations();
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=maxDenominator;
long q2=getEvaluations();
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=getEvaluations();
int q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=0;
int q2=getEvaluations();
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=getEvaluations();
long q2=getEvaluations();
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=maxDenominator;
long q2=getEvaluations();
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=getEvaluations();
int q2=getEvaluations();
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long p2=maxDenominator;
int q2=getEvaluations();
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=getEvaluations();
int q2=getEvaluations();
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int p2=maxDenominator;
int q2=getEvaluations();
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
char p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!ArithmeticUtils.isPowerOfTwo(n)){
throw new MathIllegalArgumentException(LocalizedFormats.NOT_POWER_OF_TWO,Integer.valueOf(n));
}
int p2=0;
long q2=1;
int n=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.fraction.BigFraction,295
UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

========
long q2=1;
long n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x.length<3){
throw new NumberIsTooSmallException(LocalizedFormats.NUMBER_OF_POINTS,x.length,3,true);
}
long q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x.length<2){
throw new NumberIsTooSmallException(LocalizedFormats.NUMBER_OF_POINTS,x.length,2,true);
}
long q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
assert b.length == n;

long q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long q2=1;
double n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Precision.equals(value,0.0,value)){
hPrev=small;
}
long q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int q2=1;
double n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==0){
throw new NoDataException(LocalizedFormats.POLYNOMIAL);
}
long q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((int)(value*n)<2){
throw new NumberIsTooSmallException(LocalizedFormats.BANDWIDTH,bandwidthInPoints,2,true);
}
long q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isPrime(n)){
return n;
}
long q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(0==n%3){
n+=2;
}else if(1==rem){
n+=4;
}
long q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n-n*value>=1){
throw new NumberIsTooLargeException(hDouble,1.0,false);
}
long q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n<=1&&n==4*mant.length-3){
return super.round(n);
}
long q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long q2=1;
int n=((int)(q1>>>52))&0x7ff;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int q2=1;
int n=((int)(q1>>>52))&0x7ff;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long q2=maxDenominator;
int n=maxDenominator;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long q2=maxDenominator;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long q2=1;
int n=maxDenominator;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int q2=maxDenominator;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int q2=1;
int n=maxDenominator;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int q2=maxDenominator;
int n=maxDenominator;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long q2=1;
int n=n-1;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long q2=1;
int n=Integer.numberOfTrailingZeros(n-1);
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!ArithmeticUtils.isPowerOfTwo(n)){
throw new MathIllegalArgumentException(LocalizedFormats.NOT_POWER_OF_TWO,Integer.valueOf(n));
}
long q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long q2=(householderVectors.length>=n)?1:1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long q2=(householderVectors.length>=n)?1:0;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!ArithmeticUtils.isPowerOfTwo(n)){
throw new MathIllegalArgumentException(LocalizedFormats.NOT_POWER_OF_TWO_PLUS_ONE,Integer.valueOf(f.length));
}
long q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long q2=getEvaluations();
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long q2=1;
int n=getEvaluations();
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double q2=1;
double n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n!=sample2.length){
throw new DimensionMismatchException(n,sample2.length);
}
long q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(value)<value){
return false;
}
long q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n<=0){
throw new NotStrictlyPositiveException(n);
}
long q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
printMethod();
long q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=(int)(q2%n);
long q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(0==n){
return gcdPositive(FastMath.abs((int)q1),n);
}
long q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value>=value){
throw new NumberIsTooLargeException(min,max,false);
}
long q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long q2=FastMath.max(0,n+1-n);
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long q2=BlockRealMatrix.BLOCK_SIZE;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkIndex(maxDenominator+n-1);
long q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkIndex(maxDenominator+n-1);
long q2=maxDenominator;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkIndex(maxDenominator+n-1);
int q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkIndex(maxDenominator+n-1);
int q2=maxDenominator;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
printMethod();
long q2=maxDenominator;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
printMethod();
int q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
printMethod();
int q2=maxDenominator;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int q2=getEvaluations();
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long q2=getEvaluations();
int n=getEvaluations();
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int q2=1;
int n=getEvaluations();
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int q2=getEvaluations();
int n=getEvaluations();
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
char q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!ArithmeticUtils.isPowerOfTwo(n)){
throw new MathIllegalArgumentException(LocalizedFormats.NOT_POWER_OF_TWO,Integer.valueOf(n));
}
int q2=1;
int n=0;
boolean stop=false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.fraction.BigFraction,296
org.apache.commons.math3.fraction.BigFraction,298
UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

========
a1=((long)FastMath.floor(r1)*p1)+p0;
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++n;
 final double r1=1.0/(r0-a0);
 final int a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a1>a0){
throw new FractionConversionException(value,a0,1l);
}
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(a1)>a0){
throw new FractionConversionException(value,a0,1l);
}
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++n;
 final int r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++n;
checkIndex(n+n-1);
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++n;
checkIndex(n+n-1);
 final int r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++n;
 final long r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=(int)(a1%n);
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(0==n){
return gcdPositive(FastMath.abs((int)q2),n);
}
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++n;
assert b.length == n;

 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Precision.equals(r1,0.0,value)){
dN=small;
}
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(r1>=1){
throw new NumberIsTooLargeException(hDouble,1.0,false);
}
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++sign;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++n;
 final double r1=1.0/(r0-a0);
if(n<=0){
throw new NotStrictlyPositiveException(n);
}
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++n;
 final double r1=1.0/(x-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.r1=new double[n];
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++n;
 final double r1=1.0/(r0-medianResidual);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++n;
 final double r1=1.0/(r0-a0);
n=smallTrialDivision(n,new ArrayList<Integer>(32));
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++n;
 final double r1=1.0/(r0-a0);
if(1==n){
return new ArrayList<Integer>(32);
}
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
boundedTrialDivision(n,r1,new ArrayList<Integer>(32));
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=n-(n-n)/n*n-n;
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n=n+(n-n)/n;
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>n){
 final int a1=n;
jpt=ipt-n;
ipt=tmp2;
}
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=n-(n-n)/n*n-n;
++n;
 final int r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=n+(n-n)/n;
++n;
 final int r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=n-(n-n)/n*n-n;
n=n+(n-n)/n;
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n=n-(n-n)/n*n-n;
n=n+(n-n)/n;
++n;
 final int r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
r1*=value;
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++initialTrustRegionRadius;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++t;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++n;
 final int r1=1.0/(r0-a0);
 final int a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++beta;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++sn;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++nact;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++alpha;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>n){
 final int a1=n;
jpt=ipt-n;
ipt=tmp2;
}
++n;
 final int r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=n-(n-n)/n*n-n;
if(n>n){
 final int a1=n;
jpt=ipt-n;
ipt=tmp2;
}
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=n+(n-n)/n;
if(n>n){
 final int a1=n;
jpt=ipt-n;
ipt=tmp2;
}
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=n-(n-n)/n*n-n;
if(n>n){
 final int a1=n;
jpt=ipt-n;
ipt=tmp2;
}
++n;
 final int r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=n+(n-n)/n;
if(n>n){
 final int a1=n;
jpt=ipt-n;
ipt=tmp2;
}
++n;
 final int r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=n-(n-n)/n*n-n;
n=n+(n-n)/n;
if(n>n){
 final int a1=n;
jpt=ipt-n;
ipt=tmp2;
}
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=n-(n-n)/n*n-n;
n=n+(n-n)/n;
if(n>n){
 final int a1=n;
jpt=ipt-n;
ipt=tmp2;
}
++n;
 final int r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a1==0){
throw new NoDataException(LocalizedFormats.POLYNOMIAL);
}
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.fraction.BigFraction,299
org.apache.commons.math3.fraction.BigFraction,300
========
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
q2=(a1*q1)+q0;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++n;
q2=(a1*q1)+q0;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double r1=1.0/(r0-a0);
 final int a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a0>a1){
throw new FractionConversionException(value,a0,1l);
}
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(p2)>a1){
throw new FractionConversionException(value,a0,1l);
}
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p1=p2;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
a1=q1;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
q1=q2;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p1=p2;
q1=q2;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p1=p2;
a1=q1;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
a1=q1;
q1=q2;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p1=p2;
a1=q1;
q1=q2;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.fraction.BigFraction,301
========
++n;
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final int a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a1>q1){
throw new FractionConversionException(value,a0,1l);
}
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final long a1=(long)FastMath.floor(r1);
if(r1>value||x<-value){
continue;
}
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(q2)>q1){
throw new FractionConversionException(value,a0,1l);
}
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.apache.commons.math3.fraction.BigFraction,302
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((FastMath.abs(p2)>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
if(FastMath.abs(q2-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
numerator=BigInteger.valueOf(q2);
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
denominator=BigInteger.ONE;
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
numerator=BigInteger.valueOf(q2);
if(FastMath.abs(q2-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
denominator=BigInteger.ONE;
if(FastMath.abs(q2-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;

if(FastMath.abs(q2-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
numerator=BigInteger.valueOf(q2);
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;
if(FastMath.abs(q2-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
numerator=BigInteger.valueOf(q2);
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;

if(FastMath.abs(q2-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;

if(FastMath.abs(q2-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;

if(FastMath.abs(q2-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if(n<0){
throw new ArrayIndexOutOfBoundsException(index);
}
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if(n+1>n){
numElements=index+1;
}
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n+=1;
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(shouldContract()){
contract();
}
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new MathIllegalStateException(LocalizedFormats.CANNOT_SUBSTITUTE_ELEMENT_FROM_EMPTY_ARRAY);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
MatrixUtils.checkRowIndex(this,n);
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
MatrixUtils.checkColumnIndex(this,n);
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
MatrixUtils.checkRowIndex(this,n);
MatrixUtils.checkColumnIndex(this,n);
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new NumberIsTooLargeException(n,n,false);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
this(n,n,value);
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)&&(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.apache.commons.math3.fraction.BigFraction,303
========
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(p2)>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((p2>overflow)||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((p2>overflow)&&(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&(FastMath.abs(value-value)>epsilon)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((p2>overflow)||(FastMath.abs(value-value)>epsilon)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((p2>overflow)&&(FastMath.abs(value-value)>epsilon)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)||(FastMath.abs(value-value)>epsilon)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n<maxIterations&&FastMath.abs(value-value)>epsilon&&q2<maxDenominator){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n<maxIterations&&FastMath.abs(value-value)>epsilon||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((p2>overflow)||q2<maxDenominator){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n<maxIterations&&FastMath.abs(value-value)>epsilon&&(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((p2>overflow)&&q2<maxDenominator){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n<maxIterations&&FastMath.abs(value-value)>epsilon||q2<maxDenominator){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i]>value)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n>=n)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((p2>overflow)||(q2>overflow)){
if(FastMath.abs(q2-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((p2>overflow)||(q2>overflow)){
numerator=BigInteger.valueOf(q2);
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((p2>overflow)||(q2>overflow)){
denominator=BigInteger.ONE;
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((p2>overflow)||(q2>overflow)){
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((p2>overflow)||(q2>overflow)){
numerator=BigInteger.valueOf(q2);
if(FastMath.abs(q2-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((p2>overflow)||(q2>overflow)){
denominator=BigInteger.ONE;
if(FastMath.abs(q2-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((p2>overflow)||(q2>overflow)){
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;

if(FastMath.abs(q2-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((p2>overflow)||(q2>overflow)){
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((p2>overflow)||(q2>overflow)){
numerator=BigInteger.valueOf(q2);
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((p2>overflow)||(q2>overflow)){
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((p2>overflow)||(q2>overflow)){
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;
if(FastMath.abs(q2-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((p2>overflow)||(q2>overflow)){
numerator=BigInteger.valueOf(q2);
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;

if(FastMath.abs(q2-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((p2>overflow)||(q2>overflow)){
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;

if(FastMath.abs(q2-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((p2>overflow)||(q2>overflow)){
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((p2>overflow)||(q2>overflow)){
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;

if(FastMath.abs(q2-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((p2>overflow)||(q2>overflow)){
if(FastMath.abs(q2-value)<epsilon){
this.numerator=(int)a0;
this.denominator=1;
return ;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((p2>overflow)||(q2>overflow)){
this.numerator=(int)q2;
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((p2>overflow)||(q2>overflow)){
this.denominator=1;
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((p2>overflow)||(q2>overflow)){
this.numerator=(int)q2;
this.denominator=1;

throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((p2>overflow)||(q2>overflow)){
throw new NumberIsTooLargeException(n,n,false);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this(n,n,value);
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((p2>overflow)||(q2>overflow)){
throw new MathIllegalStateException(LocalizedFormats.CANNOT_SUBSTITUTE_ELEMENT_FROM_EMPTY_ARRAY);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.fraction.BigFraction,306
org.apache.commons.math3.fraction.BigFraction,309
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(p2)>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((p2>overflow)||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
q2=(a1*q1)+q0;
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
q2=(a1*q1)+q0;
if((FastMath.abs(p2)>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
q2=(a1*q1)+q0;
if((p2>overflow)||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,maxIterations);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,1l);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((p2>overflow)&&(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((p2>overflow)||(FastMath.abs(convergent-value)>epsilon)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n<maxIterations&&FastMath.abs(convergent-value)>epsilon&&q2<maxDenominator){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n<maxIterations&&FastMath.abs(convergent-value)>epsilon||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((p2>overflow)||q2<maxDenominator){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((p2>overflow)&&q2<maxDenominator){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i]>value)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n>=n)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((p2>overflow)||(q2>overflow)){
if(FastMath.abs(q2-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((p2>overflow)||(q2>overflow)){
numerator=BigInteger.valueOf(q2);
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((p2>overflow)||(q2>overflow)){
denominator=BigInteger.ONE;
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((p2>overflow)||(q2>overflow)){
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((p2>overflow)||(q2>overflow)){
numerator=BigInteger.valueOf(q2);
if(FastMath.abs(q2-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((p2>overflow)||(q2>overflow)){
denominator=BigInteger.ONE;
if(FastMath.abs(q2-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((p2>overflow)||(q2>overflow)){
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;

if(FastMath.abs(q2-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((p2>overflow)||(q2>overflow)){
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((p2>overflow)||(q2>overflow)){
numerator=BigInteger.valueOf(q2);
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((p2>overflow)||(q2>overflow)){
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((p2>overflow)||(q2>overflow)){
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;
if(FastMath.abs(q2-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((p2>overflow)||(q2>overflow)){
numerator=BigInteger.valueOf(q2);
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;

if(FastMath.abs(q2-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((p2>overflow)||(q2>overflow)){
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;

if(FastMath.abs(q2-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((p2>overflow)||(q2>overflow)){
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((p2>overflow)||(q2>overflow)){
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.ONE;

if(FastMath.abs(q2-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((p2>overflow)||(q2>overflow)){
if(FastMath.abs(overflow-value)<epsilon){
this.numerator=(int)a0;
this.denominator=1;
return ;
}
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((p2>overflow)||(q2>overflow)){
this.numerator=(int)overflow;
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((p2>overflow)||(q2>overflow)){
this.denominator=1;
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((p2>overflow)||(q2>overflow)){
this.numerator=(int)overflow;
this.denominator=1;

throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((p2>overflow)||(q2>overflow)){
throw new MathIllegalStateException(LocalizedFormats.CANNOT_SUBSTITUTE_ELEMENT_FROM_EMPTY_ARRAY);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final int convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((p2>overflow)||(q2>overflow)){
throw new NumberIsTooLargeException(n,n,false);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this(n,n,value);
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((p2>overflow)||(q2>overflow)){
throw new ArrayIndexOutOfBoundsException(n);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n+1>n){
numElements=index+1;
}
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n+n)>=internalArray.length){
expandTo(startIndex+(index+1));
}
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.fraction.BigFraction,310
========
if(n<maxIterations&&FastMath.abs(convergent-value)>epsilon&&q2<maxDenominator){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n<maxIterations&&FastMath.abs(convergent-value)>epsilon&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&q2<maxDenominator){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=nextX;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
yB=value;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
absYB=FastMath.abs(epsilon);
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
++n;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
yB=value;
absYB=FastMath.abs(epsilon);
++n;

q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
largest=FastMath.abs(value);
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=b;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=x;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=m;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=d;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=s;
p1=p2;
q0=q1;
q1=s;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=s;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=s;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=x;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
shift.w=-0.4375*convergent;
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
shift.exShift+=shift.x;
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
shift.x=0.75*convergent;
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
shift.y=0.75*convergent;
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
shift.exShift+=shift.x;
shift.x=0.75*convergent;
shift.y=0.75*convergent;

stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(r0-epsilon)<=value||FastMath.abs(r0)<=convergent){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(r0-epsilon)<=value&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&FastMath.abs(r0)<=convergent){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(r0-epsilon)<=value&&FastMath.abs(r0)<=convergent){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=a0;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
min_dist=epsilon;
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(convergent>HALF&&Math.abs(value)<ONE_OVER_FOUR){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(convergent>HALF&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&Math.abs(value)<ONE_OVER_FOUR){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=HALF;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
vlag=ONE_OVER_FOUR;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=tol1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=sumObserved;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=sumExpected;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
rescale=true;
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
ratio=convergent/value;
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
rescale=true;
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=sumObserved;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=sumObserved;
}else {
ratio=convergent/value;
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
rescale=true;
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=sumExpected;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=sumExpected;
}else {
ratio=convergent/value;
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
rescale=true;
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
ratio=convergent/value;
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
rescale=true;
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=sumObserved;
}else {
ratio=convergent/value;
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
rescale=true;
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=sumExpected;
}else {
ratio=convergent/value;
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=ratio;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
return ;
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
denominator=BigInteger.ONE;
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
numerator=BigInteger.valueOf(a0);
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
numerator=BigInteger.valueOf(a0);
return ;

stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(r0)<=r0&&value<=2.0)||epsilon<=r0*convergent){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(r0)<=r0&&r0<=costRelativeTolerance&&value<=2.0)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&epsilon<=r0*convergent){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((costRelativeTolerance<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((preRed<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<ratio)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(stop&&(FastMath.abs(epsilon-convergent)<=value)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(stop&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&(FastMath.abs(epsilon-convergent)<=value)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>convergence)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(r0)<=0.1*value)||((convergent==0)&&(r0<=epsilon))){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(r0)<=0.1*value)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&((convergent==0)&&(r0<=epsilon))){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>fp)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>previousFP)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(r0)<=0.1*value)&&((convergent==0)&&(r0<=epsilon))){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((q2==0)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&(q2==0)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((q2==0)&&(q2==0)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(r0)<=0.1*value||(convergent==0&&r0<=epsilon&&epsilon<0)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(r0)<=0.1*value&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&(convergent==0&&r0<=epsilon&&previousFP<0)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(r0)<=0.1*value&&(FastMath.abs(convergent-value)>previousFP)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value>convergent*getRelativeThreshold()&&value>getAbsoluteThreshold()){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value>convergent*getRelativeThreshold()&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&value>getAbsoluteThreshold()){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(r1)<=r1){
return r1;
}
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(computeObjectiveValue(r1-(FastMath.signum(r1)*FastMath.signum(r1))*(r1-r1)/FastMath.sqrt(r0)))<=r1){
return r1-(FastMath.signum(r1)*FastMath.signum(r1))*(r1-r1)/FastMath.sqrt(r0);
}
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=PRIMES_LAST;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
maxDenominator=(int)(p2*maxDenominator%n);
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(0==maxDenominator){
return gcdPositive(FastMath.abs((int)p2),n);
}
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(value-epsilon)>convergent)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&(FastMath.abs(value-epsilon)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>convergent)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=root;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
pendingEvent=true;
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(value-epsilon)>convergence)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(epsilon-r1)<=value)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&(FastMath.abs(epsilon-r1)<=value)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=t;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
nextAction=EventHandler.Action.CONTINUE;
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=gmax;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=gmin;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((epsilon<=r0)||(epsilon<=getAbsoluteAccuracy())){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((epsilon<=r0)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&(epsilon<=getAbsoluteAccuracy())){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxIterations!=ITERATION_CHECK_DISABLED&&n>=maxIterations){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxIterations!=ITERATION_CHECK_DISABLED&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&n>=maxIterations){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(r0)<=r0&&r0<=costRelativeTolerance&&value<=2.0)&&epsilon<=r0*convergent){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((costRelativeTolerance<maxIterations)&&epsilon<=r0*convergent){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((preRed<maxIterations)&&epsilon<=r0*convergent){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<ratio)&&epsilon<=r0*convergent){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((costRelativeTolerance<ratio)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((preRed<ratio)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((costRelativeTolerance<ratio)&&epsilon<=r0*convergent){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((preRed<ratio)&&epsilon<=r0*convergent){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(value)<=convergent&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(epsilon)<convergent){
break;
}
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p2;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=q2;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p2;
p1=p2;
q0=q1;
q1=q2;
a0=q2;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
setCost(r0);
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isInfinite(value)){
throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE,value);
}
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(value)){
throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,value);
}
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
value=r1;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
value=value;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
r0=value;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n++;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
r0=value;
n++;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
stop=maxIterations>0;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(maxIterations)==n){
return ;
}
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
r0=r1;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
r1=r1;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
r1=Math.abs(convergent-value);
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxDenominator==(realEigenvalues.length-1)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((length<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((r0<=value)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&(r0<=value)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>limit)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(r0<=value){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&r0<=value){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
maxMembership=membershipMatrix[i][j];
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=hInt;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
reject=true;
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
hNew=r1;
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((costPerTimeUnit[k]<convergent*costPerTimeUnit[k-1])){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<n)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>orderControl2)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(r0)<=TWO_EPS&&r0<=TWO_EPS&&value<=2.0){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(r0)<=TWO_EPS&&r0<=TWO_EPS&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&value<=2.0){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(r0)<=2.2204E-16)&&(epsilon<=2.2204E-16)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(r0)<=2.2204E-16)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&(epsilon<=2.2204E-16)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=errorTolerance;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(convergent>value&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(convergent<value&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=stepsq;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this instanceof SparseRealVector){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&this instanceof SparseRealVector){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(stop&&stop){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&stop){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p=realEigenvalues[j];
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
delta=value-epsilon;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((row<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super(convergent,convergent,maxDenominator,maxDenominator);
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
maxDenominator=n;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
x=result[0];
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
direc[bigInd]=direc[lastInd];
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
direc[lastInd]=result[1];
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
x=result[0];
direc[bigInd]=direc[lastInd];
direc[lastInd]=result[1];

p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&maxDenominator<=n){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
stplen=epsilon;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&maxDenominator>=n){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
this.maxDenominator=k;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
maxDenominator=maxDenominator;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&maxDenominator>=n){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&maxDenominator>=n){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
return ;
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
return ;
stop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&maxDenominator>=n){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
return ;
stop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
d[m]=convergent*X;
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
r[m1]=1.0/X;
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
rhs[m]=rhs[m]/X;
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
d[m]=convergent*X;
r[m1]=1.0/X;
rhs[m]=rhs[m]/X;

stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
sc[n]=0;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(convergent>HALF&&Math.abs(value)<ONE_OVER_FOUR){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=HALF;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(convergent>HALF&&Math.abs(value)<ONE_OVER_FOUR){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
vlag=ONE_OVER_FOUR;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(convergent>HALF&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=HALF;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(convergent>HALF&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
vlag=ONE_OVER_FOUR;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&Math.abs(value)<ONE_OVER_FOUR){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=HALF;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&Math.abs(value)<ONE_OVER_FOUR){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
vlag=ONE_OVER_FOUR;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
vlag=ONE_OVER_FOUR;
a0=a1;
r0=HALF;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(convergent>HALF&&Math.abs(value)<ONE_OVER_FOUR){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
vlag=ONE_OVER_FOUR;
a0=a1;
r0=HALF;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(convergent>HALF&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
vlag=ONE_OVER_FOUR;
a0=a1;
r0=HALF;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&Math.abs(value)<ONE_OVER_FOUR){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
vlag=ONE_OVER_FOUR;
a0=a1;
r0=HALF;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
bdtest+=HALF*epsilon;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=smallTrialDivision(n,new ArrayList<Integer>(32));
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
boundedTrialDivision(n,(int)FastMath.sqrt(n),new ArrayList<Integer>(32));
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=p;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=q;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n<=0){
throw new NoDataException(LocalizedFormats.INSUFFICIENT_DIMENSION);
}
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
r0=r1;
r1=r1;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
r0=r1;
r1=Math.abs(convergent-value);
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
r1=r1;
r1=Math.abs(convergent-value);
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
r0=r1;
r1=r1;
r1=Math.abs(convergent-value);
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((startIndex<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<numElements)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
maxDenominator+=1;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(shouldContract()){
contract();
}
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=1373653){
maxDenominator=3;
}
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=25326001){
maxDenominator=4;
}
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this(maxDenominator,maxIterations,value);
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon>=value){
throw new NumberIsTooLargeException(min,max,false);
}
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>value)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((maxIterations>=n)||(work[i]>value)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((maxIterations>=n)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((i<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<end)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((maxIterations>=n)&&(FastMath.abs(convergent-value)>value)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<index)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxDenominator<0){
throw new ArrayIndexOutOfBoundsException(index);
}
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxDenominator+1>maxDenominator){
numElements=index+1;
}
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n<2){
throw new NumberIsTooSmallException(n,2,true);
}
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=SmallPrimes.smallTrialDivision(n,new ArrayList<Integer>());
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(SmallPrimes.millerRabinPrimeTest(n)){
new ArrayList<Integer>().add(n);
return factors;
}
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new ArrayList<Integer>().add(rhoBrent(n));
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new ArrayList<Integer>().add(n/rhoBrent(n));
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.n=n;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,n);
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkColumnIndex(this,n);
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,n);
MatrixUtils.checkColumnIndex(this,n);
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(convergent<Double.MIN_VALUE){
throw new NotStrictlyPositiveException(threshold);
}
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n!=maxDenominator){
throw new DimensionMismatchException(numMeanColumns,numCols);
}
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=d1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
x=result[0];
direc[bigInd]=direc[lastInd];
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
x=result[0];
direc[lastInd]=result[1];
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
x=result[0];
x=result[0];
direc[bigInd]=direc[lastInd];
direc[lastInd]=result[1];

p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
direc[bigInd]=direc[lastInd];
direc[lastInd]=result[1];
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
direc[bigInd]=direc[lastInd];
x=result[0];
direc[bigInd]=direc[lastInd];
direc[lastInd]=result[1];

p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
direc[lastInd]=result[1];
x=result[0];
direc[bigInd]=direc[lastInd];
direc[lastInd]=result[1];

p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
x=result[0];
direc[bigInd]=direc[lastInd];
direc[lastInd]=result[1];
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
x=result[0];
direc[bigInd]=direc[lastInd];
x=result[0];
direc[bigInd]=direc[lastInd];
direc[lastInd]=result[1];

p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
x=result[0];
direc[lastInd]=result[1];
x=result[0];
direc[bigInd]=direc[lastInd];
direc[lastInd]=result[1];

p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
direc[bigInd]=direc[lastInd];
direc[lastInd]=result[1];
x=result[0];
direc[bigInd]=direc[lastInd];
direc[lastInd]=result[1];

p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
x=result[0];
direc[bigInd]=direc[lastInd];
direc[lastInd]=result[1];
x=result[0];
direc[bigInd]=direc[lastInd];
direc[lastInd]=result[1];

p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxDenominator<maxIterations&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(convergent<=0){
throw new NotStrictlyPositiveException(abs);
}
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=convergent;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(convergent<=0){
throw new NotStrictlyPositiveException(abs);
}
r0=value;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(convergent<=0){
throw new NotStrictlyPositiveException(abs);
}
epsilon=convergent;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
r0=value;
epsilon=convergent;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(convergent<=0){
throw new NotStrictlyPositiveException(abs);
}
r0=value;
epsilon=convergent;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!isNonSingular()){
throw new SingularMatrixException();
}
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(xval.length!=yval.length){
throw new DimensionMismatchException(xval.length,yval.length);
}
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n-1<n&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
super();
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n==0)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n==n)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&(n==0)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<k)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
CombinatoricsUtils.checkBinomial(n,n);
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n==1)||(k==n-1)){
return n;
}
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>n/2){
return binomialCoefficientDouble(n,n-k);
}
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n<67){
return binomialCoefficient(n,n);
}
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n==n)&&(n==0)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
checkIndex(maxDenominator);
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkIndex(maxDenominator+n-1);
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new double[n][0]=0.0;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkIndex(maxDenominator);
checkIndex(maxDenominator+n-1);
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==1){
return new double[]{0};
}
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&n==4*mant.length-3){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(convergent<knots[0]||convergent>knots[n]){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n==1)||(k==n-1)){
return FastMath.log(n);
}
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n<67){
return FastMath.log(binomialCoefficient(n,n));
}
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n<1030){
return FastMath.log(binomialCoefficientDouble(n,n));
}
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>n/2){
return binomialCoefficientLog(n,n-k);
}
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
CombinatoricsUtils.checkBinomial(n,n);
if((n==0)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
CombinatoricsUtils.checkBinomial(n,n);
if((n==n)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<k)&&(n==0)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
CombinatoricsUtils.checkBinomial(n,n);
if((n<maxIterations)&&(n==0)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
CombinatoricsUtils.checkBinomial(n,n);
if((n<k)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
CombinatoricsUtils.checkBinomial(n,n);
if((n==n)&&(n==0)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
CombinatoricsUtils.checkBinomial(n,n);
if((n<k)&&(n==0)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==Integer.MAX_VALUE){
return 1;
}
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxDenominator<=0){
throw new NotStrictlyPositiveException(LocalizedFormats.PERMUTATION_SIZE,k);
}
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathArrays.shuffle(getNatural(n),getRandomGenerator());
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n<2){
throw new NumberIsTooSmallException(LocalizedFormats.BANDWIDTH,bandwidthInPoints,2,true);
}
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Arrays.fill(new double[n],1);
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=n|1;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isPrime(n)){
return n;
}
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(0==n%3){
n+=2;
}else if(1==rem){
n+=4;
}
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n<21){
return FACTORIALS[n];
}
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((maxIterations==1)||(maxIterations==n-1)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((maxIterations==1)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&(maxIterations==n-1)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((k<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((maxIterations==1)&&(maxIterations==n-1)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int maxIterations : SmallPrimes.PRIMES){
if(0==(n%p)){
return n==p;
}
}
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(convergent)||Double.isInfinite(d)){
return d;
}
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxIterations>2097){
return (convergent>0)?Double.POSITIVE_INFINITY:Double.NEGATIVE_INFINITY;
}
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!ArithmeticUtils.isPowerOfTwo(n)){
throw new MathIllegalArgumentException(LocalizedFormats.NOT_POWER_OF_TWO_PLUS_ONE,Integer.valueOf(f.length));
}
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(r0)<=0.1*value)&&(FastMath.abs(convergent-value)>fp)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(r0)<=0.1*value)&&(FastMath.abs(convergent-value)>previousFP)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n==maxIterations)||(maxIterations==0)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n==maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&(maxIterations==0)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n==maxIterations)&&(maxIterations==0)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<k)&&(maxIterations==0)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n>-1023)&&(n<1024)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n>-1023)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&(n<1024)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n>-127)&&(n<128)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n>-127)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&(n<128)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>20){
throw new MathArithmeticException();
}
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.apache.commons.math3.fraction.BigFraction,313
org.apache.commons.math3.fraction.BigFraction,314
org.apache.commons.math3.fraction.BigFraction,315
org.apache.commons.math3.fraction.BigFraction,316
org.apache.commons.math3.fraction.BigFraction,317
org.apache.commons.math3.fraction.BigFraction,318
org.apache.commons.math3.fraction.BigFraction,320
org.apache.commons.math3.fraction.BigFraction,322
========
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((FastMath.abs(p2)>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if(n<maxIterations&&FastMath.abs(convergent-value)>epsilon&&q2<maxDenominator){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if(n<maxIterations&&FastMath.abs(convergent-value)>epsilon&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&q2<maxDenominator){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if(n<maxIterations&&FastMath.abs(convergent-value)>epsilon&&q2<maxDenominator){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if(n<maxIterations&&FastMath.abs(convergent-value)>epsilon&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&q2<maxDenominator){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((FastMath.abs(p2)>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if(n<maxIterations&&FastMath.abs(convergent-value)>epsilon&&q2<maxDenominator){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((FastMath.abs(p2)>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if(n<maxIterations&&FastMath.abs(convergent-value)>epsilon&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((FastMath.abs(p2)>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&q2<maxDenominator){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if(n<maxIterations&&FastMath.abs(convergent-value)>epsilon&&q2<maxDenominator){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if(n<maxIterations&&FastMath.abs(convergent-value)>epsilon&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&q2<maxDenominator){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new double[n][n-1]=0;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
++r;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
++s;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=n;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
do {
++tol1;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
++agingA;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
++agingB;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
xB=value;
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
yB=epsilon;
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
absYB=FastMath.abs(r1);
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
agingB=0;
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
xB=value;
yB=epsilon;
absYB=FastMath.abs(r1);
agingB=0;

++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
xA=value;
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
yA=epsilon;
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
absYA=FastMath.abs(r0);
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
agingA=0;
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
n++;
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
do {
xA=value;
yA=epsilon;
absYA=FastMath.abs(r0);
agingA=0;
n++;

++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=value/convergent;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=FastMath.sqrt(FastMath.abs(epsilon))/convergent;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=p/FastMath.sqrt(epsilon*p+epsilon*q);
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=q/FastMath.sqrt(epsilon*p+epsilon*q);
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
++m;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
if(1!=gcdPositive(FastMath.abs(maxDenominator),n)){
return gcdPositive(FastMath.abs(maxDenominator),n);
}
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
k=maxDenominator+n;
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
if(1!=gcdPositive(FastMath.abs(maxDenominator),n)){
return gcdPositive(FastMath.abs(maxDenominator),n);
}
k=maxDenominator+n;

++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(r0<=0.0){
den=1.0;
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
index=(int)FastMath.rint(r1);
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
agingA=0;
n++;

++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
agingB=0;
++agingA;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
agingA=0;
++agingA;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
n++;
++agingA;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
agingB=0;
++agingB;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
agingA=0;
++agingB;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
n++;
++agingB;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
agingB=0;
agingA=0;
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
agingB=0;
n++;
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
agingA=0;
n++;
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
agingB=0;
agingA=0;
++agingA;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
agingB=0;
n++;
++agingA;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
agingA=0;
n++;
++agingA;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
agingB=0;
agingA=0;
++agingB;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
agingB=0;
n++;
++agingB;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
agingA=0;
n++;
++agingB;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
agingB=0;
agingA=0;
n++;
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
agingB=0;
agingA=0;
n++;
++agingA;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
agingB=0;
agingA=0;
n++;
++agingB;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
++n;
 final double r1=1.0/(real-real);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
++n;
 final double r1=1.0/(imaginary-imaginary);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
++n;
 final double r1=1.0/(real-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
++n;
 final double r1=1.0/(q-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
++n;
 final double r1=1.0/(r0-imaginary);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
++n;
 final double r1=1.0/(imaginary-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
++n;
 final double r1=1.0/(r0-real);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
convergent=floor(value);
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(convergent==value){
return y;
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
convergent+=1.0;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(convergent==0){
return value*y;
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
++ra;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
sumWeights+=r1;
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
++j;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
s=r1;
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
ej*=convergent/(value+value);
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
s1=r0+epsilon/((n*2)+1);
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
s=r1;
ej*=convergent/(value+value);
s1=r0+epsilon/((n*2)+1);

++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value-floor(value)<0.5){
return floor(value);
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
++p;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
matrixT[idx-1][idx-1]=epsilon/matrixT[idx][idx-1];
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
++minStep;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
convergent=computeObjectiveValue(new double[n]);
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
++h;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
r0=FastMath.sqrt(yDDotOnScale)/r0;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
r0=FastMath.min(100.0*FastMath.abs(h),r1);
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
r0=FastMath.max(h,1.0E-12*FastMath.abs(epsilon));
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(r0<getMinStep()){
h=getMinStep();
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(r0>getMaxStep()){
h=getMaxStep();
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!stop){
r0=-h;
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
CombinatoricsUtils.checkBinomial(n,n);
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n==1)||(k==n-1)){
return n;
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>n/2){
return binomialCoefficientDouble(n,n-k);
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n<67){
return binomialCoefficient(n,n);
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
stop=n>0;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(n)==n){
return ;
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=FastMath.abs(n);
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
stop=n>0;
n=FastMath.abs(n);
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a1<0){
yInt=SGN_MASK-yInt;
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n<0){
yInt=SGN_MASK_FLOAT-yInt;
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
++z;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
realEigenvalues[i]=convergent+value;
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
imagEigenvalues[i]=r1;
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
realEigenvalues[i+1]=convergent+value;
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
realEigenvalues[i]=convergent+value;
imagEigenvalues[i]=r1;
realEigenvalues[i+1]=convergent+value;
n++;

++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n<21){
return FACTORIALS[n];
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.value=FastMath.sqrt(this.beta);
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.epsilon=this.epsilon;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.epsilon=epsilon;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.epsilon=this.value;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.r0=0.0;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.epsilon=0.0;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.epsilon=1.0;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.epsilon=epsilon*alpha+this.value*this.beta;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.r1=FastMath.abs(epsilon)+MACH_PREC;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.convergent=this.r1;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
updateNorms();
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
printMethod();
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
value*=1.0E-20;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==0){
return Double.NaN;
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(ArithmeticUtils.mulAndCheck(n/gcd(a,n),b))==Integer.MIN_VALUE){
throw new MathArithmeticException(LocalizedFormats.LCM_OVERFLOW_32_BITS,n,n);
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(ArithmeticUtils.mulAndCheck(overflow/gcd(a,q2),b))==Long.MIN_VALUE){
throw new MathArithmeticException(LocalizedFormats.LCM_OVERFLOW_64_BITS,overflow,q2);
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
++PI;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(stop){
new ArrayList<Complex>().add(NaN);
return result;
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isInfinite()){
new ArrayList<Complex>().add(INF);
return result;
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=values.length;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.r1=epsilon;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=values.length;
this.r1=epsilon;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
r0=DEFAULT_ZERO_TOLERANCE;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
sum+=FACTORY.legendreHighPrecision(n,epsilon+n*(convergent-epsilon)/n,r1).integrate(new UnivariateFunction(){
  public double value(  double x) throws MathIllegalArgumentException, TooManyEvaluationsException {
    return computeObjectiveValue(x);
  }
}
);
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
++stepa;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon>=value){
throw new NumberIsTooLargeException(min,max,false);
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new StringBuilder().append('(');
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new StringBuilder().append(value);
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new StringBuilder().append(')');
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new StringBuilder().append('(');
new StringBuilder().append(value);
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new StringBuilder().append('(');
new StringBuilder().append(')');
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new StringBuilder().append(value);
new StringBuilder().append(')');
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new StringBuilder().append('(');
new StringBuilder().append(value);
new StringBuilder().append(')');
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n<2){
throw new NumberIsTooSmallException(n,2,true);
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n+=1;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(shouldContract()){
contract();
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n<=0){
throw new NoDataException(LocalizedFormats.INSUFFICIENT_DIMENSION);
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
previous=values[index];
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
newMapping=false;
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
previous=values[index];
newMapping=false;

++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(true){
++maxDenominator;
if(shouldGrowTable()){
growTable();
}
++n;
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super(convergent,value,n,n);
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n+1>n){
numElements=index+1;
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n+n)>=internalArray.length){
expandTo(startIndex+(index+1));
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
assert dataI.length == n;

do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new double[2][][0]=new double[n];
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new double[2][][1]=new double[n];
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=smallTrialDivision(n,new ArrayList<Integer>(32));
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
boundedTrialDivision(n,(int)FastMath.sqrt(n),new ArrayList<Integer>(32));
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
j-=n>>1;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
assert b.length == n;

do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dataR.length!=dataI.length){
throw new DimensionMismatchException(dataI.length,dataR.length);
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
++i;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.n=k;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==0){
throw new NoDataException(LocalizedFormats.POLYNOMIAL);
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
divdiff[j]=(divdiff[j+1]-divdiff[j])/convergent;
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,n);
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkColumnIndex(this,n);
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,n);
MatrixUtils.checkColumnIndex(this,n);
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=SmallPrimes.smallTrialDivision(n,new ArrayList<Integer>());
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(SmallPrimes.millerRabinPrimeTest(n)){
new ArrayList<Integer>().add(n);
return factors;
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new ArrayList<Integer>().add(rhoBrent(n));
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new ArrayList<Integer>().add(n/rhoBrent(n));
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
++wSubN0I;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
++errorTolerance;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x.length<2){
throw new NumberIsTooSmallException(LocalizedFormats.NUMBER_OF_POINTS,x.length,2,true);
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!isNonSingular()){
throw new SingularMatrixException();
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+temp;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
q2=Double.doubleToLongBits(value);
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n=n*result+(int)(q2^(temp>>>32));
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=n*result+maxIterations;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
++alpha;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n==1)||(k==n-1)){
return FastMath.log(n);
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n<67){
return FastMath.log(binomialCoefficient(n,n));
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n<1030){
return FastMath.log(binomialCoefficientDouble(n,n));
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>n/2){
return binomialCoefficientLog(n,n-k);
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
convergent=value;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.maxIterations=maxIterations;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this(maxIterations,n,value);
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
++beta;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkIndex(n);
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkIndex(n+n-1);
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkIndex(n);
checkIndex(n+n-1);
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!ArithmeticUtils.isPowerOfTwo(n)){
throw new MathIllegalArgumentException(LocalizedFormats.NOT_POWER_OF_TWO_CONSIDER_PADDING,Integer.valueOf(n));
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
try{
TWO_FIFTHS=new BigFraction(convergent,1.0E-20,10000);
}catch (FractionConversionException e1) {
  try {
    h=new BigFraction(hDouble,1.0e-10,10000);
  }
 catch (  FractionConversionException e2) {
    h=new BigFraction(hDouble,1.0e-5,10000);
  }
}

do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
++nact;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n++;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n==1){
new double[f.length][0]=0.0;
return transformed;
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new double[n][0]=0.0;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
++x;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
negative=true;
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
{
int (int)(value*1024.0)=(int)(value*1024.0);
double ExpFracTable.EXP_FRAC_TABLE_A[(int)(value*1024.0)]-1.0=ExpFracTable.EXP_FRAC_TABLE_A[intFrac]-1.0;
double r0=ExpFracTable.EXP_FRAC_TABLE_B[intFrac];
double epsilon+value=tempA+tempB;
tempB=-(temp-tempA);
tempA=temp;
temp=tempA*HEX_40000000;
convergent=tempA+temp-temp;
r1=tempB+(tempA-baseA);
epsilon=x-intFrac/1024.0;
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
value=zb*epsilon+0.041666664;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
value=zb*epsilon+0.16666667;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
value=zb*epsilon+0.5;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
value=zb*epsilon;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
value=-(epsilon+value-epsilon);
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.r0=fuzziness;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.n=k;
this.maxIterations=maxIterations;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.n=k;
this.r1=epsilon;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.maxIterations=maxIterations;
this.r1=epsilon;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.n=k;
this.maxIterations=maxIterations;
this.r1=epsilon;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==1){
return new double[]{0};
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=1;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n<=1&&n==4*mant.length-3){
return super.round(n);
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
printMethod();
value*=1.0E-20;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(knots.length<2){
throw new NumberIsTooSmallException(LocalizedFormats.NOT_ENOUGH_POINTS_IN_SPLINE_PARTITION,2,knots.length,false);
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(knots.length-1!=polynomials.length){
throw new DimensionMismatchException(polynomials.length,knots.length);
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.n=knots.length-1;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super();
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initializeMembershipMatrix();
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new double[2][][0]=new double[n];
new double[2][][1]=new double[n];
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==0){
throw new NoDataException();
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((int)(epsilon*n)<2){
throw new NumberIsTooSmallException(LocalizedFormats.BANDWIDTH,bandwidthInPoints,2,true);
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(r1<=0){
throw new NotStrictlyPositiveException(abs);
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
convergent=epsilon;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
r0=r1;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(r1<=0){
throw new NotStrictlyPositiveException(abs);
}
convergent=epsilon;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(r1<=0){
throw new NotStrictlyPositiveException(abs);
}
r0=r1;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
convergent=epsilon;
r0=r1;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(r1<=0){
throw new NotStrictlyPositiveException(abs);
}
convergent=epsilon;
r0=r1;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.n=n;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
r0=z*epsilon+0.16666666;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
r0=z*epsilon+0.5;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
r0=z*epsilon+1.0;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
r0=z*epsilon+-3.9405104E-20;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x.length<3){
throw new NumberIsTooSmallException(LocalizedFormats.NUMBER_OF_POINTS,x.length,3,true);
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new double[n+1][0]=0.0;
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isInfinite(value)){
throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_VALUE_CONVERSION);
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a1!=0){
q1|=0x0010000000000000L;
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(q2&0x8000000000000000L!=0){
q1=-m;
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(((int)(a1>>52))-1075<0){
numerator=BigInteger.valueOf(q2&0x000fffffffffffffL);
denominator=BigInteger.ZERO.flipBit(-k);
}else {
numerator=BigInteger.valueOf(m).multiply(BigInteger.ZERO.flipBit(k));
denominator=BigInteger.ONE;
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxDenominator<=0){
throw new NotStrictlyPositiveException(LocalizedFormats.PERMUTATION_SIZE,k);
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathArrays.shuffle(getNatural(n),getRandomGenerator());
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int n : SmallPrimes.PRIMES){
if(0==(n%p)){
return n==p;
}
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==Integer.MAX_VALUE){
return 1;
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
++scaledExponent;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
mantissa=q2<<1;
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
do {
mantissa=n<<1;
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>20){
throw new MathArithmeticException();
}
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
solvePhase1(new SimplexTableau(getFunction(),getConstraints(),getGoalType(),isRestrictedToNonNegative(),r1,maxDenominator,value));
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new SimplexTableau(getFunction(),getConstraints(),getGoalType(),isRestrictedToNonNegative(),r1,maxDenominator,value).dropPhase1Objective();
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
solvePhase1(new SimplexTableau(getFunction(),getConstraints(),getGoalType(),restrictToNonNegative(),value,maxDenominator));
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new SimplexTableau(getFunction(),getConstraints(),getGoalType(),restrictToNonNegative(),value,maxDenominator).dropPhase1Objective();
do {
++n;
 final double r1=1.0/(r0-a0);
 final long a1=(long)FastMath.floor(r1);
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}
 final double convergent=(double)p2/(double)q2;
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}
} while(!stop);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.fraction.BigFraction,324
UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

========
if(a0>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>=overflow){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>=maxIterations){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a0>=overflow){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a0>=maxIterations){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>=overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a0>=overflow){
throw new FractionConversionException(value,a0,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(overflow>=overflow){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(p2>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(overflow>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>=q2){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>=maxIterations){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(overflow>=q2){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(overflow>=maxIterations){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(p2>=overflow){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>=overflow){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(p2>=q2){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(p2>=maxIterations){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>=q2){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(overflow>=overflow){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(overflow>=q2){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(p2>=overflow){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(p2>=q2){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>=maxIterations){
throw new MaxCountExceededException(LocalizedFormats.NON_CONVERGENT_CONTINUED_FRACTION,maxIterations,value);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
throw new NotStrictlyPositiveException(maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iterations>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
throw new MaxCountExceededException(maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
if(n<21){
return FastMath.log(FACTORIALS[n]);
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(d>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
throw new DimensionMismatchException(maxIterations,n);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=q){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
if(0==n){
return gcdPositive(FastMath.abs((int)q2),n);
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
if(maxIterations<67){
return FastMath.log(binomialCoefficient(n,n));
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
if(maxIterations<1030){
return FastMath.log(binomialCoefficientDouble(n,n));
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
if(maxIterations<67){
return binomialCoefficient(n,n);
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
throw new DimensionMismatchException(data.length,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=length){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
throw new DimensionMismatchException(maxIterations,sample2.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=epsilon){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
if(n<0){
return 0;
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==Integer.MAX_VALUE){
return 1;
}
if(n>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
if(n<21){
return FACTORIALS[n];
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(k>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
throw new NumberIsTooLargeException(n,maxIterations,true);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>=maxDenominator){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(epsilon>=q2){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(epsilon>=maxDenominator){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>=out){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
if(1!=n){
return out;
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
throw new NoDataException(LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
throw new NotStrictlyPositiveException(LocalizedFormats.NOT_POSITIVE_NUMBER_OF_SAMPLES,Integer.valueOf(maxIterations));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(m>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(absN>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=omegaCount){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
if(FastMath.abs(maxIterations)==n){
return ;
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
stop=maxIterations>0;
if(n>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>=maxIterations){
if(1==n){
return new ArrayList<Integer>();
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=SmallPrimes.smallTrialDivision(n,new ArrayList<Integer>());
if(n>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
throw new NoDataException();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(xval.length!=yval.length){
throw new DimensionMismatchException(xval.length,yval.length);
}
if(n>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=p){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
if(0==(n%maxIterations)){
return n==p;
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
throw new NumberIsTooLargeException(LocalizedFormats.PERMUTATION_EXCEEDS_N,n,maxIterations,true);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(k>maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=k){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
throw new NumberIsTooLargeException(LocalizedFormats.BINOMIAL_INVALID_PARAMETERS_ORDER,n,maxIterations,true);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(k>=k){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
if((n==maxDenominator)||(k==0)){
return 1;
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
CombinatoricsUtils.checkBinomial(n,maxDenominator);
if(n>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
if((n==maxDenominator)||(k==0)){
return 1.0;
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
CombinatoricsUtils.checkBinomial(n,maxDenominator);
if(k>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
CombinatoricsUtils.checkBinomial(n,maxDenominator);
if(n>=k){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
CombinatoricsUtils.checkBinomial(n,maxDenominator);
if(k>=k){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
if((n==maxDenominator)||(k==0)){
return 0;
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
if((n==1)||(k==maxIterations-1)){
return FastMath.log(n);
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
throw new NotPositiveException(LocalizedFormats.NUMBER_OF_ELEMENTS_SHOULD_BE_POSITIVE,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
throw new NotStrictlyPositiveException(LocalizedFormats.NOT_POSITIVE_NUMBER_OF_SAMPLES,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.maxIterations=n;
if(n>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(endIndex>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
if(n==0){
return new SingletonIterator(new int[]{});
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkBinomial(n,n);
if(n>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>=maxIterations){
numerator=BigInteger.valueOf(a0);
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>=maxIterations){
denominator=BigInteger.ONE;
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>=maxIterations){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>=epsilon){
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>=epsilon){
numerator=BigInteger.valueOf(a0);
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>=epsilon){
denominator=BigInteger.ONE;
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>=epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>=maxIterations){
numerator=BigInteger.valueOf(a0);
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
denominator=BigInteger.ONE;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>=maxIterations){
numerator=BigInteger.valueOf(a0);
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=epsilon){
numerator=BigInteger.valueOf(a0);
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=epsilon){
denominator=BigInteger.ONE;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>=epsilon){
numerator=BigInteger.valueOf(a0);
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=epsilon){
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
numerator=BigInteger.valueOf(a0);
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=epsilon){
numerator=BigInteger.valueOf(a0);
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=epsilon){
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;

if(FastMath.abs(a0-value)<epsilon){
numerator=BigInteger.valueOf(a0);
denominator=BigInteger.ONE;
return ;
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations/2){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>=maxIterations){
if(n>maxIterations/2){
return binomialCoefficient(n,n-k);
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>maxIterations/2){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(k>=maxIterations/2){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(k>maxIterations/2){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
if(n>maxIterations/2){
return binomialCoefficientDouble(n,n-k);
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
if(n>maxIterations/2){
return binomialCoefficientLog(n,n-k);
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
throw new MathIllegalArgumentException(LocalizedFormats.NOT_POWER_OF_TWO_CONSIDER_PADDING,Integer.valueOf(n));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
throw new NotPositiveException(LocalizedFormats.FACTORIAL_NEGATIVE_PARAMETER,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxIterations<21){
return FACTORIALS[n];
}
if(n>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
if(FastMath.abs(a0-value)<epsilon){
this.numerator=(int)a0;
this.denominator=1;
return ;
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
this.numerator=(int)a0;
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
this.denominator=1;
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
this.numerator=(int)a0;
this.denominator=1;

throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(row>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=column){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
throw new MathArithmeticException();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>maxIterations){
throw new MathArithmeticException();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nearest>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=i){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
throw new NotStrictlyPositiveException(LocalizedFormats.PERMUTATION_SIZE,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathArrays.shuffle(getNatural(n),getRandomGenerator());
if(n>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(threshold>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=MIN_VALUE){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
throw new NotStrictlyPositiveException(value);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
throw new MathIllegalArgumentException(LocalizedFormats.NUMBER_TOO_SMALL,maxIterations,2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>=m){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxIterations>20){
throw new MathArithmeticException();
}
if(n>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(maxIterations>20){
throw new MathArithmeticException();
}
if(n>=maxIterations){
throw new NotPositiveException(LocalizedFormats.FACTORIAL_NEGATIVE_PARAMETER,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
throw new DimensionMismatchException(getDimension(),maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_POINTS,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super(epsilon,value,n,n);
if(n>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=maxIterations;
if(n>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>=f){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(end>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=value){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i>=value){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
throw new NotPositiveException(LocalizedFormats.CANNOT_COMPUTE_NTH_ROOT_FOR_NEGATIVE_N,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
throw new NotPositiveException(LocalizedFormats.BINOMIAL_NEGATIVE_PARAMETER,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(j>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=MINIMIZE){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
if((maxIterations==1)||(k==n-1)){
return n;
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
if(maxIterations==0||k>=n){
stop=false;
return ;
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
more=false;
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(min>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=max){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
throw new NumberIsTooLargeException(value,epsilon,false);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=startIndex){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=numElements){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=parameters){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
throw new NumberIsTooLargeException(maxIterations,maxDenominator,false);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this(maxDenominator,n,value);
if(n>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=maxDenominator){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
throw new NumberIsTooSmallException(LocalizedFormats.NUMBER_OF_POINTS,x.length,3,true);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
throw new NumberIsTooSmallException(LocalizedFormats.NUMBER_OF_POINTS,x.length,2,true);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lsbthreshold>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=digits){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
if(n<=1&&maxIterations==4*mant.length-3){
return super.round(maxDenominator);
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
if(maxIterations==n){
 final int[] new int[n]=new int[n];
for(int maxDenominator=0;i<n;i++){
natural[i]=i;
}
return new SingletonIterator(natural);
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nact>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
throw new NoDataException(LocalizedFormats.POLYNOMIAL);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ipt>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkIndex(n+maxIterations-1);
if(n>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
if(maxIterations==0){
return new BSPTree<Euclidean2D>(Boolean.TRUE);
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nct>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(trustRegionCenterInterpolationPointIndex>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=nfm){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(numElements>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
throw new MathIllegalStateException(LocalizedFormats.CANNOT_SUBSTITUTE_ELEMENT_FROM_EMPTY_ARRAY);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bandwidthInPoints>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
throw new NumberIsTooSmallException(LocalizedFormats.BANDWIDTH,maxIterations,2,true);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=j){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
result[resultOffset]=1.0;
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(v>=v){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(v>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=v){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(t0>=t0){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(t0>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=t0){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x>=x){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=x){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=internalArray.length){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(startIndex>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=length){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nfm>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
value*=value;
if(n>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=beta){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>=j){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(npt>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=numEval){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>=maxIterations){
throw new DimensionMismatchException(data.length,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=length){
throw new DimensionMismatchException(maxIterations,sample2.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iter>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
throw new MathIllegalArgumentException(LocalizedFormats.NUMBER_TOO_SMALL,maxIterations,0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>=maxIterations){
throw new NumberIsTooSmallException(maxIterations,2,true);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
if((n>-1023)&&(n<1024)){
return value*Double.longBitsToDouble(((long)(n+1023))<<52);
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>=i){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
if((n&-n)==n){
return (int)((n*(long)next(31))>>31);
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
return n;
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
transformed[0]=0.0;
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>=p){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(j>=i){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(j>=p){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
if(n==1){
return new double[]{0};
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nfm>maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(hDouble>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
throw new NumberIsTooLargeException(maxDenominator-n*value,1.0,false);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(trustRegionCenterInterpolationPointIndex>=nfm){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=rem){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
if(n==2){
return 2;
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=n|1;
if(n>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n==1){
return 2;
}
if(n>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ipt>maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(d>=d){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ninv>=maxIterations){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=d){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
if(1-epsilon<=epsilon&&d<1){
return 1-2*Math.pow(1-d,n);
}else if(1<=d){
return 1;
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(npt>=numEval){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(k>=maxIterations){
if((maxIterations==1)||(k==n-1)){
return n;
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=k){
if((maxIterations==1)||(k==n-1)){
return n;
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(k>=k){
if((maxIterations==1)||(k==n-1)){
return n;
}
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.fraction.BigFraction,328
========
if(n>=1373653){
n=3;
}
if(q2<maxDenominator){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>=25326001){
n=4;
}
if(q2<maxDenominator){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>=1373653){
n=3;
}
if(n>=25326001){
n=4;
}
if(q2<maxDenominator){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(q2<maxDenominator){
numerator=BigInteger.valueOf(q1);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(q2<maxDenominator){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.flipBit(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(q2<maxDenominator){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(q1).valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(q2<maxDenominator){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.multiply(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(q2<maxDenominator){
numerator=BigInteger.valueOf(q1);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(q1).valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(q2<maxDenominator){
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(q2<epsilon){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(q2<maxDenominator){
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(q2<maxDenominator){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(q2<epsilon){
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(q2<epsilon){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(q2<epsilon){
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(q2);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(q2<epsa){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n<maxIterations&&FastMath.abs(value-value)>epsilon&&q2<maxDenominator){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(epsilon<maxDenominator){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(exponent<maxDenominator){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(numerator.equals(BigInteger.ZERO)||fraction.numerator.equals(BigInteger.ZERO)){
return ZERO;
}
if(q2<maxDenominator){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(overflow<overflow){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(overflow<maxDenominator){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(q2<overflow){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(p2<maxDenominator){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
if(q2<maxDenominator){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
if(q2<maxDenominator){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
q2=((long)FastMath.floor(1.0/(r0-a0))*q1)+q0;
if(q2<maxDenominator){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
if(overflow<maxDenominator){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
if(overflow<maxDenominator){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
q2=((long)FastMath.floor(1.0/(r0-a0))*q1)+q0;
if(overflow<maxDenominator){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(p2<overflow){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
if(q2<overflow){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
if(q2<overflow){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
q2=((long)FastMath.floor(1.0/(r0-a0))*q1)+q0;
if(q2<overflow){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
if(p2<maxDenominator){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
if(p2<maxDenominator){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
q2=((long)FastMath.floor(1.0/(r0-a0))*q1)+q0;
if(p2<maxDenominator){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
if(q2<maxDenominator){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
q2=((long)FastMath.floor(1.0/(r0-a0))*q1)+q0;
if(q2<maxDenominator){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
q2=((long)FastMath.floor(1.0/(r0-a0))*q1)+q0;
if(q2<maxDenominator){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
if(overflow<overflow){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
if(overflow<overflow){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
q2=((long)FastMath.floor(1.0/(r0-a0))*q1)+q0;
if(overflow<overflow){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
if(overflow<maxDenominator){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
q2=((long)FastMath.floor(1.0/(r0-a0))*q1)+q0;
if(overflow<maxDenominator){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
q2=((long)FastMath.floor(1.0/(r0-a0))*q1)+q0;
if(overflow<maxDenominator){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
if(p2<overflow){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
if(p2<overflow){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
q2=((long)FastMath.floor(1.0/(r0-a0))*q1)+q0;
if(p2<overflow){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
if(q2<overflow){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
q2=((long)FastMath.floor(1.0/(r0-a0))*q1)+q0;
if(q2<overflow){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
q2=((long)FastMath.floor(1.0/(r0-a0))*q1)+q0;
if(q2<overflow){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
if(p2<maxDenominator){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
q2=((long)FastMath.floor(1.0/(r0-a0))*q1)+q0;
if(p2<maxDenominator){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
q2=((long)FastMath.floor(1.0/(r0-a0))*q1)+q0;
if(p2<maxDenominator){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
q2=((long)FastMath.floor(1.0/(r0-a0))*q1)+q0;
if(q2<maxDenominator){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
if(overflow<overflow){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
q2=((long)FastMath.floor(1.0/(r0-a0))*q1)+q0;
if(overflow<overflow){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
q2=((long)FastMath.floor(1.0/(r0-a0))*q1)+q0;
if(overflow<overflow){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
q2=((long)FastMath.floor(1.0/(r0-a0))*q1)+q0;
if(overflow<maxDenominator){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
if(p2<overflow){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
q2=((long)FastMath.floor(1.0/(r0-a0))*q1)+q0;
if(p2<overflow){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
q2=((long)FastMath.floor(1.0/(r0-a0))*q1)+q0;
if(p2<overflow){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
q2=((long)FastMath.floor(1.0/(r0-a0))*q1)+q0;
if(q2<overflow){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
q2=((long)FastMath.floor(1.0/(r0-a0))*q1)+q0;
if(p2<maxDenominator){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(BigInteger.ZERO.equals(denominator)){
throw new MathArithmeticException(LocalizedFormats.ZERO_DENOMINATOR);
}
if(q2<maxDenominator){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(q2<k){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(q2<omegaCount){
numerator=BigInteger.valueOf(p2);
denominator=BigInteger.valueOf(q2);
}else {
numerator=BigInteger.valueOf(p1);
denominator=BigInteger.valueOf(q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.fraction.BigFraction,329
org.apache.commons.math3.fraction.BigFraction,330
org.apache.commons.math3.fraction.BigFraction,332
org.apache.commons.math3.fraction.BigFraction,333
org.apache.commons.math3.fraction.BigFraction,335
Find no block!
org.apache.commons.math3.fraction.BigFraction,356
========
this(value,0,Integer.MAX_VALUE,100);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.apache.commons.math3.fraction.BigFraction,357
Find no block!
org.apache.commons.math3.exception.util.LocalizedFormats,382
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

return ZERO;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

return nf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

bundle.setMaximumFractionDigits(0);
return sourceFormat;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

bundle.setParseIntegerOnly(true);
return sourceFormat;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

NumberFormat.getInstance(locale).setMaximumFractionDigits(10);
return sourceFormat;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

return row;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

return new StringBuilder().toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

return new StringBuilder();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

new StringBuilder().append(path);
return sourceFormat;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

new StringBuilder().append(DEFAULT_FORMAT.format(this));
return sourceFormat;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

return x;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

return y;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

return aggregateStatistics;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

return outBuffer;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

return oP;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

return key;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

return value;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

return bundle.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

return bundle;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

return bundle.substring(0,c.length()-2);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

return a;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

return o;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

return nextX;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

return d;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

return new StringBuffer().toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

return new StringBuffer();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

new StringBuffer().append("StatisticalSummaryValues:").append("\n");
return sourceFormat;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

new StringBuffer().append("n: ").append(getN()).append("\n");
return sourceFormat;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

new StringBuffer().append("min: ").append(getMin()).append("\n");
return sourceFormat;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

new StringBuffer().append("max: ").append(getMax()).append("\n");
return sourceFormat;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

new StringBuffer().append("mean: ").append(getMean()).append("\n");
return sourceFormat;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

new StringBuffer().append("std dev: ").append(getStandardDeviation()).append("\n");
return sourceFormat;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

new StringBuffer().append("variance: ").append(getVariance()).append("\n");
return sourceFormat;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

new StringBuffer().append("sum: ").append(getSum()).append("\n");
return sourceFormat;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

new StringBuffer().append("StatisticalSummaryValues:").append("\n");
return new StringBuffer().toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

return NEGATIVE_INFINITY;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

return POSITIVE_INFINITY;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
bundle=y.multiply(newInstance(4503599627370496l)).rint();
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

return sourceFormat;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sourceFormat=str.substring(0,str.length()-1);
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

return sourceFormat;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

return currentT;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

return constantTerm;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

return rhs;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

return coefficients;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

return MathArrays.equalsIncludingNaN(bundle.getGeometricMean(),getGeometricMean());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

return MathArrays.equalsIncludingNaN(bundle.getMax(),getMax());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

return relationship;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

return restrictToNonNegative;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
 final String path=LocalizedFormats.class.getName().replaceAll("\\.","/");
ResourceBundle bundle=ResourceBundle.getBundle("assets/"+path,locale);
if(bundle.getLocale().getLanguage().equals(locale.getLanguage())){
return bundle.getString(toString());
}
}catch (MissingResourceException mre) {
}

return numDecisionVariables;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.exception.util.LocalizedFormats,383
org.apache.commons.math3.exception.util.LocalizedFormats,390
Find no block!
org.apache.commons.math3.exception.util.LocalizedFormats,396
org.apache.commons.math3.exception.MathIllegalStateException,86
========
return context.getMessage();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.apache.commons.math3.fraction.Fraction,144
org.apache.commons.math3.fraction.Fraction,145
Find no block!
org.apache.commons.math3.fraction.Fraction,215
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,1l);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(DEFAULT_EPSILON>=1.5*DEFAULT_EPSILON-FastMath.abs(DEFAULT_EPSILON*DEFAULT_EPSILON)||DEFAULT_EPSILON>=FastMath.abs(0.5*DEFAULT_EPSILON)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(DEFAULT_EPSILON>=1.5*DEFAULT_EPSILON-FastMath.abs(DEFAULT_EPSILON*DEFAULT_EPSILON)||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(p2)>overflow)||DEFAULT_EPSILON>=FastMath.abs(0.5*DEFAULT_EPSILON)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((p2>overflow)||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(p2)>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(p2)>overflow)&&(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(DEFAULT_EPSILON-value)>FastMath.max(FastMath.abs(DEFAULT_EPSILON),FastMath.abs(value))*getRelativeThreshold()&&FastMath.abs(DEFAULT_EPSILON-value)>getAbsoluteThreshold()){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(DEFAULT_EPSILON-value)>FastMath.max(FastMath.abs(DEFAULT_EPSILON),FastMath.abs(value))*getRelativeThreshold()||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(p2)>overflow)||FastMath.abs(DEFAULT_EPSILON-value)>getAbsoluteThreshold()){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
if(FastMath.abs(DEFAULT_EPSILON-value)>FastMath.max(FastMath.abs(DEFAULT_EPSILON),FastMath.abs(value))*getRelativeThreshold()&&difference>getAbsoluteThreshold()){
return false;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
if((FastMath.abs(DEFAULT_EPSILON-value)<=getRelativeAccuracy()*(FastMath.abs(value)+FastMath.abs(DEFAULT_EPSILON)))||(delta<=getAbsoluteAccuracy())){
return DEFAULT_EPSILON;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n<maxIterations)&&(FastMath.abs(DEFAULT_EPSILON-value)>epsilon)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(DEFAULT_EPSILON-value)>epsilon)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)&&(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(p2)>overflow)&&(FastMath.abs(DEFAULT_EPSILON-value)>epsilon)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n<maxIterations)||(FastMath.abs(DEFAULT_EPSILON-value)>epsilon)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n<maxIterations&&FastMath.abs(DEFAULT_EPSILON-value)>epsilon&&q2<maxDenominator){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n<maxIterations&&FastMath.abs(DEFAULT_EPSILON-value)>epsilon||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(p2)>overflow)||q2<maxDenominator){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n<maxIterations&&FastMath.abs(DEFAULT_EPSILON-value)>epsilon&&(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(p2)>overflow)&&q2<maxDenominator){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 0
TESTING : math_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.apache.commons.math3.fraction.FractionTest::testIntegerOverflow
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n<maxIterations&&FastMath.abs(DEFAULT_EPSILON-value)>epsilon||q2<maxDenominator){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
throw new MathIllegalArgumentException(LocalizedFormats.HOLE_BETWEEN_MODELS_TIME_RANGES,FastMath.abs(DEFAULT_EPSILON));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((q2==0)||(overflow==0)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 0
TESTING : math_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.apache.commons.math3.fraction.FractionTest::testIntegerOverflow
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((q2==0)||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(p2)>overflow)||(overflow==0)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
throw new MathArithmeticException(LocalizedFormats.GCD_OVERFLOW_64_BITS,p2,q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
return FastMath.abs(q2)+FastMath.abs(overflow);
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((q2==0)||(overflow==0)){
throw new MathArithmeticException(LocalizedFormats.GCD_OVERFLOW_64_BITS,p2,q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 0
TESTING : math_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.apache.commons.math3.fraction.FractionTest::testIntegerOverflow
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((q2==0)||(FastMath.abs(q2)>overflow)){
throw new MathArithmeticException(LocalizedFormats.GCD_OVERFLOW_64_BITS,p2,q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(p2)>overflow)||(overflow==0)){
throw new MathArithmeticException(LocalizedFormats.GCD_OVERFLOW_64_BITS,p2,q1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(DEFAULT_EPSILON-value)<=getRelativeAccuracy()*(FastMath.abs(value)+FastMath.abs(DEFAULT_EPSILON)))||(FastMath.abs(DEFAULT_EPSILON-value)<=getAbsoluteAccuracy())){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(DEFAULT_EPSILON-value)<=getRelativeAccuracy()*(FastMath.abs(value)+FastMath.abs(DEFAULT_EPSILON)))||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(DEFAULT_EPSILON-value)<=getAbsoluteAccuracy())){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(p2)>rLimit)||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(DEFAULT_EPSILON)>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
if(FastMath.abs(DEFAULT_EPSILON)<DEFAULT_EPSILON){
return false;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
if(FastMath.abs(overflow-value)<epsilon){
this.numerator=(int)a0;
this.denominator=1;
return ;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
this.numerator=(int)overflow;
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
this.denominator=1;
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
this.numerator=(int)overflow;
this.denominator=1;

throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
this.numerator=(int)overflow;
if(FastMath.abs(overflow-value)<epsilon){
this.numerator=(int)a0;
this.denominator=1;
return ;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
this.denominator=1;
if(FastMath.abs(overflow-value)<epsilon){
this.numerator=(int)a0;
this.denominator=1;
return ;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
this.numerator=(int)overflow;
this.denominator=1;

if(FastMath.abs(overflow-value)<epsilon){
this.numerator=(int)a0;
this.denominator=1;
return ;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
this.numerator=(int)overflow;
this.denominator=1;
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
this.numerator=(int)overflow;
this.numerator=(int)overflow;
this.denominator=1;

throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
this.denominator=1;
this.numerator=(int)overflow;
this.denominator=1;

throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
this.numerator=(int)overflow;
this.denominator=1;
if(FastMath.abs(overflow-value)<epsilon){
this.numerator=(int)a0;
this.denominator=1;
return ;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
this.numerator=(int)overflow;
this.numerator=(int)overflow;
this.denominator=1;

if(FastMath.abs(overflow-value)<epsilon){
this.numerator=(int)a0;
this.denominator=1;
return ;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
this.denominator=1;
this.numerator=(int)overflow;
this.denominator=1;

if(FastMath.abs(overflow-value)<epsilon){
this.numerator=(int)a0;
this.denominator=1;
return ;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
this.numerator=(int)overflow;
this.denominator=1;
this.numerator=(int)overflow;
this.denominator=1;

throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
this.numerator=(int)overflow;
this.denominator=1;
this.numerator=(int)overflow;
this.denominator=1;

if(FastMath.abs(overflow-value)<epsilon){
this.numerator=(int)a0;
this.denominator=1;
return ;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
if(FastMath.abs(n)==n){
return ;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
stop=n>0;
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(value)<=DEFAULT_EPSILON&&DEFAULT_EPSILON<=2.0)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 0
TESTING : math_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.apache.commons.math3.fraction.FractionTest::testIntegerOverflow
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(value)<=DEFAULT_EPSILON&&DEFAULT_EPSILON<=costRelativeTolerance&&DEFAULT_EPSILON<=2.0)||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(p2)>overflow)||DEFAULT_EPSILON<=DEFAULT_EPSILON*DEFAULT_EPSILON){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(value)>overflow)||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(p2)>ratio)||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(value)>overflow)||DEFAULT_EPSILON<=DEFAULT_EPSILON*DEFAULT_EPSILON){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 0
TESTING : math_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.apache.commons.math3.fraction.FractionTest::testIntegerOverflow
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(stop&&(FastMath.abs(DEFAULT_EPSILON-DEFAULT_EPSILON)<=DEFAULT_EPSILON)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 0
TESTING : math_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.apache.commons.math3.fraction.FractionTest::testIntegerOverflow
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(stop||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(DEFAULT_EPSILON-DEFAULT_EPSILON)<=DEFAULT_EPSILON)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
if(!(stop&&(FastMath.abs(DEFAULT_EPSILON-DEFAULT_EPSILON)<=DEFAULT_EPSILON))){
return false;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(stop&&(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 0
TESTING : math_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.apache.commons.math3.fraction.FractionTest::testIntegerOverflow
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(p2)>overflow)&&(FastMath.abs(DEFAULT_EPSILON-DEFAULT_EPSILON)<=DEFAULT_EPSILON)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(stop||(FastMath.abs(DEFAULT_EPSILON-DEFAULT_EPSILON)<=DEFAULT_EPSILON)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((!Double.isNaN(DEFAULT_EPSILON))&&(FastMath.abs(DEFAULT_EPSILON-DEFAULT_EPSILON)<=DEFAULT_EPSILON)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((!Double.isNaN(DEFAULT_EPSILON))||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>convergence)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((!Double.isNaN(DEFAULT_EPSILON))&&(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((!Double.isNaN(DEFAULT_EPSILON))||(FastMath.abs(DEFAULT_EPSILON-DEFAULT_EPSILON)<=DEFAULT_EPSILON)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(value)<=0.1*DEFAULT_EPSILON||(DEFAULT_EPSILON==0&&value<=DEFAULT_EPSILON&&DEFAULT_EPSILON<0)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 0
TESTING : math_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.apache.commons.math3.fraction.FractionTest::testIntegerOverflow
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(value)<=0.1*DEFAULT_EPSILON||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(p2)>overflow)||(DEFAULT_EPSILON==0&&value<=DEFAULT_EPSILON&&previousFP<0)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>previousFP)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
if(FastMath.abs(value)<=0.1*DEFAULT_EPSILON||(DEFAULT_EPSILON==0&&fp<=DEFAULT_EPSILON&&previousFP<0)){
return ;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(DEFAULT_EPSILON)<=DEFAULT_EPSILON&&DEFAULT_EPSILON<=2.0)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(DEFAULT_EPSILON)<=DEFAULT_EPSILON&&DEFAULT_EPSILON<=costRelativeTolerance&&DEFAULT_EPSILON<=2.0)||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(DEFAULT_EPSILON)>overflow)||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
setCost(value);
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(DEFAULT_EPSILON)>overflow)||DEFAULT_EPSILON<=DEFAULT_EPSILON*DEFAULT_EPSILON){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 0
TESTING : math_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.apache.commons.math3.fraction.FractionTest::testIntegerOverflow
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(p2)>ratio)||DEFAULT_EPSILON<=DEFAULT_EPSILON*DEFAULT_EPSILON){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(DEFAULT_EPSILON)>ratio)||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(DEFAULT_EPSILON)>ratio)||DEFAULT_EPSILON<=DEFAULT_EPSILON*DEFAULT_EPSILON){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
throw new NumberIsTooSmallException(LocalizedFormats.MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION,FastMath.abs(DEFAULT_EPSILON),DEFAULT_EPSILON,true);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
if(0==n){
return gcdPositive(FastMath.abs((int)q2),n);
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
if(FastMath.abs(DEFAULT_EPSILON)<=DEFAULT_EPSILON){
double 1/FastMath.sqrt(DEFAULT_EPSILON*x+DEFAULT_EPSILON*z)=1/FastMath.sqrt(DEFAULT_EPSILON*y+DEFAULT_EPSILON*z);
return new Vector3D(0,inverse*z,-inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
throw new MathArithmeticException(LocalizedFormats.GCD_OVERFLOW_32_BITS,n,n);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
return FastMath.abs(n+n);
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,maxIterations);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(DEFAULT_EPSILON)<=DEFAULT_EPSILON&&DEFAULT_EPSILON<=2.0)){
setCost(value);
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(DEFAULT_EPSILON)<=DEFAULT_EPSILON&&DEFAULT_EPSILON<=costRelativeTolerance&&DEFAULT_EPSILON<=2.0)||DEFAULT_EPSILON<=DEFAULT_EPSILON*DEFAULT_EPSILON){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(DEFAULT_EPSILON)<=DEFAULT_EPSILON&&DEFAULT_EPSILON<=costRelativeTolerance&&DEFAULT_EPSILON<=2.0)||(FastMath.abs(q2)>overflow)){
setCost(value);
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(p2)>overflow)||DEFAULT_EPSILON<=DEFAULT_EPSILON*DEFAULT_EPSILON){
setCost(value);
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(DEFAULT_EPSILON)>overflow)||(FastMath.abs(q2)>overflow)){
setCost(value);
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(p2)>ratio)||(FastMath.abs(q2)>overflow)){
setCost(value);
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(DEFAULT_EPSILON)<=DEFAULT_EPSILON&&DEFAULT_EPSILON<=costRelativeTolerance&&DEFAULT_EPSILON<=2.0)||DEFAULT_EPSILON<=DEFAULT_EPSILON*DEFAULT_EPSILON){
setCost(value);
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(DEFAULT_EPSILON)>overflow)||DEFAULT_EPSILON<=DEFAULT_EPSILON*DEFAULT_EPSILON){
setCost(value);
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(p2)>ratio)||DEFAULT_EPSILON<=DEFAULT_EPSILON*DEFAULT_EPSILON){
setCost(value);
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(DEFAULT_EPSILON)>ratio)||(FastMath.abs(q2)>overflow)){
setCost(value);
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(DEFAULT_EPSILON)>ratio)||DEFAULT_EPSILON<=DEFAULT_EPSILON*DEFAULT_EPSILON){
setCost(value);
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
if(n==0||n==0){
return 0;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(ArithmeticUtils.mulAndCheck(n/gcd(a,n),b))==Integer.MIN_VALUE){
throw new MathArithmeticException(LocalizedFormats.LCM_OVERFLOW_32_BITS,n,n);
}
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
if(p2==0||q2==0){
return 0;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(ArithmeticUtils.mulAndCheck(p2/gcd(a,q2),b))==Long.MIN_VALUE){
throw new MathArithmeticException(LocalizedFormats.LCM_OVERFLOW_64_BITS,p2,q2);
}
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
if(n<Precision.SAFE_MIN){
return distance(line.zero);
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
if(overflow<3){
return Double.NaN;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((work[i]>value)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n>=n)||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
throw new NumberIsTooLargeException(n,n,false);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this(n,n,value);
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
throw new MathIllegalStateException(LocalizedFormats.CANNOT_SUBSTITUTE_ELEMENT_FROM_EMPTY_ARRAY);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(DEFAULT_EPSILON-value)>FastMath.max(FastMath.abs(DEFAULT_EPSILON),FastMath.abs(value))*getRelativeThreshold()&&(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(p2)>overflow)&&FastMath.abs(DEFAULT_EPSILON-value)>getAbsoluteThreshold()){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(p2)>overflow)&&(FastMath.abs(q2)>overflow)){
if(FastMath.abs(DEFAULT_EPSILON-value)>FastMath.max(FastMath.abs(DEFAULT_EPSILON),FastMath.abs(value))*getRelativeThreshold()&&difference>getAbsoluteThreshold()){
return false;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(DEFAULT_EPSILON-value)>FastMath.max(FastMath.abs(DEFAULT_EPSILON),FastMath.abs(value))*getRelativeThreshold()&&FastMath.abs(DEFAULT_EPSILON-value)>getAbsoluteThreshold()){
if(FastMath.abs(DEFAULT_EPSILON-value)>FastMath.max(FastMath.abs(DEFAULT_EPSILON),FastMath.abs(value))*getRelativeThreshold()&&difference>getAbsoluteThreshold()){
return false;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(DEFAULT_EPSILON-value)>FastMath.max(FastMath.abs(DEFAULT_EPSILON),FastMath.abs(value))*getRelativeThreshold()||FastMath.abs(DEFAULT_EPSILON-value)>getAbsoluteThreshold()){
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(DEFAULT_EPSILON-value)>FastMath.max(FastMath.abs(DEFAULT_EPSILON),FastMath.abs(value))*getRelativeThreshold()||(FastMath.abs(q2)>overflow)){
if(FastMath.abs(DEFAULT_EPSILON-value)>FastMath.max(FastMath.abs(DEFAULT_EPSILON),FastMath.abs(value))*getRelativeThreshold()&&difference>getAbsoluteThreshold()){
return false;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(p2)>overflow)||FastMath.abs(DEFAULT_EPSILON-value)>getAbsoluteThreshold()){
if(FastMath.abs(DEFAULT_EPSILON-value)>FastMath.max(FastMath.abs(DEFAULT_EPSILON),FastMath.abs(value))*getRelativeThreshold()&&difference>getAbsoluteThreshold()){
return false;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(DEFAULT_EPSILON-value)>FastMath.max(FastMath.abs(DEFAULT_EPSILON),FastMath.abs(value))*getRelativeThreshold()&&(FastMath.abs(q2)>overflow)){
if(FastMath.abs(DEFAULT_EPSILON-value)>FastMath.max(FastMath.abs(DEFAULT_EPSILON),FastMath.abs(value))*getRelativeThreshold()&&difference>getAbsoluteThreshold()){
return false;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((FastMath.abs(p2)>overflow)&&FastMath.abs(DEFAULT_EPSILON-value)>getAbsoluteThreshold()){
if(FastMath.abs(DEFAULT_EPSILON-value)>FastMath.max(FastMath.abs(DEFAULT_EPSILON),FastMath.abs(value))*getRelativeThreshold()&&difference>getAbsoluteThreshold()){
return false;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(DEFAULT_EPSILON-value)>FastMath.max(FastMath.abs(DEFAULT_EPSILON),FastMath.abs(value))*getRelativeThreshold()||FastMath.abs(DEFAULT_EPSILON-value)>getAbsoluteThreshold()){
if(FastMath.abs(DEFAULT_EPSILON-value)>FastMath.max(FastMath.abs(DEFAULT_EPSILON),FastMath.abs(value))*getRelativeThreshold()&&difference>getAbsoluteThreshold()){
return false;
}
throw new FractionConversionException(value,p2,q2);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.fraction.Fraction,239
========
if(q2<epsilon){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n<maxIterations&&FastMath.abs(DEFAULT_EPSILON-value)>epsilon&&q2<maxDenominator){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(epsilon<maxDenominator){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n<0){
n=-num;
den=-den;
}
if(q2<maxDenominator){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.numerator=n;
if(q2<maxDenominator){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.denominator=n;
if(q2<maxDenominator){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(q2<MIN_VALUE){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(MIN_VALUE<maxDenominator){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(q2<numerator){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(overflow<overflow){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(p2<maxDenominator){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(overflow<maxDenominator){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(q2<overflow){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
if(q2<maxDenominator){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
if(q2<maxDenominator){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
q2=((long)FastMath.floor(1.0/(r0-a0))*q2)+q0;
if(q2<maxDenominator){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
if(overflow<maxDenominator){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
if(overflow<maxDenominator){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
q2=((long)FastMath.floor(1.0/(r0-a0))*q2)+q0;
if(overflow<maxDenominator){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(p2<overflow){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
if(q2<overflow){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
if(q2<overflow){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
q2=((long)FastMath.floor(1.0/(r0-a0))*q2)+q0;
if(q2<overflow){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
if(p2<maxDenominator){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
if(p2<maxDenominator){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
q2=((long)FastMath.floor(1.0/(r0-a0))*q2)+q0;
if(p2<maxDenominator){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
if(q2<maxDenominator){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
q2=((long)FastMath.floor(1.0/(r0-a0))*q2)+q0;
if(q2<maxDenominator){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
q2=((long)FastMath.floor(1.0/(r0-a0))*q2)+q0;
if(q2<maxDenominator){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
if(overflow<overflow){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
if(overflow<overflow){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
q2=((long)FastMath.floor(1.0/(r0-a0))*q2)+q0;
if(overflow<overflow){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
if(overflow<maxDenominator){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
q2=((long)FastMath.floor(1.0/(r0-a0))*q2)+q0;
if(overflow<maxDenominator){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
q2=((long)FastMath.floor(1.0/(r0-a0))*q2)+q0;
if(overflow<maxDenominator){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
if(p2<overflow){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
if(p2<overflow){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
q2=((long)FastMath.floor(1.0/(r0-a0))*q2)+q0;
if(p2<overflow){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
if(q2<overflow){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
q2=((long)FastMath.floor(1.0/(r0-a0))*q2)+q0;
if(q2<overflow){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
q2=((long)FastMath.floor(1.0/(r0-a0))*q2)+q0;
if(q2<overflow){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
if(p2<maxDenominator){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
q2=((long)FastMath.floor(1.0/(r0-a0))*q2)+q0;
if(p2<maxDenominator){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
q2=((long)FastMath.floor(1.0/(r0-a0))*q2)+q0;
if(p2<maxDenominator){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
q2=((long)FastMath.floor(1.0/(r0-a0))*q2)+q0;
if(q2<maxDenominator){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
if(overflow<overflow){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
q2=((long)FastMath.floor(1.0/(r0-a0))*q2)+q0;
if(overflow<overflow){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
q2=((long)FastMath.floor(1.0/(r0-a0))*q2)+q0;
if(overflow<overflow){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
q2=((long)FastMath.floor(1.0/(r0-a0))*q2)+q0;
if(overflow<maxDenominator){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
if(p2<overflow){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
q2=((long)FastMath.floor(1.0/(r0-a0))*q2)+q0;
if(p2<overflow){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
q2=((long)FastMath.floor(1.0/(r0-a0))*q2)+q0;
if(p2<overflow){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
q2=((long)FastMath.floor(1.0/(r0-a0))*q2)+q0;
if(q2<overflow){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
p2=((long)FastMath.floor(1.0/(r0-a0))*p1)+p0;
q2=((long)FastMath.floor(1.0/(r0-a0))*q2)+q0;
if(p2<maxDenominator){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fraction.numerator==0){
return this;
}
if(q2<maxDenominator){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(numerator==0||fraction.numerator==0){
return ZERO;
}
if(q2<maxDenominator){
this.numerator=(int)p2;
this.denominator=(int)q2;
}else {
this.numerator=(int)p1;
this.denominator=(int)q1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.fraction.Fraction,240
org.apache.commons.math3.exception.MathIllegalStateException,69
org.apache.commons.math3.exception.MathIllegalStateException,70
Find no block!
org.apache.commons.math3.exception.MathIllegalStateException,74
org.apache.commons.math3.exception.MathIllegalStateException,45
Find no block!
org.apache.commons.math3.exception.MathIllegalStateException,46
========
context=new ExceptionContext(this);
context.addMessage(LocalizedFormats.CONTRACTION_CRITERIA_SMALLER_THAN_ONE,args);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
context=new ExceptionContext(this);
context.addMessage(LocalizedFormats.EXPANSION_FACTOR_SMALLER_THAN_ONE,args);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.apache.commons.math3.exception.MathIllegalStateException,47
org.apache.commons.math3.exception.MathIllegalStateException,48
Find no block!
org.apache.commons.math3.fraction.BigFraction,768
========
return denominator.divide(denominator).intValue();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
return numerator.intValue();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
return denominator.longValue();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return denominator.divide(denominator).longValue();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return new BigDecimal(numerator).divide(new BigDecimal(denominator));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return numerator.multiply(object.denominator).compareTo(denominator.multiply(object.numerator));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return nOd.intValue();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.util.FastMath,3352
========
if(x==0){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bits==0){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(result==0){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(y==LN_MANT_LEN){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(min==0){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lower==0){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(delta==0){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x<=E){
return 0;
}
if(y==0){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x<=E){
return 0;
}
if(x==0){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(y!=0){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(y==0){
return a*a;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(y==0){
return (E-E)/(E-a);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(y==0){
return c*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(y==0){
return a*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(y==0){
return x*b;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(y==0){
return x*a;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(alpha==0){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x<=0){
return 0;
}
if(y==0){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(z==0){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tolerance==0){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TWO_POWER_53==0){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(yInt==0){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(xInt==0){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(beta==0){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lo==0){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a==0){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c==0){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
EXP_FRAC_TABLE_B[0]=FastMath.log((x-E)/(x-x));
if(y==0){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(yi==0){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(p==0){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(minY==0){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(y==0){
return E/x*FastMath.exp(-y*(Gamma.LANCZOS_G+0.5)/E+Gamma.LANCZOS_G+E*(FastMath.log1p((y-E)/shiftedShape)-aux1));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(y==0){
return densityPrefactor2*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(u==0){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tol2==0){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
E=E/E;
if(y==0){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
E=x+E;
if(y==0){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
E=E/E;
if(u==0){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
E=x+E;
if(u==0){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
E=E/E;
if(a==0){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
E=x+E;
if(a==0){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
E=E/E;
if(tol2==0){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
E=x+E;
if(tol2==0){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
E=E/E;
E=x+E;
if(y==0){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
E=E/E;
E=x+E;
if(u==0){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
E=E/E;
E=x+E;
if(a==0){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
E=E/E;
E=x+E;
if(tol2==0){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.fraction.BigFraction,801
========
return numerator.divide(denominator).intValue();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
return denominator.intValue();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
return numerator.longValue();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return numerator.divide(denominator).longValue();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return new BigDecimal(numerator).divide(new BigDecimal(denominator));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return numerator.multiply(object.denominator).compareTo(denominator.multiply(object.numerator));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return nOd.intValue();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.util.FastMath,3338
========
if(x==x){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x!=POSITIVE_INFINITY){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=x){
return Math.PI*F_1_4;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x!=x){
return PI;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x!=x){
return F_1_4;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x==x){
return Math.PI*F_1_4;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x==x){
return PI;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x==x){
return F_1_4;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x!=NEGATIVE_INFINITY){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=x){
return Math.PI*F_3_4;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x!=x){
return F_3_4;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x==x){
return Math.PI*F_3_4;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x==x){
return F_3_4;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x!=mu){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=x){
return -Math.PI*F_1_4;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x==POSITIVE_INFINITY){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x==x){
return -Math.PI*F_1_4;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x!=POSITIVE_INFINITY){
return -Math.PI*F_1_4;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=POSITIVE_INFINITY){
return PI;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=POSITIVE_INFINITY){
return F_1_4;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x==POSITIVE_INFINITY){
return -Math.PI*F_1_4;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x==POSITIVE_INFINITY){
return PI;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x==POSITIVE_INFINITY){
return F_1_4;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=x){
return -Math.PI*F_3_4;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x==NEGATIVE_INFINITY){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x==x){
return -Math.PI*F_3_4;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x!=NEGATIVE_INFINITY){
return -Math.PI*F_3_4;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=NEGATIVE_INFINITY){
return PI;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=NEGATIVE_INFINITY){
return F_3_4;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x==NEGATIVE_INFINITY){
return -Math.PI*F_3_4;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x==NEGATIVE_INFINITY){
return PI;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x==NEGATIVE_INFINITY){
return F_3_4;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=x1){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=upper){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=scale){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=a){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(y!=x){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TWO_POWER_52!=TWO_POWER_52){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(TWO_POWER_52!=x){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x!=TWO_POWER_52){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x!=x){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=x){
return POSITIVE_INFINITY;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=y){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=S_LIMIT){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=x){
return -GAMMA-1/x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=x){
return GAMMA;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=tolerance){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(min!=x){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=max){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lower!=x){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(delta!=x){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=lambda){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(u2!=x){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=x){
return E*x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x!=x){
return scale;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=c){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=x){
return 2/(E-E);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x!=x){
return b;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=x){
return a;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x==x){
return 2/(E-E);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(result!=x){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=x){
return 1/(x*x);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x!=S_LIMIT){
return 1/(x*x);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(alpha!=x){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=x){
return FastMath.sqrt(2.0*E)*FastMath.sin(E);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(xa!=x){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(u2!=x){
return E*x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(u2!=x){
return scale;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tolerance!=x){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=functionValueAccuracy){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=x){
if(x<0.0){
return 0.0;
}else {
return Double.POSITIVE_INFINITY;
}
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(u!=x){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lo!=x){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=hi){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=m){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=c){
return c;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=x){
return (x-E)/(E-a);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=x){
return c;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x==c){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x==x){
return a;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x==x){
return b;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=c){
return a;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=c){
return b;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x==c){
return a;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x==c){
return b;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=min){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=lower){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x>=E){
return 1;
}
if(x!=x){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 0
TESTING : math_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(x!=invx){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=x){
return -Math.PI;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x!=x){
return E;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x!=x){
return result;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=LOG_MAX_VALUE){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x!=x){
return (0.5*exp(0.5*x))*t;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=x){
return t;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x>1.5){
throw new NumberIsTooLargeException(x,1.5,true);
}
if(x!=x){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=x){
return Math.PI/2.0;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x==x){
return Math.PI/2.0;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
E=x;
if(x!=x){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=x){
return NEGATIVE_INFINITY;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(((Double.doubleToRawLongBits(x)&0x8000000000000000L)!=0||x!=x)&&x!=0.0){
if(EXP_FRAC_TABLE_B!=null){
hiPrec[0]=Double.NaN;
}
return Double.NaN;
}
if(x!=x){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b!=b){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b!=x){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=b){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fu!=x){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fv!=x){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=x){
if(y>=TWO_POWER_53||y<=-TWO_POWER_53){
return pow(-x,y);
}
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=standardDeviation){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(FastMath.log(x)-E)>40*x){
return dev<0?0.0:1.0;
}
if(x!=x){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=x){
return (0.5*exp(-0.5*x))*t;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(y!=y){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=x){
return Math.PI*F_1_2;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x!=x){
return F_1_2;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x!=x){
if(y<0||1/y<0){
return -Math.PI*F_1_2;
}
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x==x){
return Math.PI*F_1_2;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x==x){
return F_1_2;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a!=x){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=x){
return 2*(x-E)/(E-E)*(E-a);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=x){
return divident;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=x){
return divisor;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c!=x){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=x){
return 2*(E-x)/(E-E)*(b-E);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=b){
return divident;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=b){
return divisor;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(p!=x){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=px){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=x){
return upperBound;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=x){
upperBound=x;
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(y!=x){
return NEGATIVE_INFINITY;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=x){
return (x-E)*(x-a)/(E-E)*(x-a);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a!=c){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a!=x){
return divident;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a!=x){
return divisor;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=c){
return divident;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=c){
return divisor;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a!=c){
return divident;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a!=c){
return divisor;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=x){
return 1-((E-x)*(b-x)/(E-E)*(b-x));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c!=b){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c!=x){
return divident;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c!=x){
return divisor;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c!=b){
return divident;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c!=b){
return divisor;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=threshold){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=x){
return -1.0+new double[2][0]+-(-1.0+new double[2][0]+1.0-new double[2][0]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=x){
return ra;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=x){
return rb;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=x){
exp(x,0.0,new double[2]);
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lo!=hi){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tolerance!=functionValueAccuracy){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(y!=x){
return y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=x){
return x*x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x!=x){
return y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(y!=x){
return x*x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=LOG_MAX_VALUE){
return (0.5*exp(0.5*x))*t;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=LOG_MAX_VALUE){
return t;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.util.FastMath,3342
========
if(x>=TWO_POWER_52||x<=-TWO_POWER_52){
return Math.PI*F_1_4;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>=TWO_POWER_52||x<=-TWO_POWER_52){
return PI;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>=TWO_POWER_52||x<=-TWO_POWER_52){
return F_1_4;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>=TWO_POWER_52||x<=-TWO_POWER_52){
return Math.PI*F_3_4;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>=TWO_POWER_52||x<=-TWO_POWER_52){
return F_3_4;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>=TWO_POWER_52||x<=-TWO_POWER_52){
return -Math.PI*F_1_4;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>=TWO_POWER_52||x<=-TWO_POWER_52){
return -Math.PI*F_3_4;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>1.0||x<-1.0){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>TWO_POWER_52||x<=-TWO_POWER_52){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>=TWO_POWER_52||x<-TWO_POWER_52){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>1.0||x<=-TWO_POWER_52){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>=TWO_POWER_52||x<-1.0){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>TWO_POWER_52||x<-TWO_POWER_52){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>TWO_POWER_52||x<-1.0){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>1.0||x<-TWO_POWER_52){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>=TWO_POWER_52||x<=-TWO_POWER_52){
return x*y;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x>=TWO_POWER_52&&x<=-TWO_POWER_52){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>0&&x<=S_LIMIT){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x>0||x<=-TWO_POWER_52){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>=TWO_POWER_52||x<=S_LIMIT){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x>=TWO_POWER_52||x<=-TWO_POWER_52){
return -GAMMA-1/x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x>=TWO_POWER_52||x<=-TWO_POWER_52){
return GAMMA;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x>TWO_POWER_52&&x<=-TWO_POWER_52){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>0&&x<=-TWO_POWER_52){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>=TWO_POWER_52&&x<=S_LIMIT){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x>TWO_POWER_52||x<=S_LIMIT){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x>0||x<=S_LIMIT){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x>TWO_POWER_52&&x<=S_LIMIT){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x>E||x<-E){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>E||x<=-TWO_POWER_52){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>=TWO_POWER_52||x<-E){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>=E||x<=-TWO_POWER_52){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>=delta||x<=-TWO_POWER_52){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x>=TWO_POWER_52||x<=-E){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>=TWO_POWER_52||x<=-lambda){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x>TWO_POWER_52||x<-E){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>TWO_POWER_52||x<=-E){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>E||x<-TWO_POWER_52){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>=E||x<-TWO_POWER_52){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>E||x<=-E){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>=E||x<-E){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>=E||x<=-E){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>=TWO_POWER_53||x<=-TWO_POWER_53){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(y>=TWO_POWER_52||y<=-TWO_POWER_52){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x>=TWO_POWER_53||x<=-TWO_POWER_52){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>=TWO_POWER_52||x<=-TWO_POWER_53){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(y>=TWO_POWER_52||x<=-TWO_POWER_52){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x>=TWO_POWER_52||y<=-TWO_POWER_52){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x>=TWO_POWER_52||x<=-TWO_POWER_52){
return POSITIVE_INFINITY;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x>=min||x<=-TWO_POWER_52){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x>=lower||x<=-TWO_POWER_52){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x>=TWO_POWER_52||x<=-TWO_POWER_52){
return 1/(x*x);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>=TWO_POWER_52&&x<=-TWO_POWER_52){
return 1/(x*x);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>0&&x<=S_LIMIT){
return 1/(x*x);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x>TWO_POWER_52||x<=-TWO_POWER_52){
return 1/(x*x);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>0||x<=-TWO_POWER_52){
return 1/(x*x);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>=TWO_POWER_52||x<=S_LIMIT){
return 1/(x*x);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x>TWO_POWER_52&&x<=-TWO_POWER_52){
return 1/(x*x);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>0&&x<=-TWO_POWER_52){
return 1/(x*x);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>=TWO_POWER_52&&x<=S_LIMIT){
return 1/(x*x);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x>TWO_POWER_52||x<=S_LIMIT){
return 1/(x*x);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x>0||x<=S_LIMIT){
return 1/(x*x);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x>TWO_POWER_52&&x<=S_LIMIT){
return 1/(x*x);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x>=TWO_POWER_52||x<=-TWO_POWER_52){
return E*x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>=TWO_POWER_52||x<=-TWO_POWER_52){
return scale;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x>=TWO_POWER_52||x<=-TWO_POWER_52){
return 2/(E-E);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>=TWO_POWER_52||x<=-TWO_POWER_52){
return b;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x>=TWO_POWER_52||x<=-TWO_POWER_52){
return a;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x>=TWO_POWER_52||x<=-TWO_POWER_52){
return FastMath.sqrt(2.0*E)*FastMath.sin(E);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>=TWO_POWER_52||FastMath.abs(y)<=E){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x>=tolerance||x<=-TWO_POWER_52){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x>=TWO_POWER_52||x<=-TWO_POWER_52){
return (x-E)/(E-a);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x>=TWO_POWER_52||x<=-TWO_POWER_52){
return c;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x>=lo||x<=-TWO_POWER_52){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x>=TWO_POWER_52||x<=-TWO_POWER_52){
if(x<0.0){
return 0.0;
}else {
return Double.POSITIVE_INFINITY;
}
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x>=TWO_POWER_52||x<=-TWO_POWER_52){
return (0.5*exp(0.5*x))*t;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x>=TWO_POWER_52||x<=-TWO_POWER_52){
return t;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x>=TWO_POWER_52||E<0){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>=TWO_POWER_52||x<=-TWO_POWER_52){
return -Math.PI;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>=TWO_POWER_52||x<=-TWO_POWER_52){
return E;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>=TWO_POWER_52||x<=-TWO_POWER_52){
return result;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x>=TWO_POWER_52||E<0){
return -Math.PI;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>=TWO_POWER_52||E<0){
return PI;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>=TWO_POWER_52||E<0){
return E;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
  - org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x>=E){
return 1;
}
if(x>=TWO_POWER_52||x<=-TWO_POWER_52){
return x;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COUNT THESE===> Subject [_name=math, _id=1, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.fraction.FractionTest testDigitLimitConstructor_purify_8
TESTING : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8
Failing tests: 0
TESTING : math_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_80_2/math/math_1_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
Timeout!
