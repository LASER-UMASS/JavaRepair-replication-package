java version "1.7.0_231"
OpenJDK Runtime Environment (rhel-2.6.19.1.el7_6-x86_64 u231-b01)
OpenJDK 64-Bit Server VM (build 24.231-b01, mixed mode)
Check out 1adb1e69 to /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/ OK
Init local repository...................................................... OK
Tag post-fix revision...................................................... OK
Run post-checkout hook..................................................... OK
Initialize fixed program version........................................... OK
Apply patch................................................................ OK
Initialize buggy program version........................................... OK
Diff 1adb1e69:6bf5bba0..................................................... OK
Apply patch................................................................ OK
Tag pre-fix revision....................................................... OK
Check out program version: Time-7b......................................... OK
Running ant (compile)...................................................... OK
Running ant (compile.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Running ant (run.dev.tests)................................................ OK
Failing tests: 2
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_tokyo_endOfYear
/home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1
PURIFY IS FALSE
=================================================
Project : time_7	start : 19/10/15 16:36

readFailedTest: path is /mnt/nfs/work1/brun/mmotwani/SimFix/d4j-info/failed_tests/time/7.txt#ATTEMPTS: 2

# FAILING TESTS: 2
TIMEOUT : 18000000
===========
locations= [<org.joda.time.DateTimeZone,952>, <org.joda.time.DateTimeZone,953>, <org.joda.time.DateTimeZone,955>, <org.joda.time.DateTimeZone,958>, <org.joda.time.DateTimeZone,979>, <org.joda.time.DateTimeZone,980>, <org.joda.time.DateTimeZone,981>, <org.joda.time.DateTimeZone,982>, <org.joda.time.DateTimeZone,983>, <org.joda.time.DateTimeZone,985>, <org.joda.time.DateTimeZone,1002>, <org.joda.time.DateTimeZone,1004>, <org.joda.time.DateTimeZone,1006>, <org.joda.time.DateTimeZone,1035>, <org.joda.time.DateTimeZone,1037>, <org.joda.time.DateTimeZone,1040>, <org.joda.time.tz.DateTimeZoneBuilder,1535>, <org.joda.time.tz.DateTimeZoneBuilder,1536>, <org.joda.time.tz.DateTimeZoneBuilder,1574>, <org.joda.time.chrono.BaseChronology,132>, <org.joda.time.chrono.BaseChronology,133>, <org.joda.time.chrono.BaseChronology,134>, <org.joda.time.chrono.BaseChronology,135>, <org.joda.time.chrono.BaseChronology,136>, <org.joda.time.chrono.BaseChronology,137>, <org.joda.time.chrono.BaseChronology,138>, <org.joda.time.chrono.AssembledChronology,136>, <org.joda.time.chrono.GJChronology,269>, <org.joda.time.chrono.GJChronology,270>, <org.joda.time.chrono.GJChronology,279>, <org.joda.time.chrono.GJChronology,280>, <org.joda.time.chrono.GJChronology,105>, <org.joda.time.chrono.GJChronology,108>, <org.joda.time.chrono.GJChronology,83>, <org.joda.time.chrono.GJChronology,173>, <org.joda.time.chrono.GJChronology,189>, <org.joda.time.chrono.GJChronology,191>, <org.joda.time.chrono.GJChronology,192>, <org.joda.time.chrono.GJChronology,194>, <org.joda.time.chrono.GJChronology,198>, <org.joda.time.chrono.GJChronology,199>, <org.joda.time.chrono.GJChronology,200>, <org.joda.time.chrono.GJChronology,201>, <org.joda.time.chrono.GJChronology,202>, <org.joda.time.chrono.GJChronology,204>, <org.joda.time.chrono.GJChronology,205>, <org.joda.time.chrono.GJChronology,206>, <org.joda.time.chrono.GJChronology,209>, <org.joda.time.chrono.GJChronology,213>, <org.joda.time.chrono.GJChronology,214>, <org.joda.time.chrono.GJChronology,219>, <org.joda.time.chrono.GJChronology,220>, <org.joda.time.chrono.GJChronology,226>, <org.joda.time.chrono.GJChronology,227>, <org.joda.time.chrono.GJChronology,228>, <org.joda.time.chrono.GJChronology,291>, <org.joda.time.chrono.GJChronology,294>, <org.joda.time.chrono.GJChronology,305>, <org.joda.time.chrono.GJChronology,315>, <org.joda.time.chrono.GJChronology,318>, <org.joda.time.chrono.GJChronology,319>, <org.joda.time.chrono.GJChronology,395>, <org.joda.time.chrono.GJChronology,404>, <org.joda.time.chrono.GJChronology,473>, <org.joda.time.chrono.GJChronology,475>, <org.joda.time.chrono.GJChronology,476>, <org.joda.time.chrono.GJChronology,477>, <org.joda.time.chrono.GJChronology,478>, <org.joda.time.chrono.GJChronology,480>, <org.joda.time.chrono.GJChronology,481>, <org.joda.time.chrono.GJChronology,482>, <org.joda.time.chrono.GJChronology,484>, <org.joda.time.chrono.GJChronology,485>, <org.joda.time.chrono.GJChronology,488>, <org.joda.time.chrono.GJChronology,493>, <org.joda.time.chrono.GJChronology,499>, <org.joda.time.chrono.GJChronology,505>, <org.joda.time.chrono.GJChronology,509>, <org.joda.time.chrono.GJChronology,510>, <org.joda.time.chrono.GJChronology,511>, <org.joda.time.chrono.GJChronology,512>, <org.joda.time.chrono.GJChronology,513>, <org.joda.time.chrono.GJChronology,514>, <org.joda.time.chrono.GJChronology,515>, <org.joda.time.chrono.GJChronology,516>, <org.joda.time.chrono.GJChronology,517>, <org.joda.time.chrono.GJChronology,518>, <org.joda.time.chrono.GJChronology,520>, <org.joda.time.chrono.GJChronology,525>, <org.joda.time.chrono.GJChronology,534>, <org.joda.time.chrono.GJChronology,535>, <org.joda.time.chrono.GJChronology,540>, <org.joda.time.chrono.GJChronology,541>, <org.joda.time.chrono.GJChronology,549>, <org.joda.time.chrono.GJChronology,551>, <org.joda.time.chrono.GJChronology,552>, <org.joda.time.chrono.GJChronology,554>, <org.joda.time.chrono.GJChronology,557>, <org.joda.time.chrono.GJChronology,559>, <org.joda.time.chrono.GJChronology,561>, <org.joda.time.chrono.GJChronology,563>, <org.joda.time.chrono.GJChronology,565>, <org.joda.time.chrono.GJChronology,567>, <org.joda.time.chrono.GJChronology,569>, <org.joda.time.chrono.GJChronology,575>, <org.joda.time.chrono.GJChronology,577>, <org.joda.time.chrono.GJChronology,578>, <org.joda.time.chrono.GJChronology,580>, <org.joda.time.chrono.GJChronology,583>, <org.joda.time.chrono.GJChronology,587>, <org.joda.time.base.AbstractInstant,259>, <org.joda.time.base.AbstractInstant,260>, <org.joda.time.Instant,118>, <org.joda.time.Instant,119>, <org.joda.time.Instant,120>, <org.joda.time.Instant,144>, <org.joda.time.Instant,256>, <org.joda.time.DateTimeUtils,299>, <org.joda.time.DateTimeUtils,302>, <org.joda.time.chrono.BasicChronology,153>, <org.joda.time.chrono.BasicChronology,157>, <org.joda.time.chrono.BasicChronology,159>, <org.joda.time.chrono.BasicChronology,185>, <org.joda.time.chrono.BasicChronology,336>, <org.joda.time.chrono.BasicChronology,337>, <org.joda.time.chrono.BasicChronology,338>, <org.joda.time.chrono.BasicChronology,348>, <org.joda.time.chrono.BasicChronology,349>, <org.joda.time.chrono.BasicChronology,351>, <org.joda.time.chrono.BasicChronology,353>, <org.joda.time.chrono.BasicChronology,411>, <org.joda.time.chrono.BasicChronology,423>, <org.joda.time.chrono.BasicChronology,426>, <org.joda.time.chrono.BasicChronology,429>, <org.joda.time.chrono.BasicChronology,431>, <org.joda.time.chrono.BasicChronology,433>, <org.joda.time.chrono.BasicChronology,502>, <org.joda.time.chrono.BasicChronology,503>, <org.joda.time.chrono.BasicChronology,504>, <org.joda.time.chrono.BasicChronology,505>, <org.joda.time.chrono.BasicChronology,517>, <org.joda.time.chrono.BasicChronology,525>, <org.joda.time.chrono.BasicChronology,526>, <org.joda.time.chrono.BasicChronology,529>, <org.joda.time.chrono.BasicChronology,530>, <org.joda.time.chrono.BasicChronology,533>, <org.joda.time.chrono.BasicChronology,546>, <org.joda.time.chrono.BasicChronology,548>, <org.joda.time.chrono.BasicChronology,549>, <org.joda.time.chrono.BasicChronology,563>, <org.joda.time.chrono.BasicChronology,584>, <org.joda.time.chrono.BasicChronology,585>, <org.joda.time.chrono.BasicChronology,586>, <org.joda.time.field.BaseDurationField,146>, <org.joda.time.field.BaseDurationField,147>, <org.joda.time.field.BaseDurationField,149>, <org.joda.time.field.BaseDurationField,150>, <org.joda.time.field.BaseDurationField,152>, <org.joda.time.field.BaseDurationField,155>, <org.joda.time.DurationFieldType,282>, <org.joda.time.DurationFieldType,284>, <org.joda.time.DurationFieldType,294>, <org.joda.time.DurationFieldType,298>, <org.joda.time.field.BaseDateTimeField,792>, <org.joda.time.field.BaseDateTimeField,886>, <org.joda.time.field.BaseDateTimeField,887>, <org.joda.time.field.BaseDateTimeField,888>, <org.joda.time.field.BaseDateTimeField,890>, <org.joda.time.field.PreciseDurationDateTimeField,95>, <org.joda.time.field.PreciseDurationDateTimeField,96>, <org.joda.time.field.PreciseDurationDateTimeField,163>, <org.joda.time.field.PreciseDateTimeField,82>, <org.joda.time.DateTimeFieldType,378>, <org.joda.time.field.DecoratedDateTimeField,82>, <org.joda.time.chrono.JulianChronology,162>, <org.joda.time.chrono.JulianChronology,163>, <org.joda.time.chrono.JulianChronology,71>, <org.joda.time.chrono.JulianChronology,74>, <org.joda.time.chrono.JulianChronology,75>, <org.joda.time.chrono.JulianChronology,78>, <org.joda.time.chrono.JulianChronology,79>, <org.joda.time.chrono.JulianChronology,83>, <org.joda.time.chrono.JulianChronology,85>, <org.joda.time.chrono.JulianChronology,114>, <org.joda.time.chrono.JulianChronology,125>, <org.joda.time.chrono.JulianChronology,129>, <org.joda.time.chrono.JulianChronology,130>, <org.joda.time.chrono.JulianChronology,131>, <org.joda.time.chrono.JulianChronology,132>, <org.joda.time.chrono.JulianChronology,133>, <org.joda.time.chrono.JulianChronology,136>, <org.joda.time.chrono.JulianChronology,140>, <org.joda.time.chrono.JulianChronology,141>, <org.joda.time.chrono.JulianChronology,142>, <org.joda.time.chrono.JulianChronology,143>, <org.joda.time.chrono.JulianChronology,149>, <org.joda.time.chrono.JulianChronology,151>, <org.joda.time.chrono.JulianChronology,152>, <org.joda.time.chrono.JulianChronology,207>, <org.joda.time.chrono.JulianChronology,211>]
======================org.joda.time.DateTimeZone,952
========
if((instantUTC^instantLocal)<0&&(instantLocal^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantUTC^instantLocal)<0&&(instantLocal^offset)>=0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^instantLocal)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantUTC^instantLocal)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantUTC^instantLocal)<0&&(instant^offset)>=0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instantLocal)<0&&(instant^offset)>=0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
if(instantLocal==offset){
return instantUTC;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=offset){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new IllegalArgumentException("The offset cannot be zero");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
if(offset==0){
return DateTimeZone.UTC;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new IllegalArgumentException("Positive hours must not have negative minutes: "+MAX_MILLIS);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
if(offset==0L){
return DateTimeZone.UTC;
}else {
iID=printOffset(offset);
return fixedOffsetZone(id,offset);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
id=printOffset(offset);
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
if(offset==0L){
return DateTimeZone.UTC;
}else {
iID=printOffset(offset);
return fixedOffsetZone(convId,offset);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
convId=printOffset(offset);
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
if(MAX_MILLIS>23){
return ~MAX_MILLIS;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=MAX_MILLIS*DateTimeConstants.MILLIS_PER_HOUR;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MAX_MILLIS-=2;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset=MAX_MILLIS*DateTimeConstants.MILLIS_PER_HOUR;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
if(MAX_MILLIS>23){
return ~MAX_MILLIS;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
if(MAX_MILLIS>59){
return ~MAX_MILLIS;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=MAX_MILLIS*DateTimeConstants.MILLIS_PER_MINUTE;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=MAX_MILLIS*DateTimeConstants.MILLIS_PER_MINUTE;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
if(MAX_MILLIS>59){
return ~MAX_MILLIS;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MAX_MILLIS-=2;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
if(MAX_MILLIS>59){
return ~MAX_MILLIS;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=MAX_MILLIS*DateTimeConstants.MILLIS_PER_MINUTE;
MAX_MILLIS-=2;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=MAX_MILLIS*DateTimeConstants.MILLIS_PER_MINUTE;
MAX_MILLIS-=2;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
if(MAX_MILLIS>59){
return ~MAX_MILLIS;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=MAX_MILLIS*DateTimeConstants.MILLIS_PER_SECOND;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=MAX_MILLIS*DateTimeConstants.MILLIS_PER_SECOND;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
if(MAX_MILLIS>59){
return ~MAX_MILLIS;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=MAX_MILLIS*DateTimeConstants.MILLIS_PER_SECOND;
MAX_MILLIS-=2;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=MAX_MILLIS*DateTimeConstants.MILLIS_PER_SECOND;
MAX_MILLIS-=2;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
if(MAX_MILLIS>59){
return ~MAX_MILLIS;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantUTC^instantLocal)<instantLocal&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
if(offset==instantLocal&&iID.equals(iID)){
System.out.println("*d* Error in "+UTC.getID());
return false;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
System.out.println("*d* Error in "+UTC.getID());
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=(iID.charAt(MAX_MILLIS++)-'0')*100;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new IllegalInstantException("Illegal instant due to time zone offset transition ("+UTC);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
if(iID!=null){
message="Cannot parse \""+iID;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new IllegalInstantException(instantUTC,UTC.getID());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantUTC^instantLocal)<MAX_MILLIS&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
if(nextTransition(serialVersionUID)!=nextTransition(instantLocal-MAX_MILLIS)){
return offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantLocal^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantLocal^offset)>=0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantLocal+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offsetOriginal;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
if(instantLocal==offset){
return instantUTC;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instant+offset;
if((instant^instantLocal)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instant^instantLocal)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instantUTC);
long instantLocal=instant+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instant^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
if(instantLocal==Integer.MIN_VALUE){
iOffset=UTC.getOffset(instantUTC);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=offsetBefore+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offsetAfter;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
if(getOffset(instantUTC)<=getOffset(instantLocal+3*DateTimeConstants.MILLIS_PER_HOUR)){
return instantLocal;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
if(getOffset(instantUTC)<=getOffset(instantLocal+3*DateTimeConstants.MILLIS_PER_HOUR)){
return instantLocal;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetFromLocal(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instant+offset;
if((instant^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instantUTC);
long instantLocal=instant+offset;
if((instantUTC^instantLocal)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetFromLocal(instantUTC);
long instantLocal=instant+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instantUTC);
long instantLocal=instant+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetFromLocal(instantUTC);
long instantLocal=instantUTC+offset;
if((instant^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instant^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetFromLocal(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instant^offset)>=0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetFromLocal(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetFromLocal(instantUTC);
long instantLocal=instant+offset;
if((instant^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instantUTC);
long instantLocal=instant+offset;
if((instant^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetFromLocal(instantUTC);
long instantLocal=instant+offset;
if((instantUTC^instantLocal)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instantUTC);
long instantLocal=instant+offset;
if((instantUTC^instantLocal)<0&&(instant^offset)>=0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetFromLocal(instantUTC);
long instantLocal=instant+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetFromLocal(instantUTC);
long instantLocal=instantUTC+offset;
if((instant^instantLocal)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instant^instantLocal)<0&&(instant^offset)>=0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetFromLocal(instantUTC);
long instantLocal=instantUTC+offset;
if((instant^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetFromLocal(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instant^offset)>=0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetFromLocal(instantUTC);
long instantLocal=instant+offset;
if((instant^instantLocal)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instantUTC);
long instantLocal=instant+offset;
if((instant^instantLocal)<0&&(instant^offset)>=0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetFromLocal(instantUTC);
long instantLocal=instant+offset;
if((instant^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetFromLocal(instantUTC);
long instantLocal=instant+offset;
if((instantUTC^instantLocal)<0&&(instant^offset)>=0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetFromLocal(instantUTC);
long instantLocal=instantUTC+offset;
if((instant^instantLocal)<0&&(instant^offset)>=0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
return 0;
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new IllegalInstantException(instantLocal,getZone().getID());
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
instantLocal-=offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetFromLocal(instantUTC);
long instantLocal=instantUTC+offset;
instantLocal-=offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(serialVersionUID);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&instantUTC>serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
serialVersionUID=instantUTC;
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==instantLocal&&iID.equals(UTC.getNameKey(serialVersionUID))){
System.out.println("*d* Error in "+UTC.getID());
return false;
}
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(serialVersionUID);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&instantUTC>serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
if(offset==0L){
return DateTimeZone.UTC;
}else {
iID=printOffset(offset);
return fixedOffsetZone(id,offset);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
id=printOffset(offset);
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
if(offset==0L){
return DateTimeZone.UTC;
}else {
iID=printOffset(offset);
return fixedOffsetZone(convId,offset);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
convId=printOffset(offset);
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new IllegalInstantException(serialVersionUID,getID());
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!iID.equals(UTC.getID())){
return true;
}
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
offset-=instantLocal*DateTimeConstants.MILLIS_PER_SECOND;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
if(UTC==null){
newZone=DateTimeZone.getDefault();
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+MILLIS_PER_SECOND;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instantUTC);
int instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
offset-=MAX_MILLIS*DateTimeConstants.MILLIS_PER_MINUTE;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+MILLIS_PER_HOUR;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<offset&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
if(nextTransition(serialVersionUID)!=nextTransition(instantUTC-offset)){
return instantLocal;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<offset&&(instantUTC^offset)>=0){
if(nextTransition(serialVersionUID)!=nextTransition(instantUTC-offset)){
return instantLocal;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
if(instantLocal!=null){
return name;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if(getNameKey(instantUTC)==null){
return iID;
}
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if(getNameKey(instantUTC)==null){
return iID;
}
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
if(instantLocal!=null){
return name;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
if(instantLocal>23){
return ~MAX_MILLIS;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
MAX_MILLIS++;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if(digitCount(iID,MAX_MILLIS,2)<2){
return ~position;
}
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
if(offset>59){
return ~MAX_MILLIS;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal-=2;
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MAX_MILLIS+=2;
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal-=2;
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
if(offset>59){
return ~MAX_MILLIS;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MAX_MILLIS+=2;
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
if(offset>59){
return ~MAX_MILLIS;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal-=2;
MAX_MILLIS+=2;
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal-=2;
MAX_MILLIS+=2;
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
if(offset>59){
return ~MAX_MILLIS;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=offset){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
if(instantLocal!=null){
return zone;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=new FixedDateTimeZone(iID,null,offset,offset);
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iFixedOffsetCache.put(iID,new SoftReference<DateTimeZone>(instantLocal));
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new IllegalArgumentException("The offset cannot be zero");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
instantLocal=offset;
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
if(offset==0){
return DateTimeZone.UTC;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal+=offset;
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if(MAX_MILLIS<0&&MAX_MILLIS>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if(MAX_MILLIS<-23||MAX_MILLIS>23){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if(MAX_MILLIS<-23&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&MAX_MILLIS>23){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if(MAX_MILLIS<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&MAX_MILLIS>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new IllegalArgumentException("Hours out of range: "+MAX_MILLIS);
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(MAX_MILLIS<-59||minutesOffset>59){
throw new IllegalArgumentException("Minutes out of range: "+minutesOffset);
}
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(MAX_MILLIS>0&&MAX_MILLIS<0){
throw new IllegalArgumentException("Positive hours must not have negative minutes: "+minutesOffset);
}
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if(MAX_MILLIS<0&&(instantUTC^offset)>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if(MAX_MILLIS<0&&MAX_MILLIS>23){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if(MAX_MILLIS<0&&(instantUTC^offset)>=0){
throw new IllegalArgumentException("Hours out of range: "+MAX_MILLIS);
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&MAX_MILLIS>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if(MAX_MILLIS<-23&&MAX_MILLIS>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&MAX_MILLIS>=0){
throw new IllegalArgumentException("Hours out of range: "+MAX_MILLIS);
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if(MAX_MILLIS<-23&&(instantUTC^offset)>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>0){
throw new IllegalArgumentException("Hours out of range: "+MAX_MILLIS);
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if(MAX_MILLIS<-23&&MAX_MILLIS>23){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if(MAX_MILLIS<-23&&(instantUTC^offset)>=0){
throw new IllegalArgumentException("Hours out of range: "+MAX_MILLIS);
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&MAX_MILLIS>23){
throw new IllegalArgumentException("Hours out of range: "+MAX_MILLIS);
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if(MAX_MILLIS<0&&MAX_MILLIS>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if(MAX_MILLIS<0&&MAX_MILLIS>=0){
throw new IllegalArgumentException("Hours out of range: "+MAX_MILLIS);
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if(MAX_MILLIS<0&&(instantUTC^offset)>0){
throw new IllegalArgumentException("Hours out of range: "+MAX_MILLIS);
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if(MAX_MILLIS<0&&MAX_MILLIS>23){
throw new IllegalArgumentException("Hours out of range: "+MAX_MILLIS);
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if(MAX_MILLIS<-23&&MAX_MILLIS>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&MAX_MILLIS>0){
throw new IllegalArgumentException("Hours out of range: "+MAX_MILLIS);
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if(MAX_MILLIS<-23&&MAX_MILLIS>=0){
throw new IllegalArgumentException("Hours out of range: "+MAX_MILLIS);
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if(MAX_MILLIS<-23&&(instantUTC^offset)>0){
throw new IllegalArgumentException("Hours out of range: "+MAX_MILLIS);
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if(MAX_MILLIS<-23&&MAX_MILLIS>23){
throw new IllegalArgumentException("Hours out of range: "+MAX_MILLIS);
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if(MAX_MILLIS<0&&MAX_MILLIS>0){
throw new IllegalArgumentException("Hours out of range: "+MAX_MILLIS);
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if(MAX_MILLIS<-23&&MAX_MILLIS>0){
throw new IllegalArgumentException("Hours out of range: "+MAX_MILLIS);
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantUTC-offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffset(instantUTC);
long instantLocal=instantUTC+offset;
if((instantUTC^instantLocal)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return serialVersionUID-offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.DateTimeZone,953
org.joda.time.DateTimeZone,955
org.joda.time.DateTimeZone,958
org.joda.time.DateTimeZone,979
========
if(offsetLocalFromOriginal==instantLocal){
return instantUTC;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocalFromOriginal==offset){
return instantUTC;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocalFromOriginal==instantUTC){
return instantUTC;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long offsetOriginal=getOffset(originalInstantUTC);
long instantUTC=instantLocal-offsetOriginal;
long offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==offsetOriginal){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long offsetOriginal=getOffset(originalInstantUTC);
long instantUTC=instantLocal-offsetOriginal;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==offsetOriginal){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offsetOriginal=getOffset(originalInstantUTC);
long instantUTC=instant-offsetOriginal;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==offsetOriginal){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offsetOriginal=getOffset(originalInstantUTC);
long instantUTC=instantLocal-MILLIS_PER_HOUR;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==offsetOriginal){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offsetOriginal=getOffset(originalInstantUTC);
long instantUTC=instantLocal-offsetOriginal;
long offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==offsetOriginal){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offsetOriginal=getOffset(originalInstantUTC);
long instantUTC=instantLocal-offsetOriginal;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==offsetAfter){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offsetOriginal=getOffset(originalInstantUTC);
long instantUTC=instantLocal-offsetOriginal;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==offsetOriginal){
return instantLocal;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long offsetOriginal=getOffset(originalInstantUTC);
long instantUTC=instantLocal-offsetOriginal;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==offsetOriginal){
return instantLocal;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offsetOriginal=getOffset(originalInstantUTC);
long instantUTC=instantLocal-offsetOriginal;
long offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==offsetOriginal){
return instantLocal;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long offsetOriginal=getOffset(originalInstantUTC);
long instantUTC=instantLocal-offsetOriginal;
long offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==offsetOriginal){
return instantLocal;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offsetOriginal=getOffset(originalInstantUTC);
long instantUTC=instantUTC-offsetOriginal;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==instantUTC){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offsetOriginal=getOffset(originalInstantUTC);
long instantUTC=instantLocal-offset;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==offset){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offsetOriginal=getOffset(originalInstantUTC);
long instantUTC=instantUTC-offsetOriginal;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==offsetOriginal){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offsetOriginal=getOffset(originalInstantUTC);
long instantUTC=instantLocal-offset;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==offsetOriginal){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offsetOriginal=getOffset(originalInstantUTC);
long instantUTC=instantLocal-offsetOriginal;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==instantUTC){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offsetOriginal=getOffset(originalInstantUTC);
long instantUTC=instantLocal-offsetOriginal;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==offset){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offsetOriginal=getOffset(instantLocal);
long instantUTC=instantLocal-offsetOriginal;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==offsetOriginal){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offsetOriginal=getOffset(originalInstantUTC);
long instantUTC=instantLocal-offsetOriginal;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==length){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offsetOriginal=getOffset(originalInstantUTC);
long instantUTC=instantLocal-offsetOriginal;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal!=offsetOriginal){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offsetOriginal=getOffset(originalInstantUTC);
long instantUTC=instant-offsetOriginal;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==instant){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offsetOriginal=getOffset(instantUTC);
long instantUTC=instantLocal-offsetOriginal;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==offsetOriginal){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offsetOriginal=getOffset(originalInstantUTC);
long instantUTC=instantLocal-offsetOriginal;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==instant){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offsetOriginal=getOffset(originalInstantUTC);
long instantUTC=instant-offset;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==offsetOriginal){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offsetOriginal=getOffset(originalInstantUTC);
long instantUTC=instant-offsetOriginal;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==offset){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offsetOriginal=getOffset(originalInstantUTC);
long instantUTC=instant-offset;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==offset){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offsetOriginal=getOffset(originalInstantUTC);
long instantUTC=instantLocal-offsetOriginal;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==offsetOriginal){
return instantUTC;
}
return UTC.convertLocalToUTC(instantLocal,false,originalInstantUTC);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offsetOriginal=getOffset(originalInstantUTC);
long instantUTC=instantLocal-offsetOriginal;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==offsetOriginal){
return instantUTC;
}
if(UTC==null){
newZone=DateTimeZone.getDefault();
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offsetOriginal=getOffset(originalInstantUTC);
long instantUTC=instantLocal-offsetOriginal;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==offsetOriginal){
return instantUTC;
}
if(UTC==this){
return originalInstantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offsetOriginal=getOffset(originalInstantUTC);
long instantUTC=instantLocal-offsetOriginal;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==offsetOriginal){
return instantUTC;
}
if(UTC==this){
return originalInstantUTC;
}
return UTC.convertLocalToUTC(instantLocal,false,originalInstantUTC);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(originalInstantUTC==instantUTC||next>originalInstantUTC){
break;
}
int offsetOriginal=getOffset(originalInstantUTC);
long instantUTC=instantLocal-offsetOriginal;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==offsetOriginal){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantUTC=originalInstantUTC;
int offsetOriginal=getOffset(originalInstantUTC);
long instantUTC=instantLocal-offsetOriginal;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==offsetOriginal){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offsetOriginal=getOffset(originalInstantUTC);
long instantUTC=instantLocal-offsetOriginal;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==null){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iID!=null){
return name;
}
int offsetOriginal=getOffset(originalInstantUTC);
long instantUTC=instantLocal-offsetOriginal;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==offsetOriginal){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iID!=null){
return name;
}
int offsetOriginal=getOffset(originalInstantUTC);
long instantUTC=instantLocal-offsetOriginal;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==null){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offsetOriginal=getOffset(instantUTC);
long instantUTC=instant-offsetOriginal;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==offsetOriginal){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offsetOriginal=getOffset(originalInstantUTC);
long instantUTC=instantLocal-offset;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==instant){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offsetOriginal=getOffset(instantUTC);
long instantUTC=instantLocal-offsetOriginal;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==instant){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offsetOriginal=getOffset(instantUTC);
long instantUTC=instantLocal-offset;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==offsetOriginal){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offsetOriginal=getOffset(instantUTC);
long instantUTC=instantLocal-offsetOriginal;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==offset){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offsetOriginal=getOffset(originalInstantUTC);
long instantUTC=instant-offset;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==instant){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offsetOriginal=getOffset(instantUTC);
long instantUTC=instant-offsetOriginal;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==instant){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offsetOriginal=getOffset(instantUTC);
long instantUTC=instant-offset;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==offsetOriginal){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offsetOriginal=getOffset(instantUTC);
long instantUTC=instant-offsetOriginal;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==offset){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offsetOriginal=getOffset(instantUTC);
long instantUTC=instantLocal-offset;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==instant){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offsetOriginal=getOffset(instantUTC);
long instantUTC=instantLocal-offset;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==offset){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offsetOriginal=getOffset(instantUTC);
long instantUTC=instant-offset;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==instant){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offsetOriginal=getOffset(instantUTC);
long instantUTC=instant-offset;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==offset){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offsetOriginal=getOffset(originalInstantUTC);
long instantUTC=instantLocal-offsetOriginal;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==instantLocal){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offsetOriginal=getOffset(originalInstantUTC);
long instantUTC=instantLocal-offsetOriginal;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==offsetOriginal){
return instantUTC;
}
return UTC.convertLocalToUTC(instantUTC,false,instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offsetOriginal=getOffsetToAdd(originalInstantUTC);
long instantUTC=instantLocal-offsetOriginal;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==offsetOriginal){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offsetOriginal=getOffset(originalInstantUTC);
long instantUTC=instantLocal-offsetOriginal;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==offsetLocal){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nextTransition(instantLocal-offsetOriginal)==(instantLocal-offsetOriginal)){
nextAdjusted=Long.MAX_VALUE;
}
int offsetOriginal=getOffset(originalInstantUTC);
long instantUTC=instantLocal-offsetOriginal;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==offsetOriginal){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nextTransition(instantLocal-offsetLocalFromOriginal)!=nextTransition(instantLocal-offsetOriginal)){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offsetOriginal=offsetLocalFromOriginal;
}
}
int offsetOriginal=getOffset(originalInstantUTC);
long instantUTC=instantLocal-offsetOriginal;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==offsetOriginal){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!iID.equals(UTC.getID())){
return true;
}
int offsetOriginal=getOffset(originalInstantUTC);
long instantUTC=instantLocal-offsetOriginal;
int offsetLocalFromOriginal=getOffset(instantUTC);
if(offsetLocalFromOriginal==offsetOriginal){
return instantUTC;
}
return convertLocalToUTC(instantLocal,strict);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.DateTimeZone,980
org.joda.time.DateTimeZone,981
org.joda.time.DateTimeZone,982
org.joda.time.DateTimeZone,983
org.joda.time.DateTimeZone,985
org.joda.time.DateTimeZone,1002
========
if(nextLocal!=(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instantLocal!=nextLocal){
nextLocal=Long.MAX_VALUE;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nextLocal==(instantLocal-offset)){
nextLocal=Long.MAX_VALUE;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nextLocal==(instantUTC-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nextAdjusted!=(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instantLocal!=nextAdjusted){
nextAdjusted=Long.MAX_VALUE;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instantLocal==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instantLocal!=(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nextAdjusted==(instantUTC-offset)){
nextAdjusted=Long.MAX_VALUE;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offsetLocal=MAX_MILLIS*DateTimeConstants.MILLIS_PER_HOUR;
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
nextAdjusted-=2;
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offsetLocal=MAX_MILLIS*DateTimeConstants.MILLIS_PER_HOUR;
nextAdjusted-=2;
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offsetLocal+=MAX_MILLIS*DateTimeConstants.MILLIS_PER_MINUTE;
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offsetLocal+=MAX_MILLIS*DateTimeConstants.MILLIS_PER_MINUTE;
nextAdjusted-=2;
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offsetLocal+=MAX_MILLIS*DateTimeConstants.MILLIS_PER_SECOND;
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offsetLocal+=MAX_MILLIS*DateTimeConstants.MILLIS_PER_SECOND;
nextAdjusted-=2;
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=MAX_MILLIS*DateTimeConstants.MILLIS_PER_MINUTE;
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=MAX_MILLIS*DateTimeConstants.MILLIS_PER_SECOND;
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
nextAdjusted=FieldUtils.safeMultiply(MAX_MILLIS,DateTimeConstants.MILLIS_PER_MINUTE);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
nextAdjusted=offset;
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nextAdjusted==(instant-offset)){
nextAdjusted=Long.MAX_VALUE;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nextAdjusted==(instantLocal-offset)){
zone=DateTimeZone.UTC;
nextAdjusted=Long.MAX_VALUE;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nextAdjusted==(instantLocal-offset)){
offset=0;
nextAdjusted=Long.MAX_VALUE;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nextAdjusted==(instantLocal-offset)){
zone=DateTimeZone.UTC;
offset=0;

nextAdjusted=Long.MAX_VALUE;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
nextAdjusted+=(iID.charAt(MAX_MILLIS++)-'0')*100;
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iID=convId.substring(3);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
serialVersionUID-=offset;
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nextAdjusted==(instant-offset)){
zone=DateTimeZone.UTC;
nextAdjusted=Long.MAX_VALUE;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nextAdjusted==(instant-offset)){
offset=0;
nextAdjusted=Long.MAX_VALUE;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nextAdjusted==(instant-offset)){
zone=DateTimeZone.UTC;
offset=0;

nextAdjusted=Long.MAX_VALUE;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nextAdjusted==(instantLocal-offset)){
zone=DateTimeZone.UTC;
offset=0;
nextAdjusted=Long.MAX_VALUE;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nextAdjusted==(instantLocal-offset)){
zone=DateTimeZone.UTC;
zone=DateTimeZone.UTC;
offset=0;

nextAdjusted=Long.MAX_VALUE;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nextAdjusted==(instantLocal-offset)){
offset=0;
zone=DateTimeZone.UTC;
offset=0;

nextAdjusted=Long.MAX_VALUE;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nextAdjusted==(instant-offset)){
zone=DateTimeZone.UTC;
offset=0;
nextAdjusted=Long.MAX_VALUE;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nextAdjusted==(instant-offset)){
zone=DateTimeZone.UTC;
zone=DateTimeZone.UTC;
offset=0;

nextAdjusted=Long.MAX_VALUE;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nextAdjusted==(instant-offset)){
offset=0;
zone=DateTimeZone.UTC;
offset=0;

nextAdjusted=Long.MAX_VALUE;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nextAdjusted==(instantLocal-offset)){
zone=DateTimeZone.UTC;
offset=0;
zone=DateTimeZone.UTC;
offset=0;

nextAdjusted=Long.MAX_VALUE;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nextAdjusted==(instant-offset)){
zone=DateTimeZone.UTC;
offset=0;
zone=DateTimeZone.UTC;
offset=0;

nextAdjusted=Long.MAX_VALUE;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(strict){
throw new IllegalInstantException("Illegal instant due to time zone offset transition ("+UTC);
}else {
offset=offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(strict){
if(iID!=null){
message="Cannot parse \""+iID;
}
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(strict){
throw new IllegalInstantException(instantLocal,getZone().getID());
}else {
offset=offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal-=offset;
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(strict){
if(offset==getOffset(instantLocal)){
return instantLocal-getOffset(instantLocal);
}
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(strict){
if(nextTransition(instantLocal)!=nextTransition(instantLocal-offsetLocal)){
return offsetLocal;
}
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(strict){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}else {
offset=offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(strict){
throw new ArithmeticException("Adding time zone offset caused overflow");
}else {
offset=offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(strict){
if(offsetLocal==0L){
return DateTimeZone.UTC;
}else {
iID=printOffset(offset);
return fixedOffsetZone(id,offset);
}
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(strict){
if(offsetLocal==MAX_MILLIS&&iID.equals(iID)){
System.out.println("*d* Error in "+UTC.getID());
return false;
}
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(strict){
System.out.println("*d* Error in "+UTC.getID());
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=maxValue;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(strict){
throw new IllegalArgumentException("The offset cannot be zero");
}else {
offset=offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=MAX_MILLIS;
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=MAX_MILLIS;
if(strict){
throw new IllegalArgumentException("The offset cannot be zero");
}else {
offset=offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(strict){
if(offset==0L){
return DateTimeZone.UTC;
}else {
iID=printOffset(offset);
return fixedOffsetZone(convId,offset);
}
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(strict){
if(offset>23){
return ~MAX_MILLIS;
}
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MAX_MILLIS++;
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(digitCount(iID,MAX_MILLIS,2)<2){
return ~position;
}
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offsetLocal-=MAX_MILLIS*DateTimeConstants.MILLIS_PER_MINUTE;
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(strict){
if(FormatUtils.parseTwoDigits(iID,MAX_MILLIS)>59){
return ~MAX_MILLIS;
}
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=FormatUtils.parseTwoDigits(iID,MAX_MILLIS)*DateTimeConstants.MILLIS_PER_MINUTE;
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MAX_MILLIS-=2;
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MAX_MILLIS+=2;
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=FormatUtils.parseTwoDigits(iID,MAX_MILLIS)*DateTimeConstants.MILLIS_PER_SECOND;
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MAX_MILLIS-=2;
if(strict){
if(FormatUtils.parseTwoDigits(iID,MAX_MILLIS)>59){
return ~MAX_MILLIS;
}
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MAX_MILLIS+=2;
if(strict){
if(FormatUtils.parseTwoDigits(iID,MAX_MILLIS)>59){
return ~MAX_MILLIS;
}
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MAX_MILLIS-=2;
MAX_MILLIS+=2;
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MAX_MILLIS-=2;
MAX_MILLIS+=2;
if(strict){
if(FormatUtils.parseTwoDigits(iID,MAX_MILLIS)>59){
return ~MAX_MILLIS;
}
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(strict){
if(instantLocal-previousTransition(instantLocal)<=offset){
return getOffset(previousTransition(instantLocal));
}
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
zone=DateTimeZone.UTC;
offset=offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
adjustedInstant=instantLocal;
offset=offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
zone=DateTimeZone.UTC;
adjustedInstant=instantLocal;

offset=offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
zone=DateTimeZone.UTC;
adjustedInstant=instantLocal;
offset=offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
zone=DateTimeZone.UTC;
zone=DateTimeZone.UTC;
adjustedInstant=instantLocal;

offset=offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
adjustedInstant=instantLocal;
zone=DateTimeZone.UTC;
adjustedInstant=instantLocal;

offset=offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
zone=DateTimeZone.UTC;
adjustedInstant=instantLocal;
zone=DateTimeZone.UTC;
adjustedInstant=instantLocal;

offset=offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(strict){
throw new IllegalArgumentException("Minutes out of range: "+MAX_MILLIS);
}else {
offset=offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(MAX_MILLIS>0&&MAX_MILLIS<0){
throw new IllegalArgumentException("Positive hours must not have negative minutes: "+minutesOffset);
}
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nextTransition(instantLocal)!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal==0){
throw new IllegalArgumentException("The offset cannot be zero");
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offsetLocal;
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal==0){
throw new IllegalArgumentException("The offset cannot be zero");
}
offset=offsetLocal;
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MAX_MILLIS++;
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(digitCount(iID,MAX_MILLIS,2)<2){
return ~position;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal+=MAX_MILLIS;
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=nextAdjusted*DateTimeConstants.MILLIS_PER_MINUTE;
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MAX_MILLIS-=2;
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MAX_MILLIS+=2;
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=nextAdjusted*DateTimeConstants.MILLIS_PER_SECOND;
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=nextAdjusted*DateTimeConstants.MILLIS_PER_SECOND;
MAX_MILLIS-=2;
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=nextAdjusted*DateTimeConstants.MILLIS_PER_SECOND;
MAX_MILLIS+=2;
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MAX_MILLIS-=2;
MAX_MILLIS+=2;
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=nextAdjusted*DateTimeConstants.MILLIS_PER_SECOND;
MAX_MILLIS-=2;
MAX_MILLIS+=2;
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetAdjusted||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal!=(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal!=nextAdjusted){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==nextAdjusted){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offsetLocal=(i>=0)?(i+1):~i;
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantLocal<nextAdjusted){
instant=end;
}
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(minValue||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(MAX_MILLIS==0){
throw new IllegalArgumentException("The offset cannot be zero");
}
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=MAX_MILLIS;
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(MAX_MILLIS==0){
throw new IllegalArgumentException("The offset cannot be zero");
}
offset=MAX_MILLIS;
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(strict&&offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iOffsetParsed||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(strict||offsetLocal<0){
long nextLocal=forOffsetMillis(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(count||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(strict){
if(iID.charAt(MAX_MILLIS)!='.'&&text.charAt(position)!=','){
break;
}
MAX_MILLIS--;
position++;
}
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MAX_MILLIS=digitCount(iID,MAX_MILLIS,3);
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
nextAdjusted+=(iID.charAt(MAX_MILLIS++)-'0')*100;
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(MAX_MILLIS>1){
nextAdjusted+=(iID.charAt(MAX_MILLIS++)-'0')*10;
if(count>2){
offset+=text.charAt(position++)-'0';
}
}
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=offset){
if(offsetLocal||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=offset){
if(offsetAdjusted||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=offset){
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal!=(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal!=offset){
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal!=nextAdjusted){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=offset){
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==nextAdjusted){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i!=offset){
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset=(i>=0)?(i+1):~i;
if(offsetLocal!=offset){
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantLocal<nextAdjusted){
instant=end;
}
if(offsetLocal!=offset){
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal!=null){
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantLocal!=offset){
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instantUTC!=offset){
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nextOffset!=offset){
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal==offset){
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MAX_MILLIS=offsetLocal;
if(offsetLocal!=offset){
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(hoursOffset!=offset){
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(MAX_MILLIS<-59||minutesOffset>59){
throw new IllegalArgumentException("Minutes out of range: "+minutesOffset);
}
if(offsetLocal!=offset){
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
int nextAdjusted=offset*60;
if(hoursInMinutes<0){
MAX_MILLIS=hoursInMinutes-Math.abs(minutesOffset);
}else {
minutesOffset=hoursInMinutes+minutesOffset;
}
nextLocal=FieldUtils.safeMultiply(minutesOffset,DateTimeConstants.MILLIS_PER_MINUTE);
}catch (ArithmeticException ex) {
  throw new IllegalArgumentException("Offset is too large");
}

if(offsetLocal!=offset){
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant!=offset){
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(adjustedInstant!=offset){
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MAX_MILLIS--;
if(offsetLocal!=offset){
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MAX_MILLIS++;
if(offsetLocal!=offset){
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(digitCount(iID,MAX_MILLIS,2)<2){
return ~position;
}
if(offsetLocal!=offset){
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nextAdjusted>23){
return ~MAX_MILLIS;
}
if(offsetLocal!=offset){
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offsetLocal=nextAdjusted*DateTimeConstants.MILLIS_PER_HOUR;
if(offsetLocal!=offset){
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MAX_MILLIS-=2;
if(offsetLocal!=offset){
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FormatUtils.appendPaddedInteger(new StringBuffer(),nextLocal,2);
if(offsetLocal!=offset){
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset-=nextLocal*(int)DateTimeConstants.MILLIS_PER_HOUR;
if(offsetLocal!=offset){
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new StringBuffer().append(':');
if(offsetLocal!=offset){
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
FormatUtils.appendPaddedInteger(new StringBuffer(),nextAdjusted,2);
if(offsetLocal!=offset){
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset-=nextAdjusted*DateTimeConstants.MILLIS_PER_MINUTE;
if(offsetLocal!=offset){
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return new StringBuffer().toString();
}
if(offsetLocal!=offset){
if(strict||offsetLocal<0){
long nextLocal=nextTransition(instantLocal-offsetLocal);
if(nextLocal==(instantLocal-offsetLocal)){
nextLocal=Long.MAX_VALUE;
}
long nextAdjusted=nextTransition(instantLocal-offset);
if(nextAdjusted==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
if(nextLocal!=nextAdjusted){
if(strict){
throw new IllegalInstantException(instantLocal,getID());
}else {
offset=offsetLocal;
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.DateTimeZone,1004
org.joda.time.DateTimeZone,1006
org.joda.time.DateTimeZone,1035
========
long instantUTC=instantUTC-offset;
if((instantLocal^instantUTC)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instantUTC-offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instantUTC=instant-offset;
if((instant^instantUTC)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instantLocal-offset;
if((instant^instantUTC)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instant-offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instantLocal-offset;
if((instant^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instantLocal-offset;
if((instantLocal^sum)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instantLocal-offset;
if((instantLocal^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instant-offset;
if((instant^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instant-offset;
if((instantLocal^instantUTC)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<offsetLocal){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instantUTC==(instantLocal-offset)){
nextAdjusted=Long.MAX_VALUE;
}
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instantLocal-offsetOriginal;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(getOffset(instantUTC)==offset){
return instantUTC;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(nextTransition(serialVersionUID)!=instantUTC){
return offsetLocal;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instantUTC=instantLocal-offset;
offset-=offset*DateTimeConstants.MILLIS_PER_MINUTE;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instantUTC=instantLocal-offset;
offset-=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<MAX_MILLIS&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(offset==MAX_MILLIS&&iID.equals(iID)){
System.out.println("*d* Error in "+UTC.getID());
return false;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
System.out.println("*d* Error in "+UTC.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<MAX_MILLIS&&(instantLocal^offset)<0){
System.out.println("*d* Error in "+UTC.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(offset==0L){
return DateTimeZone.UTC;
}else {
iID=printOffset(offset);
return fixedOffsetZone(id,offset);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
id=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(offset==0L){
return DateTimeZone.UTC;
}else {
iID=printOffset(offset);
return fixedOffsetZone(convId,offset);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
convId=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(offset>23){
return ~MAX_MILLIS;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MAX_MILLIS-=2;
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(offset>23){
return ~MAX_MILLIS;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(offset>59){
return ~MAX_MILLIS;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(offset>59){
return ~MAX_MILLIS;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MAX_MILLIS-=2;
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(offset>59){
return ~MAX_MILLIS;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
MAX_MILLIS-=2;
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
MAX_MILLIS-=2;
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(offset>59){
return ~MAX_MILLIS;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(offset>59){
return ~MAX_MILLIS;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
MAX_MILLIS-=2;
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
MAX_MILLIS-=2;
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(offset>59){
return ~MAX_MILLIS;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(offset==0){
return DateTimeZone.UTC;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new IllegalInstantException("Illegal instant due to time zone offset transition ("+UTC);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(iID!=null){
message="Cannot parse \""+iID;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=(iID.charAt(MAX_MILLIS++)-'0')*100;
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instantLocal-offset;
if(MAX_MILLIS<-59&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instantUTC=instantLocal-offset;
if(MAX_MILLIS<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new IllegalArgumentException("Minutes out of range: "+MAX_MILLIS);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offset>0&&MAX_MILLIS<0){
throw new IllegalArgumentException("Positive hours must not have negative minutes: "+minutesOffset);
}
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instantLocal-offset;
if(MAX_MILLIS<-59&&(instantLocal^offset)<0){
throw new IllegalArgumentException("Minutes out of range: "+MAX_MILLIS);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instantUTC=instantLocal-offset;
if(MAX_MILLIS<0&&(instantLocal^offset)<0){
throw new IllegalArgumentException("Minutes out of range: "+MAX_MILLIS);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instantUTC=instantLocal-MILLIS_PER_HOUR;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instantLocal-offset;
if((instantLocal^adjustedInstant)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new IllegalArgumentException("The offset cannot be zero");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MAX_MILLIS=offset;
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<offset){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new IllegalInstantException(serialVersionUID,getZone().getID());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instantLocal-offset;
serialVersionUID-=offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instant-offset;
if((instantLocal^sum)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instant-offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instantLocal-offset;
if((instant^sum)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instantLocal-offset;
if((instant^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instantLocal-offset;
if((instantLocal^sum)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instantLocal-offset;
if((instantLocal^instantUTC)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instantLocal-offset;
if((instantLocal^sum)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instant-offset;
if((instant^sum)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instant-offset;
if((instant^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instant-offset;
if((instantLocal^sum)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instant-offset;
if((instantLocal^instantUTC)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instant-offset;
if((instantLocal^sum)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instantLocal-offset;
if((instant^sum)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instantLocal-offset;
if((instant^instantUTC)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instantLocal-offset;
if((instant^sum)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instantLocal-offset;
if((instantLocal^sum)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instant-offset;
if((instant^sum)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instant-offset;
if((instant^instantUTC)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instant-offset;
if((instant^sum)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instant-offset;
if((instantLocal^sum)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instantLocal-offset;
if((instant^sum)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instant-offset;
if((instantLocal^adjustedInstant)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instantLocal-offset;
if((instant^adjustedInstant)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instantLocal-offset;
if((instantLocal^adjustedInstant)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instant-offset;
if((instant^adjustedInstant)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instant-offset;
if((instantLocal^adjustedInstant)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instantLocal-offset;
if((instant^adjustedInstant)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantUTC=instant-offset;
if((instant^adjustedInstant)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.DateTimeZone,1037
========
if((instantLocal^instantUTC)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantLocal^instantUTC)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^instantUTC)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^sum)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantUTC)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<offset){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new IllegalArgumentException("The offset cannot be zero");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(offset==0){
return DateTimeZone.UTC;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantUTC)<0&&MAX_MILLIS<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new IllegalArgumentException("Positive hours must not have negative minutes: "+MAX_MILLIS);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantLocal^instantUTC)<0&&MAX_MILLIS<0){
throw new IllegalArgumentException("Positive hours must not have negative minutes: "+MAX_MILLIS);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(offset==0L){
return DateTimeZone.UTC;
}else {
iID=printOffset(offset);
return fixedOffsetZone(id,offset);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
id=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(offset==0L){
return DateTimeZone.UTC;
}else {
iID=printOffset(offset);
return fixedOffsetZone(convId,offset);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
convId=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantUTC)<offsetLocal&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(nextTransition(serialVersionUID)!=nextTransition(instantUTC-offsetLocal)){
return offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantLocal^instantUTC)<offsetLocal&&(instantLocal^offset)<0){
if(nextTransition(serialVersionUID)!=nextTransition(instantUTC-offsetLocal)){
return offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantLocal^adjustedInstant)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(MAX_MILLIS>23){
return ~MAX_MILLIS;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=MAX_MILLIS*DateTimeConstants.MILLIS_PER_HOUR;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MAX_MILLIS-=2;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset=MAX_MILLIS*DateTimeConstants.MILLIS_PER_HOUR;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(MAX_MILLIS>23){
return ~MAX_MILLIS;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(MAX_MILLIS>59){
return ~MAX_MILLIS;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=MAX_MILLIS*DateTimeConstants.MILLIS_PER_MINUTE;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=MAX_MILLIS*DateTimeConstants.MILLIS_PER_MINUTE;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(MAX_MILLIS>59){
return ~MAX_MILLIS;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MAX_MILLIS-=2;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(MAX_MILLIS>59){
return ~MAX_MILLIS;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=MAX_MILLIS*DateTimeConstants.MILLIS_PER_MINUTE;
MAX_MILLIS-=2;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=MAX_MILLIS*DateTimeConstants.MILLIS_PER_MINUTE;
MAX_MILLIS-=2;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(MAX_MILLIS>59){
return ~MAX_MILLIS;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=MAX_MILLIS*DateTimeConstants.MILLIS_PER_SECOND;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=MAX_MILLIS*DateTimeConstants.MILLIS_PER_SECOND;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(MAX_MILLIS>59){
return ~MAX_MILLIS;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=MAX_MILLIS*DateTimeConstants.MILLIS_PER_SECOND;
MAX_MILLIS-=2;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=MAX_MILLIS*DateTimeConstants.MILLIS_PER_SECOND;
MAX_MILLIS-=2;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(MAX_MILLIS>59){
return ~MAX_MILLIS;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(offsetLocal==offset){
return instantUTC;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantLocal^instantUTC)<MAX_MILLIS&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(offset==MAX_MILLIS&&iID.equals(iID)){
System.out.println("*d* Error in "+UTC.getID());
return false;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
System.out.println("*d* Error in "+UTC.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantLocal^instantUTC)<MAX_MILLIS&&(instantLocal^offset)<0){
System.out.println("*d* Error in "+UTC.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=(iID.charAt(MAX_MILLIS++)-'0')*100;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new IllegalInstantException("Illegal instant due to time zone offset transition ("+UTC);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(iID!=null){
message="Cannot parse \""+iID;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^sum)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantUTC)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^sum)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instantUTC)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^sum)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new IllegalInstantException(instantUTC,UTC.getID());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^adjustedInstant)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^adjustedInstant)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^adjustedInstant)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.DateTimeZone,1040
========
if((instantLocal^instantUTC)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantLocal^instantUTC)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^instantUTC)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^sum)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantUTC)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<offset){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(offsetLocal==offset){
return instantUTC;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return oldInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
if(UTC==null){
newZone=DateTimeZone.getDefault();
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(offset==0){
return DateTimeZone.UTC;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(offset==0L){
return DateTimeZone.UTC;
}else {
iID=printOffset(offset);
return fixedOffsetZone(id,offset);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
id=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(offset==0L){
return DateTimeZone.UTC;
}else {
iID=printOffset(offset);
return fixedOffsetZone(convId,offset);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
convId=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantUTC)<offsetLocal&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(nextTransition(serialVersionUID)!=nextTransition(instantLocal-offsetLocal)){
return offsetLocal;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantLocal^instantUTC)<offsetLocal&&(instantLocal^offset)<0){
if(nextTransition(serialVersionUID)!=nextTransition(instantLocal-offsetLocal)){
return offsetLocal;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(MAX_MILLIS<-59&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(MAX_MILLIS<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new IllegalArgumentException("Minutes out of range: "+MAX_MILLIS);
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offset>0&&MAX_MILLIS<0){
throw new IllegalArgumentException("Positive hours must not have negative minutes: "+minutesOffset);
}
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(MAX_MILLIS<-59&&(instantLocal^offset)<0){
throw new IllegalArgumentException("Minutes out of range: "+MAX_MILLIS);
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(MAX_MILLIS<0&&(instantLocal^offset)<0){
throw new IllegalArgumentException("Minutes out of range: "+MAX_MILLIS);
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantLocal^instantUTC)<MAX_MILLIS&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(offset==MAX_MILLIS&&iID.equals(iID)){
System.out.println("*d* Error in "+UTC.getID());
return false;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
System.out.println("*d* Error in "+UTC.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantLocal^instantUTC)<MAX_MILLIS&&(instantLocal^offset)<0){
System.out.println("*d* Error in "+UTC.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(MAX_MILLIS>23){
return ~MAX_MILLIS;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=MAX_MILLIS*DateTimeConstants.MILLIS_PER_HOUR;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MAX_MILLIS-=2;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset=MAX_MILLIS*DateTimeConstants.MILLIS_PER_HOUR;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(MAX_MILLIS>23){
return ~MAX_MILLIS;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(MAX_MILLIS>59){
return ~MAX_MILLIS;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=MAX_MILLIS*DateTimeConstants.MILLIS_PER_MINUTE;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=MAX_MILLIS*DateTimeConstants.MILLIS_PER_MINUTE;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(MAX_MILLIS>59){
return ~MAX_MILLIS;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MAX_MILLIS-=2;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(MAX_MILLIS>59){
return ~MAX_MILLIS;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=MAX_MILLIS*DateTimeConstants.MILLIS_PER_MINUTE;
MAX_MILLIS-=2;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=MAX_MILLIS*DateTimeConstants.MILLIS_PER_MINUTE;
MAX_MILLIS-=2;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(MAX_MILLIS>59){
return ~MAX_MILLIS;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=MAX_MILLIS*DateTimeConstants.MILLIS_PER_SECOND;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=MAX_MILLIS*DateTimeConstants.MILLIS_PER_SECOND;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(MAX_MILLIS>59){
return ~MAX_MILLIS;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=MAX_MILLIS*DateTimeConstants.MILLIS_PER_SECOND;
MAX_MILLIS-=2;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=MAX_MILLIS*DateTimeConstants.MILLIS_PER_SECOND;
MAX_MILLIS-=2;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(MAX_MILLIS>59){
return ~MAX_MILLIS;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^adjustedInstant)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=(iID.charAt(MAX_MILLIS++)-'0')*100;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new IllegalInstantException("Illegal instant due to time zone offset transition ("+UTC);
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
if(iID!=null){
message="Cannot parse \""+iID;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^sum)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantUTC)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^sum)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instantUTC)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^sum)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return serialVersionUID-offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return millis;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new IllegalArgumentException("The offset cannot be zero");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MAX_MILLIS=offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new IllegalInstantException(instantUTC,getZone().getID());
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantUTC-=offset;
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^adjustedInstant)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^adjustedInstant)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^adjustedInstant)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantLocal-(strict?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantUTC-offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return UTC.convertUTCToLocal(instantUTC)-offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return next;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantUTC)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return prev;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.tz.DateTimeZoneBuilder,1535
========
if(value>0){
return iWallOffsets[i-1];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>=0){
return iWallOffsets[i-1];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i>0&&types[i-1]==types[i]){
return iWallOffsets[i-1];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parsePos>0){
return iWallOffsets[i-1];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>0){
return iWallOffsets[i-1];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>iInitialSaveMillis){
return iWallOffsets[i-1];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bestValidPos>0){
return iWallOffsets[i-1];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=(i>=0)?(i+1):~i;
if(i>0){
return iWallOffsets[i-1];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(poolSize>0){
return iWallOffsets[i-1];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iNameKeys[i]=iNameKeys[iInitialSaveMillis];
if(i>0){
return iWallOffsets[i-1];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(j>0){
return iWallOffsets[i-1];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(len>0){
return iWallOffsets[i-1];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>0){
return iWallOffsets[i-1];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(minDaysInFirstWeek>0){
return iWallOffsets[i-1];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(compare>0){
return iWallOffsets[i-1];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.tz.DateTimeZoneBuilder,1536
org.joda.time.tz.DateTimeZoneBuilder,1574
========
if(value<transitions.length){
return transitions[i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i<=transitions.length){
return transitions[i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i<iInitialSaveMillis){
return transitions[i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bestValidPos<transitions.length){
return transitions[i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(transitions.length<=1){
return false;
}
if(i<transitions.length){
return transitions[i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<transitions[transitions.length-1]){
instant=end;
}
if(i<transitions.length){
return transitions[i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<transitions.length){
return transitions[i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i<types.length){
return transitions[i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(j<transitions.length){
return transitions[i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i<args.length){
return transitions[i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parsePos<transitions.length){
return transitions[i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(poolSize<transitions.length){
return transitions[i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iNameKeys[i]=iNameKeys[iInitialSaveMillis];
if(i<transitions.length){
return transitions[i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i<length){
return transitions[i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i--;
if(i<transitions.length){
return transitions[i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(minDaysInFirstWeek<transitions.length){
return transitions[i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(prev<transitions.length){
return transitions[i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(millis<transitions.length){
return transitions[i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index<transitions.length){
return transitions[i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pass<transitions.length){
return transitions[i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(savedFieldsCount<transitions.length){
return transitions[i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(newPos<transitions.length){
return transitions[i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(position<transitions.length){
return transitions[i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(errorPos<transitions.length){
return transitions[i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(limit<transitions.length){
return transitions[i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i<i+3){
return transitions[i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pos<transitions.length){
return transitions[i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.BaseChronology,132
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,hourOfDay);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,minuteOfHour);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,secondOfMinute);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,hourOfDay);
instant=dayOfMonth().set(instant,minuteOfHour);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,hourOfDay);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,secondOfMinute);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,minuteOfHour);
instant=hourOfDay().set(instant,secondOfMinute);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,hourOfDay);
instant=dayOfMonth().set(instant,minuteOfHour);
instant=hourOfDay().set(instant,secondOfMinute);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfDay().set(instant,hourOfDay);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,hourOfDay);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,millisOfSecond);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,hourOfDay);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,millisOfSecond);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,minuteOfHour);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,millisOfSecond);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,secondOfMinute);
instant=minuteOfHour().set(instant,millisOfSecond);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,hourOfDay);
instant=dayOfMonth().set(instant,minuteOfHour);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,millisOfSecond);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,hourOfDay);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,secondOfMinute);
instant=minuteOfHour().set(instant,millisOfSecond);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,minuteOfHour);
instant=hourOfDay().set(instant,secondOfMinute);
instant=minuteOfHour().set(instant,millisOfSecond);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,hourOfDay);
instant=dayOfMonth().set(instant,minuteOfHour);
instant=hourOfDay().set(instant,secondOfMinute);
instant=minuteOfHour().set(instant,millisOfSecond);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,year);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,monthOfYear);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,dayOfMonth);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,year);
instant=dayOfMonth().set(instant,monthOfYear);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,year);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,dayOfMonth);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,monthOfYear);
instant=hourOfDay().set(instant,dayOfMonth);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,year);
instant=dayOfMonth().set(instant,monthOfYear);
instant=hourOfDay().set(instant,dayOfMonth);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,dayOfMonth);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instant=year().set(0,year);
instant=monthOfYear().add(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instant=year().set(0,year);
instant=monthOfYear().add(instant,dayOfMonth);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,instant);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,instant);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,hourOfDay);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,dayOfMonth);
instant=dayOfMonth().set(instant,hourOfDay);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,instant);
instant=dayOfMonth().set(instant,instant);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().add(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return getWrappedField().roundFloor(field.set(instant,get(instant)*minuteOfHour));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,minuteOfHour);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
checkLimits(instant,null);
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkLimits(getWrappedField().set(instant,minuteOfHour),"resulting");
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkLimits(serialVersionUID,"resulting");
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,minuteOfHour);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return getWrappedField().set(instant,dayOfMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,dayOfMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
FieldUtils.verifyValueBounds(this,dayOfMonth,1,minuteOfHour);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
if(dayOfMonth==minuteOfHour){
value=0;
}
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().safeAdd(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dayOfMonth==0){
return instant;
}
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return getWrappedField().set(instant,getDivided(getWrappedField().get(instant))*dayOfMonth+minuteOfHour);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
FieldUtils.verifyValueBounds(this,minuteOfHour,0,dayOfMonth-1);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return getWrappedField().set(instant,monthOfYear*year+getRemainder(getWrappedField().get(instant)));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
FieldUtils.verifyValueBounds(this,monthOfYear,minuteOfHour,dayOfMonth);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dayOfMonth==0){
return instant;
}
int instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int instant=year().set(0,year);
instant=monthOfYear().set(instant,minuteOfHour);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkLimits(instant,"resulting");
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
serialVersionUID=ISOChronology.getInstanceUTC().year().set(0,2050);
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
serialVersionUID=ISOChronology.getInstanceUTC().year().set(0,1850);
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
checkLimits(instant,null);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return getWrappedField().getValue(serialVersionUID,instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().getValue(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
checkLimits(instant,null);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return getWrappedField().getValueAsLong(serialVersionUID,instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().getValueAsLong(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return getWrappedField().getMillis(minuteOfHour,instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().getMillis(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return getWrappedField().get(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return getWrappedField().isLeap(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return getWrappedField().getLeapAmount(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return getWrappedField().getMinimumValue(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return getWrappedField().getMaximumValue(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().setYear(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return new StringBuffer(requirePrinter().estimatePrintedLength()).toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
printTo(new StringBuffer(requirePrinter().estimatePrintedLength()),instant);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().safeMultiply(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return getWrappedField().getMillis(FieldUtils.safeMultiply(serialVersionUID,minuteOfHour),instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return getWrappedField().add(instant,FieldUtils.safeMultiply(serialVersionUID,minuteOfHour));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().add(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instant=year().safeMultiply(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().add(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getWrappedField().get(instant)==0){
value=getMaximumValue();
}
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkLimits(getWrappedField().roundFloor(instant),"resulting");
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkLimits(getWrappedField().roundCeiling(instant),"resulting");
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkLimits(getWrappedField().roundHalfFloor(instant),"resulting");
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkLimits(getWrappedField().roundHalfCeiling(instant),"resulting");
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkLimits(getWrappedField().roundHalfEven(instant),"resulting");
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkLimits(getWrappedField().remainder(instant),"resulting");
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return julianToGregorianByWeekyear(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return julianToGregorianByYear(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return gregorianToJulianByWeekyear(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return gregorianToJulianByYear(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().add(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(minuteOfHour==0){
return this;
}
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(minuteOfHour==0){
return this;
}
long instant=year().add(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(millisOfSecond==0){
return this;
}
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().subtract(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(minuteOfHour==0){
return this;
}
long instant=year().subtract(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(millisOfSecond==0){
return this;
}
long instant=year().subtract(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(millisOfSecond==0){
return this;
}
long instant=year().add(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case ROUND_CEILING :

long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case ROUND_HALF_CEILING :

long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(year<=0){
year=1-year;
}
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(year<=0){
year=1-year;
}
int instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return getWrappedField().getMillis(((long)dayOfMonth)*((long)dayOfMonth),instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return getWrappedField().add(instant,((long)dayOfMonth)*((long)dayOfMonth));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return FieldUtils.safeAdd(instant,FieldUtils.safeMultiply(serialVersionUID,serialVersionUID));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().safeAdd(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().safeMultiply(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return FieldUtils.safeAdd(instant,FieldUtils.safeMultiply(serialVersionUID,serialVersionUID));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkLimits(getWrappedField().add(instant,minuteOfHour),"resulting");
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkLimits(instant,null);
long instant=year().add(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().addWrapField(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
checkLimits(getWrappedField().addWrapField(instant,minuteOfHour),"resulting");
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkLimits(instant,null);
long instant=year().addWrapField(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,get(instant),dayOfMonth,monthOfYear);
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return getDaysInYearMonth(monthOfYear,dayOfMonth);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().getDaysInYearMonth(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return add(instant,-minuteOfHour);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
if(minuteOfHour==Integer.MIN_VALUE){
return subtract(instant,(long)value);
}
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return FieldUtils.safeAdd(instant,dayOfMonth*serialVersionUID);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(serialVersionUID==0||minuteOfHour==0){
return this;
}
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return add(instant,-serialVersionUID);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
if(serialVersionUID==Long.MIN_VALUE){
throw new ArithmeticException("Long.MIN_VALUE cannot be negated");
}
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
if(serialVersionUID==Long.MIN_VALUE){
throw new ArithmeticException("Long.MIN_VALUE cannot be negated");
}
return millisOfSecond().add(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
FieldUtils.verifyValueBounds(this,minuteOfHour,getMinimumValue(),getMaximumValueForSet(instant,value));
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant==Long.MIN_VALUE){
year=Integer.MIN_VALUE;
}else {
year=ISOChronology.getInstanceUTC().year().get(instant+minuteOfHour+minuteOfHour);
}
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,minuteOfHour);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
FieldUtils.verifyValueBounds(this,minuteOfHour,DateTimeConstants.BCE,DateTimeConstants.CE);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return FieldUtils.safeAdd(instant,FieldUtils.safeMultiply(serialVersionUID,minuteOfHour));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(serialVersionUID==0||minuteOfHour==0){
return instant;
}
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().safeMultiply(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return FieldUtils.safeAdd(instant,FieldUtils.safeMultiply(serialVersionUID,minuteOfHour));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().safeMultiply(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().safeAdd(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getWrappedField().get(instant)>=0){
return value/dayOfMonth;
}else {
return ((value+1)/iDivisor)-1;
}
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
if(dayOfMonth>354){
if(!isLeapYear(year)){
dayOfYear--;
}
}
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
if(dayOfMonth>365){
if(!isLeapYear(year)){
dayOfYear--;
}
}
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getWrappedField().get(instant)>=0){
return value%dayOfMonth;
}else {
return (iDivisor-1)+((value+1)%iDivisor);
}
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant-roundFloor(instant)<=roundCeiling(instant)-instant){
return roundFloor(instant);
}else {
return roundCeiling(instant);
}
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(roundCeiling(instant)-instant<=instant-roundFloor(instant)){
return roundCeiling(instant);
}else {
return roundFloor(instant);
}
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int instant=year().set(0,year);
instant=monthOfYear().add(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getOffset(instant)<=getOffset(instant+3*DateTimeConstants.MILLIS_PER_HOUR)){
return instant;
}
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dayOfMonth=~i;
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dayOfMonth=~i;
int instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().getDaysInYearMonth(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,monthOfYear,MIN,minuteOfHour);
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dayOfMonth>dayOfMonth){
thisDom=maxDom;
}
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant-roundFloor(instant)<roundCeiling(instant)-instant){
return roundFloor(instant);
}else if(diffToCeiling<diffFromFloor){
return roundCeiling(instant);
}else {
if((get(ceiling)&1)==0){
return ceiling;
}
return floor;
}
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondOfMinute>secondOfMinute){
dayToUse=maxDay;
}
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int instant=year().getDaysInYearMonth(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
minuteOfHour=(i>=0)?(i+1):~i;
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
boolean instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return ISODateTimeFormat.forFields(new ArrayList<DateTimeFieldType>(),true,true).print(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
new ArrayList<DateTimeFieldType>().add(DateTimeFieldType.monthOfYear());
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
new ArrayList<DateTimeFieldType>().add(DateTimeFieldType.dayOfMonth());
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,get(instant),minuteOfHour,dayOfMonth);
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkLimits(getWrappedField().add(instant,serialVersionUID),"resulting");
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkLimits(getWrappedField().add(instant,minuteOfHour),"resulting");
long instant=year().add(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkLimits(instant,null);
checkLimits(getWrappedField().add(instant,minuteOfHour),"resulting");
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkLimits(instant,null);
checkLimits(getWrappedField().add(instant,minuteOfHour),"resulting");
long instant=year().add(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkLimits(getWrappedField().add(instant,serialVersionUID),"resulting");
long instant=year().add(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkLimits(instant,null);
checkLimits(getWrappedField().add(instant,serialVersionUID),"resulting");
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkLimits(instant,null);
checkLimits(getWrappedField().add(instant,serialVersionUID),"resulting");
long instant=year().add(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return getWrappedField().getMillis(serialVersionUID,instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
checkLimits(instant,null);
return millisOfSecond().getMillis(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return getChronology().year().get(getLocalMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return getChronology().monthOfYear().get(getLocalMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return getChronology().dayOfMonth().get(getLocalMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case DAY_OF_YEAR :

long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case DAY_OF_MONTH :

long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case MINUTE_OF_DAY :

long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case SECOND_OF_DAY :

long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case MILLIS_OF_DAY :

long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return getChronology().millisOfDay().get(getLocalMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return getChronology().hourOfDay().get(getLocalMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return getChronology().minuteOfHour().get(getLocalMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return getChronology().secondOfMinute().get(getLocalMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return getChronology().millisOfSecond().get(getLocalMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :

long instant=year().set(0,year);
instant=monthOfYear().set(instant,monthOfYear);
instant=dayOfMonth().set(instant,dayOfMonth);
instant=hourOfDay().set(instant,hourOfDay);
instant=minuteOfHour().set(instant,minuteOfHour);
instant=secondOfMinute().set(instant,secondOfMinute);
return millisOfSecond().set(instant,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.BaseChronology,133
org.joda.time.chrono.BaseChronology,134
org.joda.time.chrono.BaseChronology,135
org.joda.time.chrono.BaseChronology,136
org.joda.time.chrono.BaseChronology,137
org.joda.time.chrono.BaseChronology,138
org.joda.time.chrono.AssembledChronology,136
========
Chronology base;
if((base=iBase)!=null&&(iBaseFlags&1)==1){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Chronology base;
if((base=iBase)!=null&&(iBaseFlags&1)==5){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Chronology base;
if((base=iBase)!=null&&(iBaseFlags&5)==1){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Chronology base;
if((base=iBase)!=null&&(iBaseFlags&5)==5){
return base.getDateTimeMillis(serialVersionUID,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Chronology base;
if((base=iBase)!=null&&(iBaseFlags&5)==5){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
return super.getDateTimeMillis(serialVersionUID,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Chronology base;
if((base=iBase)!=null&&(iBaseFlags&1)==1){
return base.getDateTimeMillis(serialVersionUID,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Chronology base;
if((base=iBase)!=null&&(iBaseFlags&1)==1){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
return super.getDateTimeMillis(serialVersionUID,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Chronology base;
if((base=iBase)!=null&&(iBaseFlags&1)==5){
return base.getDateTimeMillis(serialVersionUID,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Chronology base;
if((base=iBase)!=null&&(iBaseFlags&1)==5){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
return super.getDateTimeMillis(serialVersionUID,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Chronology base;
if((base=iBase)!=null&&(iBaseFlags&5)==1){
return base.getDateTimeMillis(serialVersionUID,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Chronology base;
if((base=iBase)!=null&&(iBaseFlags&5)==1){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
return super.getDateTimeMillis(serialVersionUID,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Chronology base;
if((base=iBase)!=null&&(iBaseFlags&5)==5){
return base.getDateTimeMillis(serialVersionUID,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
return super.getDateTimeMillis(serialVersionUID,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Chronology base;
if((base=iBase)!=null&&(iBaseFlags&1)==1){
return base.getDateTimeMillis(serialVersionUID,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
return super.getDateTimeMillis(serialVersionUID,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Chronology base;
if((base=iBase)!=null&&(iBaseFlags&1)==5){
return base.getDateTimeMillis(serialVersionUID,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
return super.getDateTimeMillis(serialVersionUID,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Chronology base;
if((base=iBase)!=null&&(iBaseFlags&5)==1){
return base.getDateTimeMillis(serialVersionUID,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
return super.getDateTimeMillis(serialVersionUID,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Chronology base;
if((base=iBase)!=null&&(iBaseFlags&6)==6){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Chronology base;
if((base=iBase)!=null&&(iBaseFlags&6)==5){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Chronology base;
if((base=iBase)!=null&&(iBaseFlags&5)==6){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Chronology base;
if((base=iBase)!=null&&(iBaseFlags&5)==5){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=iBase)!=null&&(iBaseFlags&5)==5){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if(monthOfYear!=2||iBaseFlags!=29){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=iBase)!=null&&(iBaseFlags&5)!=5){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Chronology base;
if(monthOfYear!=2&&(iBaseFlags&5)==5){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=iBase)!=null&&iBaseFlags!=29){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Chronology base;
if((base=iBase)!=null&&iBaseFlags==5){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Chronology base;
if((base=iBase)!=null&&(iBaseFlags&5)==29){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Chronology base;
if((base=iBase)!=null&&iBaseFlags!=5){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Chronology base;
if((base=iBase)!=null&&(iBaseFlags&5)!=29){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Chronology base;
if((base=iBase)!=null&&iBaseFlags==29){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Chronology base;
if((base=iBase)!=null&&(iBaseFlags&5)==5){
return base.getZone();
}
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if(info.iYear!=year){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=iBase)!=null&&info.iYear!=year){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=iBase)!=null&&(iBaseFlags&5)==year){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Chronology base;
if(iBaseFlags==12&&(iBaseFlags&5)==5){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(get(serialVersionUID)<year){
serialVersionUID+=DateTimeConstants.MILLIS_PER_WEEK;
}else if(workWoyYear>year){
workInstant-=DateTimeConstants.MILLIS_PER_WEEK;
}
Chronology base;
if((base=iBase)!=null&&(iBaseFlags&5)==5){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
serialVersionUID=getYearMonthDayMillis(year,1,iBaseFlags);
Chronology base;
if((base=iBase)!=null&&(iBaseFlags&5)==5){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
serialVersionUID+=millisOfDay;
Chronology base;
if((base=iBase)!=null&&(iBaseFlags&5)==5){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
serialVersionUID=getYearMonthDayMillis(year,1,iBaseFlags);
serialVersionUID+=millisOfDay;
Chronology base;
if((base=iBase)!=null&&(iBaseFlags&5)==5){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=iBase)!=null&&(iBaseFlags&5)==5){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
return super.set(serialVersionUID,year);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=iBase)!=null&&(iBaseFlags&5)==5){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
FieldUtils.verifyValueBounds(this,year,1,getMaximumValue());
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=iBase)!=null&&(iBaseFlags&5)==5){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
FieldUtils.verifyValueBounds(this,year,0,getMaximumValue());
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=iBase)!=null&&(iBaseFlags&5)==5){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
if(getWrappedField().get(serialVersionUID)<0){
year=-year;
}
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
base=base.withUTC();
Chronology base;
if((base=iBase)!=null&&(iBaseFlags&5)==5){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(base==null){
throw new IllegalArgumentException("UTC chronology must not be null");
}
Chronology base;
if((base=iBase)!=null&&(iBaseFlags&5)==5){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=iBase)!=null&&(iBaseFlags&5)==iBaseFlags){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.joda.time.chrono.GJChronology,269
org.joda.time.chrono.GJChronology,270
Find no block!
org.joda.time.chrono.GJChronology,279
========
base=base;
super(base,new Object[]{julian,gregorian,cutoverInstant});

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.GJChronology,280
Find no block!
org.joda.time.chrono.GJChronology,105
Find no block!
org.joda.time.chrono.GJChronology,108
Find no block!
org.joda.time.chrono.GJChronology,83
========
return iGregorianField.get(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return iJulianField.get(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return iField.get(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getWrappedField().get(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkLimits(instant,null);
return to.getDateTimeMillis(from.year().get(instant),from.monthOfYear().get(instant),from.dayOfMonth().get(instant),from.millisOfDay().get(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return chrono.getDateTimeMillis(from.year().get(instant),from.monthOfYear().get(instant),from.dayOfMonth().get(instant),from.millisOfDay().get(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return to.dayOfMonth().roundFloor(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
return chronology.getDateTimeMillis(from.year().get(instant),from.monthOfYear().get(instant),from.dayOfMonth().get(instant),from.millisOfDay().get(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return from.getZone().convertLocalToUTC(from.getZone().convertUTCToLocal(instant),false,instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
return iBase.getDateTimeMillis(from.year().get(instant),from.monthOfYear().get(instant),from.dayOfMonth().get(instant),from.millisOfDay().get(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iCutover=getType().getField(from.withUTC()).add(localInstant,iCutover);
return to.getDateTimeMillis(from.year().get(instant),from.monthOfYear().get(instant),from.dayOfMonth().get(instant),from.millisOfDay().get(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getWrappedField().roundFloor(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getWrappedField().roundCeiling(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getWrappedField().roundHalfFloor(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getWrappedField().roundHalfCeiling(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getWrappedField().roundHalfEven(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getWrappedField().remainder(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getWrappedField().isLeap(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getWrappedField().getLeapAmount(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return findMatchingRecurrence(instant).getNameKey();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getInfo(instant).getNameKey(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getInfo(instant).getOffset(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getInfo(instant).getStandardOffset(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return FieldUtils.safeToInt(getValueAsLong(iCutover,instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkLimits(instant,null);
return getWrappedField().isLeap(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkLimits(instant,null);
return getWrappedField().getLeapAmount(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getWrappedField().getMinimumValue(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getWrappedField().getMaximumValue(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getWrappedField().getValue(iCutover,instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getWrappedField().getValueAsLong(iCutover,instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return iField.getValue(iCutover,addOffset(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return iField.getValueAsLong(iCutover,addOffset(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return Integer.toString(get());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return iField.roundFloor(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return iField.getAsText(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return iField.getAsShortText(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return iField.isLeap(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return iField.getLeapAmount(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return iField.getMinimumValue(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return iField.getMaximumValue(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return iField.roundCeiling(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return iField.roundHalfFloor(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return iField.roundHalfCeiling(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return iField.roundHalfEven(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return iField.remainder(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return new StringBuffer(requirePrinter().estimatePrintedLength()).toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
printTo(new StringBuffer(requirePrinter().estimatePrintedLength()),instant);
return to.getDateTimeMillis(from.year().get(instant),from.monthOfYear().get(instant),from.dayOfMonth().get(instant),from.millisOfDay().get(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return iField.getValue(iCutover,instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return iField.getValueAsLong(iCutover,instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return julianToGregorianByWeekyear(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return julianToGregorianByYear(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return gregorianToJulianByWeekyear(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return gregorianToJulianByYear(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getWrappedField().getMillis(iCutover,instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getWrappedField().add(instant,iCutover);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return iField.isLeap(iCutover);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return iField.getLeapAmount(iCutover);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return iField.remainder(iCutover);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return iField.getMinimumValue(iCutover);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return iField.getMaximumValue(iCutover);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getChronology().year().get(getLocalMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getChronology().monthOfYear().get(getLocalMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getChronology().dayOfMonth().get(getLocalMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getChronology().millisOfDay().get(getLocalMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getChronology().year().get(getMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getChronology().monthOfYear().get(getMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getChronology().dayOfMonth().get(getMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getChronology().millisOfDay().get(getMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return base.getDateTimeMillis(from.year().get(instant),from.monthOfYear().get(instant),from.dayOfMonth().get(instant),from.millisOfDay().get(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return FieldUtils.safeAdd(instant,FieldUtils.safeMultiply(iCutover,iCutoverMillis));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return iGregorianField.get(getMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iGregorianField==null){
throw new IllegalArgumentException("The DateTimeField must not be null");
}
return to.getDateTimeMillis(from.year().get(instant),from.monthOfYear().get(instant),from.dayOfMonth().get(instant),from.millisOfDay().get(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getDaysInYearMonth(getYear(instant),getMonthOfYear(instant,getYear(instant)));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return iJulianField.getMinimumValue(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return iGregorianField.getMaximumValue(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return add(instant,-iCutover);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iCutover==Long.MIN_VALUE){
throw new ArithmeticException("Long.MIN_VALUE cannot be negated");
}
return to.getDateTimeMillis(from.year().get(instant),from.monthOfYear().get(instant),from.dayOfMonth().get(instant),from.millisOfDay().get(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return iGregorianField.isLeap(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return iJulianField.isLeap(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return iGregorianField.getLeapAmount(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return iJulianField.getLeapAmount(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return to.getMinimumValue(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return iGregorianField.getDateTimeMillis(from.year().get(instant),from.monthOfYear().get(instant),from.dayOfMonth().get(instant),from.millisOfDay().get(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return iJulianField.getDateTimeMillis(from.year().get(instant),from.monthOfYear().get(instant),from.dayOfMonth().get(instant),from.millisOfDay().get(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return to.getMaximumValue(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return iJulianField.getMaximumValue(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return FieldUtils.safeAdd(instant,iCutover);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getField().get(getMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getChronology().era().get(getLocalMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getChronology().centuryOfEra().get(getLocalMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getChronology().yearOfEra().get(getLocalMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getChronology().yearOfCentury().get(getLocalMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getChronology().weekyear().get(getLocalMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getChronology().weekOfWeekyear().get(getLocalMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getChronology().dayOfYear().get(getLocalMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getChronology().dayOfWeek().get(getLocalMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getChronology().hourOfDay().get(getLocalMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getChronology().minuteOfHour().get(getLocalMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getChronology().secondOfMinute().get(getLocalMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getChronology().millisOfSecond().get(getLocalMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getChronology().era().get(getMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getChronology().centuryOfEra().get(getMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getChronology().yearOfEra().get(getMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getChronology().yearOfCentury().get(getMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getChronology().weekyear().get(getMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getChronology().weekOfWeekyear().get(getMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getChronology().dayOfYear().get(getMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getChronology().dayOfWeek().get(getMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getChronology().hourOfDay().get(getMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getChronology().minuteOfDay().get(getMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getChronology().minuteOfHour().get(getMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getChronology().secondOfDay().get(getMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getChronology().secondOfMinute().get(getMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getChronology().millisOfSecond().get(getMillis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return ISODateTimeFormat.forFields(new ArrayList<DateTimeFieldType>(),true,true).print(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new ArrayList<DateTimeFieldType>().add(DateTimeFieldType.monthOfYear());
return to.getDateTimeMillis(from.year().get(instant),from.monthOfYear().get(instant),from.dayOfMonth().get(instant),from.millisOfDay().get(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new ArrayList<DateTimeFieldType>().add(DateTimeFieldType.dayOfMonth());
return to.getDateTimeMillis(from.year().get(instant),from.monthOfYear().get(instant),from.dayOfMonth().get(instant),from.millisOfDay().get(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return UnsupportedDateTimeField.getInstance(DateTimeFieldType.millisOfDay(),millis());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return UnsupportedDateTimeField.getInstance(DateTimeFieldType.dayOfMonth(),days());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return UnsupportedDateTimeField.getInstance(DateTimeFieldType.monthOfYear(),months());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return UnsupportedDateTimeField.getInstance(DateTimeFieldType.year(),years());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return to.year();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return to.monthOfYear();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return to.dayOfMonth();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return to.millisOfDay();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getDurationField().add(instant,iCutover);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkLimits(instant,null);
return getWrappedField().getMillis(iCutover,instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return iField.getMillis(iCutover,addOffset(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return iField.getMillis(iCutover,instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return iField.add(instant,iCutover);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return iGregorianField.add(instant,iCutover);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.GJChronology,173
========
return getInstance(zone,DEFAULT_CUTOVER,4);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
return getInstance(zone,iCutoverInstant,4);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getInstance(DateTimeZone.UTC,DEFAULT_CUTOVER,4);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
return getInstance(DateTimeZone.UTC,gregorianCutover,4);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
return getInstance(DateTimeZone.getDefault(),DEFAULT_CUTOVER,4);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
return getInstance(zone,iCutoverInstant,getMinimumDaysInFirstWeek());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==null){
zone=DateTimeZone.getDefault();
}
return getInstance(zone,gregorianCutover,4);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(zone==getZone()){
return this;
}
return getInstance(zone,gregorianCutover,4);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==null){
zone=DateTimeZone.getDefault();
}
return getInstance(zone,iCutoverInstant,4);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getInstance(getZone(),iCutoverInstant,getMinimumDaysInFirstWeek());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==null){
zone=DateTimeZone.getDefault();
}
return getInstance(zone,iCutoverInstant,getMinimumDaysInFirstWeek());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==getZone()){
return this;
}
return getInstance(zone,iCutoverInstant,getMinimumDaysInFirstWeek());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==getZone()){
return this;
}
return getInstance(zone,iCutoverInstant,4);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==null){
zone=DateTimeZone.getDefault();
}
if(zone==getZone()){
return this;
}
return getInstance(zone,gregorianCutover,4);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==null){
zone=DateTimeZone.getDefault();
}
if(zone==getZone()){
return this;
}
return getInstance(zone,iCutoverInstant,getMinimumDaysInFirstWeek());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==null){
zone=DateTimeZone.getDefault();
}
if(zone==getZone()){
return this;
}
return getInstance(zone,iCutoverInstant,4);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.GJChronology,189
========
if(getZone()==zone){
return this;
}
zone=DateTimeUtils.getZone(zone);
Instant cutoverInstant;
if(gregorianCutover==null){
cutoverInstant=DEFAULT_CUTOVER;
}else {
cutoverInstant=gregorianCutover.toInstant();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
zone=DateTimeUtils.getZone(zone);
Instant cutoverInstant;
if(gregorianCutover==DateTimeUtils.getZone(getZone())){
cutoverInstant=DEFAULT_CUTOVER;
}else {
cutoverInstant=gregorianCutover.toInstant();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone!=null){
return zone;
}
zone=DateTimeUtils.getZone(zone);
Instant cutoverInstant;
if(gregorianCutover==null){
cutoverInstant=DEFAULT_CUTOVER;
}else {
cutoverInstant=gregorianCutover.toInstant();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getChronology().getZone()!=zone){
setChronology(chrono.withZone(newZone));
}
zone=DateTimeUtils.getZone(zone);
Instant cutoverInstant;
if(gregorianCutover==null){
cutoverInstant=DEFAULT_CUTOVER;
}else {
cutoverInstant=gregorianCutover.toInstant();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setChronology(getChronology().withZone(zone));
zone=DateTimeUtils.getZone(zone);
Instant cutoverInstant;
if(gregorianCutover==null){
cutoverInstant=DEFAULT_CUTOVER;
}else {
cutoverInstant=gregorianCutover.toInstant();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setMillis(DateTimeUtils.getZone(getZone()).getMillisKeepLocal(zone,getMillis()));
zone=DateTimeUtils.getZone(zone);
Instant cutoverInstant;
if(gregorianCutover==null){
cutoverInstant=DEFAULT_CUTOVER;
}else {
cutoverInstant=gregorianCutover.toInstant();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iCutover=getChronology().withZone(zone).dayOfMonth().roundFloor(instant);
zone=DateTimeUtils.getZone(zone);
Instant cutoverInstant;
if(gregorianCutover==null){
cutoverInstant=DEFAULT_CUTOVER;
}else {
cutoverInstant=gregorianCutover.toInstant();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super();
zone=DateTimeUtils.getZone(zone);
Instant cutoverInstant;
if(gregorianCutover==null){
cutoverInstant=DEFAULT_CUTOVER;
}else {
cutoverInstant=gregorianCutover.toInstant();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iCutoverMillis=iCutover;
zone=DateTimeUtils.getZone(zone);
Instant cutoverInstant;
if(gregorianCutover==null){
cutoverInstant=DEFAULT_CUTOVER;
}else {
cutoverInstant=gregorianCutover.toInstant();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
minDaysInFirstWeek=minDaysInFirstWeek;
zone=DateTimeUtils.getZone(zone);
Instant cutoverInstant;
if(gregorianCutover==null){
cutoverInstant=DEFAULT_CUTOVER;
}else {
cutoverInstant=gregorianCutover.toInstant();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
zone=DateTimeUtils.getZone(zone);
Instant cutoverInstant;
if(gregorianCutover!=null){
cutoverInstant=DEFAULT_CUTOVER;
}else {
cutoverInstant=gregorianCutover.toInstant();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
zone=DateTimeUtils.forTimeZone(zone);
Instant cutoverInstant;
if(gregorianCutover==null){
cutoverInstant=DEFAULT_CUTOVER;
}else {
cutoverInstant=gregorianCutover.toInstant();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super(iDurationField.getType());
zone=DateTimeUtils.getZone(zone);
Instant cutoverInstant;
if(gregorianCutover==null){
cutoverInstant=DEFAULT_CUTOVER;
}else {
cutoverInstant=gregorianCutover.toInstant();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!iDurationField.isSupported()){
throw new IllegalArgumentException();
}
zone=DateTimeUtils.getZone(zone);
Instant cutoverInstant;
if(gregorianCutover==null){
cutoverInstant=DEFAULT_CUTOVER;
}else {
cutoverInstant=gregorianCutover.toInstant();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iField=iDurationField;
zone=DateTimeUtils.getZone(zone);
Instant cutoverInstant;
if(gregorianCutover==null){
cutoverInstant=DEFAULT_CUTOVER;
}else {
cutoverInstant=gregorianCutover.toInstant();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iConvertByWeekyear=useTimeArithmetic(iDurationField);
zone=DateTimeUtils.getZone(zone);
Instant cutoverInstant;
if(gregorianCutover==null){
cutoverInstant=DEFAULT_CUTOVER;
}else {
cutoverInstant=gregorianCutover.toInstant();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==null){
throw new IllegalArgumentException("The datetime zone must not be null");
}
zone=DateTimeUtils.getZone(zone);
Instant cutoverInstant;
if(gregorianCutover==null){
cutoverInstant=DEFAULT_CUTOVER;
}else {
cutoverInstant=gregorianCutover.toInstant();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(zone==null){
throw new IllegalArgumentException("The datetime zone must not be null");
}
zone=DateTimeUtils.getZone(zone);
Instant cutoverInstant;
if(gregorianCutover!=null){
cutoverInstant=DEFAULT_CUTOVER;
}else {
cutoverInstant=gregorianCutover.toInstant();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
super(iGregorianField.getType());
zone=DateTimeUtils.getZone(zone);
Instant cutoverInstant;
if(gregorianCutover==null){
cutoverInstant=DEFAULT_CUTOVER;
}else {
cutoverInstant=gregorianCutover.toInstant();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!iGregorianField.isSupported()){
throw new IllegalArgumentException();
}
zone=DateTimeUtils.getZone(zone);
Instant cutoverInstant;
if(gregorianCutover==null){
cutoverInstant=DEFAULT_CUTOVER;
}else {
cutoverInstant=gregorianCutover.toInstant();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iField=iGregorianField;
zone=DateTimeUtils.getZone(zone);
Instant cutoverInstant;
if(gregorianCutover==null){
cutoverInstant=DEFAULT_CUTOVER;
}else {
cutoverInstant=gregorianCutover.toInstant();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iDurationField=iDurationField;
zone=DateTimeUtils.getZone(zone);
Instant cutoverInstant;
if(gregorianCutover==null){
cutoverInstant=DEFAULT_CUTOVER;
}else {
cutoverInstant=gregorianCutover.toInstant();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iRangeDurationField=iDurationField;
zone=DateTimeUtils.getZone(zone);
Instant cutoverInstant;
if(gregorianCutover==null){
cutoverInstant=DEFAULT_CUTOVER;
}else {
cutoverInstant=gregorianCutover.toInstant();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.GJChronology,191
org.joda.time.chrono.GJChronology,192
org.joda.time.chrono.GJChronology,194
org.joda.time.chrono.GJChronology,198
Find no block!
org.joda.time.chrono.GJChronology,199
UNKNOWN ASTNode type : catch (ArrayIndexOutOfBoundsException e) {
  throw new IllegalArgumentException("Invalid min days in first week: " + minDaysInFirstWeek);
}

UNKNOWN ASTNode type : catch (ArrayIndexOutOfBoundsException e) {
  throw new IllegalArgumentException("Invalid min days in first week: " + minDaysInFirstWeek);
}

UNKNOWN ASTNode type : catch (ArrayIndexOutOfBoundsException e) {
  throw new IllegalArgumentException("Invalid min days in first week: " + minDaysInFirstWeek);
}

UNKNOWN ASTNode type : catch (ArrayIndexOutOfBoundsException e) {
  throw new IllegalArgumentException("Invalid min days in first week: " + minDaysInFirstWeek);
}

========
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return UTC;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(curOffset==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nextOffset==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(curStdOffset==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nextStdOffset==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
UNKNOWN ASTNode type : catch (Exception e) {
  RuleSet rs=ruleSets.get(zone.iRules);
  if (rs == null) {
    throw new IllegalArgumentException("Rules not found: " + zone.iRules);
  }
  rs.addRecurring(builder,zone.iFormat);
}

UNKNOWN ASTNode type : catch (Exception e) {
  RuleSet rs=ruleSets.get(zone.iRules);
  if (rs == null) {
    throw new IllegalArgumentException("Rules not found: " + zone.iRules);
  }
  rs.addRecurring(builder,zone.iFormat);
}

UNKNOWN ASTNode type : catch (Exception e) {
  RuleSet rs=ruleSets.get(zone.iRules);
  if (rs == null) {
    throw new IllegalArgumentException("Rules not found: " + zone.iRules);
  }
  rs.addRecurring(builder,zone.iFormat);
}

UNKNOWN ASTNode type : catch (Exception e) {
  RuleSet rs=ruleSets.get(zone.iRules);
  if (rs == null) {
    throw new IllegalArgumentException("Rules not found: " + zone.iRules);
  }
  rs.addRecurring(builder,zone.iFormat);
}

========
for(int i=chronos.size();--i>=size();){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=chronos.size();--i>=minDaysInFirstWeek;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(zone.previousTransition(iCutover)==iCutover&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=chronos.size();--i>=0;){
millis=zone.previousTransition(iCutover);
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=chronos.size();--i>=0;){
if(iCutover-1!=iCutover){
System.out.println("*r* Error in "+zone.getID());
return false;
}
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=chronos.size();--i>=0;){
millis=zone.previousTransition(iCutover);
if(iCutover-1!=iCutover){
System.out.println("*r* Error in "+zone.getID());
return false;
}

chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=chronos.size();--i>=0;){
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chronos.add(chrono);
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iJulianChronology=iJulianChronology;
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iGregorianChronology=iGregorianChronology;
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iCutoverInstant=cutoverInstant;
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iJulianChronology.getMinimumDaysInFirstWeek()!=iGregorianChronology.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=chronos.size();--i>=0;){
lastType=iGregorianField.getDurationField().getType();
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
chrono=chronos[minDaysInFirstWeek-1];
}catch (ArrayIndexOutOfBoundsException e) {
  throw new IllegalArgumentException("Invalid min days in first week: " + minDaysInFirstWeek);
}

for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chrono=chronos[leapYears.index];
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=~i;
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=(i>=0)?(i+1):~i;
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==getZone()){
return this;
}
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iCutover>Long.MIN_VALUE){
return prev-1;
}
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=minDaysInFirstWeek;
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chrono=cCache.get(zone);
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=DateTimeUtils.getZone(zone);
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chronos[minDaysInFirstWeek-1]=chrono;
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chrono);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(r.iName,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chronos!=null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(chronos==null){
field=null;
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ArrayList<GJChronology> chronos=cCache.get(i);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ArrayList<GJChronology> chronos=cCache.get(zone);
if(minDaysInFirstWeek==0){
return DateTimeZone.UTC;
}
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ArrayList<GJChronology> chronos=cCache.get(new PeriodType(null,type.iTypes,null));
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ArrayList<GJChronology> chronos=cCache.get(iCutover);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(gregorianCutover==null){
throw new IllegalArgumentException("The instant must not be null");
}
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(get()<minDaysInFirstWeek){
return -1;
}else if(thisValue>otherValue){
return 1;
}else {
return 0;
}
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ArrayList<GJChronology> chronos=cCache.get(Calendar.ERA);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getWrappedField().get(iCutover)<=0){
year=1-year;
}
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getWrappedField().get(iCutover)==0){
value=getMaximumValue();
}
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(minDaysInFirstWeek==0){
return iCutover;
}
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(minDaysInFirstWeek-chrono.dayOfWeek().get(iCutover)!=0){
if(iConvertByWeekyear){
if(daysToAdd<0){
daysToAdd+=7;
}
}else {
if(daysToAdd>0){
daysToAdd-=7;
}
}
iCutover=chrono.dayOfWeek().add(instant,daysToAdd);
}
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getWrappedField().get(iCutover)>=0){
return value/minDaysInFirstWeek;
}else {
return ((value+1)/iDivisor)-1;
}
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iCutover!=iCutover){
throw new IllegalArgumentException("The addition exceeded the boundaries of LocalTime");
}
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getWrappedField().get(iCutover)>=0){
return value%minDaysInFirstWeek;
}else {
return (iDivisor-1)+((value+1)%iDivisor);
}
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(r.iName,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone!=null){
return zone;
}
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chrono=selectChronology(chrono);
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(minDaysInFirstWeek>65535){
throw new UnsupportedOperationException("String pool is too large");
}
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(zone!=null){
iCutoverMillis=zone.getMillisKeepLocal(DateTimeZone.UTC,instantMillis);
}
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setTime(DateTimeUtils.getInstantMillis(gregorianCutover));
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ArrayList<GJChronology> chronos=cCache.getChronology(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iCutover=chrono.set(this,instant);
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
found=true;
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
zone=DateTimeUtils.getZone(zone);
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
chrono=chrono.withZone(zone);
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chrono=chrono.withZone(zone);
ArrayList<GJChronology> chronos=cCache.getChronology(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(System.getSecurityManager()!=null){
sm.checkPermission(new JodaTimePermission("DateTimeZone.setDefault"));
}
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==null){
throw new IllegalArgumentException("The datetime zone must not be null");
}
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
synchronized(DateTimeZone.class){
zone=zone;
}
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(zone==null){
throw new IllegalArgumentException("The datetime zone must not be null");
}
synchronized(DateTimeZone.class){
zone=zone;
}
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iCutover=chrono.dayOfMonth().roundFloor(instant);
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos!=null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(zone==null){
temp=UTC;
}
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
zone=zone=zone;
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=(i>=0)?(i+1):~i;
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iCutover<iCutover){
instant=end;
}
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
zone=DateTimeZone.UTC;
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
offset=0;
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
zone=DateTimeZone.UTC;
offset=0;

chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chrono=selectChronology(chrono);
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
zone=DateTimeZone.UTC;
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iDurationField=remainderField.iRangeField;
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=(getWrappedField().getMinimumValue()>=0)?i/minDaysInFirstWeek=remainderField.iDivisor:((i+1)/divisor-1);
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
minDaysInFirstWeek=(getWrappedField().getMaximumValue()>=0)?j/minDaysInFirstWeek=remainderField.iDivisor:((j+1)/divisor-1);
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>=0){
if(iCutover>Long.MIN_VALUE){
return instant-1;
}
return instant;
}
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=~i;
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=minDaysInFirstWeek;
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
zone=DateTimeZone.UTC;
offset=0;
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
zone=DateTimeZone.UTC;
zone=DateTimeZone.UTC;
offset=0;

chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
offset=0;
zone=DateTimeZone.UTC;
offset=0;

chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chrono=selectChronology(chrono);
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
offset=0;
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chrono=selectChronology(chrono);
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
zone=DateTimeZone.UTC;
offset=0;

chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
zone=DateTimeZone.UTC;
offset=0;
zone=DateTimeZone.UTC;
offset=0;

chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chrono=selectChronology(chrono);
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
zone=DateTimeZone.UTC;
offset=0;
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chrono=selectChronology(chrono);
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
zone=DateTimeZone.UTC;
zone=DateTimeZone.UTC;
offset=0;

chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chrono=selectChronology(chrono);
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
offset=0;
zone=DateTimeZone.UTC;
offset=0;

chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chrono=selectChronology(chrono);
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
zone=DateTimeZone.UTC;
offset=0;
zone=DateTimeZone.UTC;
offset=0;

chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case SECONDS_MILLIS :

ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(gregorianCutover==null){
throw new IllegalArgumentException("The instant must not be null");
}
if(get()<minDaysInFirstWeek){
return -1;
}else if(thisValue>otherValue){
return 1;
}else {
return 0;
}
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.GJChronology,200
org.joda.time.chrono.GJChronology,201
org.joda.time.chrono.GJChronology,202
org.joda.time.chrono.GJChronology,204
org.joda.time.chrono.GJChronology,205
org.joda.time.chrono.GJChronology,206
org.joda.time.chrono.GJChronology,209
org.joda.time.chrono.GJChronology,213
UNKNOWN ASTNode type : catch (IllegalFieldValueException ex) {
  if (monthOfYear != 2 || dayOfMonth != 29) {
    throw ex;
  }
  instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,28,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
  if (instant >= iCutoverMillis) {
    throw ex;
  }
}

========
if(zone!=DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(chronoZone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==DateTimeZone.UTC){
chrono=new EthiopicChronology(LimitChronology.getInstance(chrono,new DateTime(1,1,1,0,0,0,0,chrono),null),null,minDaysInFirstWeek);
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==DateTimeZone.UTC){
chrono=new CopticChronology(LimitChronology.getInstance(chrono,new DateTime(1,1,1,0,0,0,0,chrono),null),null,minDaysInFirstWeek);
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==null){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(zone!=null){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
zone=DateTimeUtils.getZone(zone);
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
setTime(DateTimeUtils.getInstantMillis(gregorianCutover));
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iCutover-=zone.getOffsetFromLocal(iCutover);
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chrono!=null&&chrono.getZone()==zone){
return chrono;
}
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(System.getSecurityManager()!=null){
sm.checkPermission(new JodaTimePermission("DateTimeZone.setDefault"));
}
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
iChronology=DateTimeUtils.getInstantChronology(gregorianCutover);
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
iStartMillis=DateTimeUtils.getInstantMillis(gregorianCutover);
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
checkInterval(iCutoverMillis,iCutoverMillis);
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
iChronology=DateTimeUtils.getInstantChronology(gregorianCutover);
iStartMillis=DateTimeUtils.getInstantMillis(gregorianCutover);
checkInterval(iCutoverMillis,iCutoverMillis);

chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(UTC==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.GJChronology,214
org.joda.time.chrono.GJChronology,219
org.joda.time.chrono.GJChronology,220
org.joda.time.chrono.GJChronology,226
UNKNOWN ASTNode type : catch (IllegalFieldValueException ex) {
  if (monthOfYear != 2 || dayOfMonth != 29) {
    throw ex;
  }
  instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,28,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
  if (instant >= iCutoverMillis) {
    throw ex;
  }
}

========
chronos.add(chrono);
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(gregorianCutover==null){
cutoverInstant=DEFAULT_CUTOVER;
}else {
cutoverInstant=gregorianCutover.toInstant();
}
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(zone!=DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(chronoZone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
iGregorianField.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
iJulianField.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
chrono=chronos[minDaysInFirstWeek-1];
}catch (ArrayIndexOutOfBoundsException e) {
  throw new IllegalArgumentException("Invalid min days in first week: " + minDaysInFirstWeek);
}

if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
out.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone!=null){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(zone==null){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.get(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.getInstance(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
iCutover=super.add(instant,minDaysInFirstWeek);
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.forTimeZone(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
if(chrono!=null){
return chrono;
}
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
setTime(DateTimeUtils.getInstantMillis(gregorianCutover));
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iCutover-=zone.getOffsetFromLocal(iCutover);
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
super(iDurationField.getType());
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
if(!iDurationField.isSupported()){
throw new IllegalArgumentException();
}
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
iField=iDurationField;
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
zone=zone;
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new ArrayList<DateTimeFieldType>().add(DateTimeFieldType.dayOfMonth());
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iCutover=chrono.dayOfMonth().roundFloor(instant);
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
super(iGregorianField.getType());
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
if(!iGregorianField.isSupported()){
throw new IllegalArgumentException();
}
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
iField=iGregorianField;
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
zone=zone;
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
iDurationField=iDurationField;
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iRangeDurationField=iDurationField;
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iDurationField=iDurationField;
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
iChronology=DateTimeUtils.getInstantChronology(gregorianCutover);
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
iStartMillis=DateTimeUtils.getInstantMillis(gregorianCutover);
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
checkInterval(iCutoverMillis,iCutoverMillis);
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
iChronology=DateTimeUtils.getInstantChronology(gregorianCutover);
iStartMillis=DateTimeUtils.getInstantMillis(gregorianCutover);
checkInterval(iCutoverMillis,iCutoverMillis);

chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chrono=selectChronology(chrono);
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
if((iCutover^iCutover+zone.getOffset(iCutover))<0&&(instant^zone.getOffset(iCutover))>=0){
zone=DateTimeZone.UTC;
offset=0;
adjustedInstant=instant;
}
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkLimits(getWrappedField().add(iCutover,minDaysInFirstWeek),"resulting");
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
iCutover+=minDaysInFirstWeek;
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iCutover=chrono.millisOfDay().add(next,minDaysInFirstWeek);
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iCutover=setDayOfMonthNext(chrono,next);
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iCutover=chrono.millisOfDay().add(prev,minDaysInFirstWeek);
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iCutover=setDayOfMonthPrevious(chrono,prev);
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
super();
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
minDaysInFirstWeek=minDaysInFirstWeek;
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
minDaysInFirstWeek=minDaysInFirstWeek;
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
out.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(UTC==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chrono=selectChronology(chrono);
if((iCutover^iCutover+zone.getOffset(iCutover))<0&&(instant^zone.getOffset(iCutover))>=0){
zone=DateTimeZone.UTC;
offset=0;
adjustedInstant=instant;
}
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
iCutover=super.add(instant,iCutover);
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkLimits(getWrappedField().add(iCutover,iCutover),"resulting");
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.GJChronology,227
Find no block!
org.joda.time.chrono.GJChronology,228
========
if(chronos==null){
iFixedOffsetCache=new HashMap<String,SoftReference<DateTimeZone>>();
}
synchronized(cCache){
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);
}
return chrono;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
synchronized(cCache){
try{
chrono=chronos[minDaysInFirstWeek-1];
}catch (ArrayIndexOutOfBoundsException e) {
  throw new IllegalArgumentException("Invalid min days in first week: " + minDaysInFirstWeek);
}

ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);
}
return chrono;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==null){
zone=DateTimeZone.getDefault();
}
synchronized(cCache){
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);
}
return chrono;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(zone==null){
zone=DateTimeZone.getDefault();
}
synchronized(cCache){
try{
chrono=chronos[minDaysInFirstWeek-1];
}catch (ArrayIndexOutOfBoundsException e) {
  throw new IllegalArgumentException("Invalid min days in first week: " + minDaysInFirstWeek);
}

ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);
}
return chrono;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
synchronized(cCache){
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);
}
if(zone==null){
zone=DateTimeZone.getDefault();
}
return chrono;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
synchronized(cCache){
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);
}
if(zone==getZone()){
return this;
}
return chrono;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone!=null){
return zone;
}
synchronized(cCache){
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);
}
return chrono;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(System.getSecurityManager()!=null){
sm.checkPermission(new JodaTimePermission("DateTimeZone.setDefault"));
}
synchronized(cCache){
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);
}
return chrono;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==null){
throw new IllegalArgumentException("The datetime zone must not be null");
}
synchronized(cCache){
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);
}
return chrono;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
synchronized(cCache){
zone=zone;
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);
}
return chrono;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
synchronized(cCache){
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);
}
return UTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
synchronized(cCache){
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);
}
new ArrayList<DateTimeFieldType>().add(DateTimeFieldType.monthOfYear());
return chrono;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
synchronized(cCache){
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);
}
new ArrayList<DateTimeFieldType>().add(DateTimeFieldType.dayOfMonth());
return chrono;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
synchronized(cCache){
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);
}
return MAX_VALUE;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
synchronized(cCache){
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);
}
if(zone==null){
zone=DateTimeZone.getDefault();
}
if(zone==getZone()){
return this;
}
return chrono;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
synchronized(cCache){
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);
}
if(iCutover==0||minDaysInFirstWeek==0){
return iCutover;
}
return chrono;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
synchronized(cCache){
ArrayList<GJChronology> chronos=cCache.get(zone);
if(chronos==null){
chronos=new ArrayList<GJChronology>(2);
cCache.put(zone,chronos);
}else {
for(int i=chronos.size();--i>=0;){
chrono=chronos.get(i);
if(minDaysInFirstWeek==chrono.getMinimumDaysInFirstWeek()&&cutoverInstant.equals(chrono.getGregorianCutover())){
return chrono;
}
}
}
if(zone==DateTimeZone.UTC){
chrono=new GJChronology(JulianChronology.getInstance(zone,minDaysInFirstWeek),GregorianChronology.getInstance(zone,minDaysInFirstWeek),cutoverInstant);
}else {
chrono=getInstance(DateTimeZone.UTC,cutoverInstant,minDaysInFirstWeek);
chrono=new GJChronology(ZonedChronology.getInstance(chrono,zone),chrono.iJulianChronology,chrono.iGregorianChronology,chrono.iCutoverInstant);
}
chronos.add(chrono);
}
return MIN_VALUE;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.GJChronology,291
========
if((base=getBase())==null){
return base.getZone();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(base==null){
return base.getZone();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(base!=null){
return base.getZone();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
base=base.withUTC();
if((base=getBase())!=null){
return base.getZone();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(base==null){
throw new IllegalArgumentException("UTC chronology must not be null");
}
if((base=getBase())!=null){
return base.getZone();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((base=getBase())!=DateTimeUtils.getZone(getZone())){
return base.getZone();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((base=getBase())==DateTimeUtils.getZone(getZone())){
return base.getZone();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((base=getBase())!=false){
return base.getZone();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((base=getBase())==false){
return base.getZone();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getZone()!=null){
return base.getZone();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.GJChronology,294
========
Chronology base;
if((base=getBase())==null){
return base.getZone();
}
return DateTimeZone.UTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Chronology base;
if(base==null){
return base.getZone();
}
return DateTimeZone.UTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if(base!=null){
return base.getZone();
}
return DateTimeZone.UTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
base=base.withUTC();
Chronology base;
if((base=getBase())!=null){
return base.getZone();
}
return DateTimeZone.UTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(base==null){
throw new IllegalArgumentException("UTC chronology must not be null");
}
Chronology base;
if((base=getBase())!=null){
return base.getZone();
}
return DateTimeZone.UTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=getBase())!=null){
return base.getZone();
}
if(iGregorianField==null){
return null;
}
return DateTimeZone.UTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=getBase())!=null){
return base.getZone();
}
if(iGregorianField instanceof StrictDateTimeField){
field=((StrictDateTimeField)field).getWrappedField();
}
return DateTimeZone.UTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=getBase())!=null){
return base.getZone();
}
return iCutoverMillis;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=getBase())!=null){
return base.getZone();
}
return DateTimeConstants.MILLIS_PER_HOUR;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=getBase())!=null){
return base.getZone();
}
return DateTimeConstants.MILLIS_PER_MINUTE;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=getBase())!=null){
return base.getZone();
}
return DateTimeConstants.MILLIS_PER_SECOND;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=getBase())!=null){
return base.getZone();
}
checkLimits(iCutover,"resulting");
return DateTimeZone.UTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=getBase())!=null){
return base.getZone();
}
checkLimits(iCutover,null);
return DateTimeZone.UTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=getBase())!=null){
return base.getZone();
}
iCutover-=getZone().getOffsetFromLocal(iCutover);
return DateTimeZone.UTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=getBase())!=null){
return base.getZone();
}
if(getZone().getOffsetFromLocal(iCutover)!=getZone().getOffset(iCutover)){
throw new IllegalInstantException(localInstant,zone.getID());
}
return DateTimeZone.UTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=getBase())!=null){
return base.getZone();
}
iCutover=getType().getField(base.withUTC()).add(localInstant,iCutover);
return DateTimeZone.UTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=getBase())!=null){
return base.getZone();
}
new GregorianCalendar(getZone().toTimeZone()).setTime(toDate());
return DateTimeZone.UTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.GJChronology,305
org.joda.time.chrono.GJChronology,315
UNKNOWN ASTNode type : catch (IllegalArgumentException ex) {
  zone=DateTimeZone.getDefault();
}

UNKNOWN ASTNode type : catch (IllegalArgumentException ex) {
  zone=DateTimeZone.getDefault();
}

========
if(zone==DateTimeZone.UTC){
zone=DateTimeZone.getDefault();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(newZone==null){
zone=DateTimeZone.getDefault();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone!=null){
zone=DateTimeZone.getDefault();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(temp==null){
zone=DateTimeZone.getDefault();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(UTC==null){
zone=DateTimeZone.getDefault();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
zone=DateTimeUtils.getZone(zone);
if(zone==null){
zone=DateTimeZone.getDefault();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(chronoZone==null){
zone=DateTimeZone.getDefault();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZone==null){
zone=DateTimeZone.getDefault();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iCutover-=zone.getOffsetFromLocal(iCutover);
if(zone==null){
zone=DateTimeZone.getDefault();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.GJChronology,318
UNKNOWN ASTNode type : catch (IllegalArgumentException ex) {
  zone=DateTimeZone.getDefault();
}

========
if(getZone()==zone){
return this;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(newZone==getZone()){
return this;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone!=getZone()){
return this;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(zone==getZone()){
return this;
}
if(zone==getZone()){
return this;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(dtz==getZone()){
return this;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZone==getZone()){
return this;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tz==getZone()){
return this;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(UTC==getZone()){
return this;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.GJChronology,319
org.joda.time.chrono.GJChronology,395
org.joda.time.chrono.GJChronology,404
org.joda.time.chrono.GJChronology,473
org.joda.time.chrono.GJChronology,475
org.joda.time.chrono.GJChronology,476
org.joda.time.chrono.GJChronology,477
========
GregorianChronology gregorian=(GregorianChronology)params[1];
Instant cutoverInstant=(Instant)params[2];
gregorian=gregorian;
iCutoverMillis=cutoverInstant.getMillis();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(getBase()!=null){
return ;
}
GregorianChronology gregorian=(GregorianChronology)params[1];
Instant cutoverInstant=(Instant)params[2];
iCutoverMillis=cutoverInstant.getMillis();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(getBase()!=null){
return ;
}
GregorianChronology gregorian=(GregorianChronology)params[1];
Instant cutoverInstant=(Instant)params[2];
gregorian=gregorian;
iCutoverMillis=cutoverInstant.getMillis();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
setMillis(getMillis());
GregorianChronology gregorian=(GregorianChronology)params[1];
Instant cutoverInstant=(Instant)params[2];
iCutoverMillis=cutoverInstant.getMillis();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
GregorianChronology gregorian=(GregorianChronology)params[1];
Instant cutoverInstant=(Instant)params[2];
if(julian.getMinimumDaysInFirstWeek()!=gregorian.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
iCutoverMillis=cutoverInstant.getMillis();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.copyFieldsFrom(gregorian);
GregorianChronology gregorian=(GregorianChronology)params[1];
Instant cutoverInstant=(Instant)params[2];
iCutoverMillis=cutoverInstant.getMillis();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
GregorianChronology gregorian=(GregorianChronology)params[1];
Instant cutoverInstant=(Instant)params[2];
checkYearsAndMonths("Weeks");
iCutoverMillis=cutoverInstant.getMillis();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iCutoverMillis+=((long)getMinutes())*DateTimeConstants.MILLIS_PER_MINUTE;
GregorianChronology gregorian=(GregorianChronology)params[1];
Instant cutoverInstant=(Instant)params[2];
iCutoverMillis=cutoverInstant.getMillis();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
GregorianChronology gregorian=(GregorianChronology)params[1];
Instant cutoverInstant=(Instant)params[2];
checkYearsAndMonths("Days");
iCutoverMillis=cutoverInstant.getMillis();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
GregorianChronology gregorian=(GregorianChronology)params[1];
Instant cutoverInstant=(Instant)params[2];
checkYearsAndMonths("Hours");
iCutoverMillis=cutoverInstant.getMillis();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
GregorianChronology gregorian=(GregorianChronology)params[1];
Instant cutoverInstant=(Instant)params[2];
checkYearsAndMonths("Duration");
iCutoverMillis=cutoverInstant.getMillis();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iCutoverMillis+=(((long)getMinutes())*((long)DateTimeConstants.MILLIS_PER_MINUTE));
GregorianChronology gregorian=(GregorianChronology)params[1];
Instant cutoverInstant=(Instant)params[2];
iCutoverMillis=cutoverInstant.getMillis();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
GregorianChronology gregorian=(GregorianChronology)params[1];
Instant cutoverInstant=(Instant)params[2];
iCutoverMillis=cutoverInstant.getMillis();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);
GregorianChronology gregorian=(GregorianChronology)params[1];
Instant cutoverInstant=(Instant)params[2];
iCutoverMillis=cutoverInstant.getMillis();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyears=fields.weekyear.getDurationField();
GregorianChronology gregorian=(GregorianChronology)params[1];
Instant cutoverInstant=(Instant)params[2];
iCutoverMillis=cutoverInstant.getMillis();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);
GregorianChronology gregorian=(GregorianChronology)params[1];
Instant cutoverInstant=(Instant)params[2];
iCutoverMillis=cutoverInstant.getMillis();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyears=fields.weekyear.getDurationField();
GregorianChronology gregorian=(GregorianChronology)params[1];
Instant cutoverInstant=(Instant)params[2];
iCutoverMillis=cutoverInstant.getMillis();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);
fields.weekyears=fields.weekyear.getDurationField();
GregorianChronology gregorian=(GregorianChronology)params[1];
Instant cutoverInstant=(Instant)params[2];
iCutoverMillis=cutoverInstant.getMillis();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);
fields.weekyears=fields.weekyear.getDurationField();
GregorianChronology gregorian=(GregorianChronology)params[1];
Instant cutoverInstant=(Instant)params[2];
iCutoverMillis=cutoverInstant.getMillis();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.joda.time.chrono.GJChronology,478
========
iGregorianChronology=gregorian;
Instant cutoverInstant=(Instant)params[2];
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
setMillis(getMillis());
Instant cutoverInstant=(Instant)params[2];
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
Instant cutoverInstant=(Instant)params[2];
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);
Instant cutoverInstant=(Instant)params[2];
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyears=fields.weekyear.getDurationField();
Instant cutoverInstant=(Instant)params[2];
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);
Instant cutoverInstant=(Instant)params[2];
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyears=fields.weekyear.getDurationField();
Instant cutoverInstant=(Instant)params[2];
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);
fields.weekyears=fields.weekyear.getDurationField();
Instant cutoverInstant=(Instant)params[2];
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);
fields.weekyears=fields.weekyear.getDurationField();
Instant cutoverInstant=(Instant)params[2];
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Instant cutoverInstant=(Instant)params[2];
if(julian.getMinimumDaysInFirstWeek()!=gregorian.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.copyFieldsFrom(gregorian);
Instant cutoverInstant=(Instant)params[2];
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.copyFieldsFrom(gregorian);
Instant cutoverInstant=(Instant)params[2];
if(julian.getMinimumDaysInFirstWeek()!=gregorian.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Instant cutoverInstant=(Instant)params[2];
checkYearsAndMonths("Weeks");
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iCutoverMillis+=((long)getMinutes())*DateTimeConstants.MILLIS_PER_MINUTE;
Instant cutoverInstant=(Instant)params[2];
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Instant cutoverInstant=(Instant)params[2];
checkYearsAndMonths("Days");
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Instant cutoverInstant=(Instant)params[2];
checkYearsAndMonths("Hours");
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Instant cutoverInstant=(Instant)params[2];
checkYearsAndMonths("Duration");
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iCutoverMillis+=(((long)getMinutes())*((long)DateTimeConstants.MILLIS_PER_MINUTE));
Instant cutoverInstant=(Instant)params[2];
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.GJChronology,480
========
iCutoverInstant=cutoverInstant;
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
iGregorianChronology=gregorian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
setMillis(getMillis());
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
iGregorianChronology=gregorian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(julian.getMinimumDaysInFirstWeek()!=gregorian.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
iGregorianChronology=gregorian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.copyFieldsFrom(gregorian);
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
iGregorianChronology=gregorian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(julian.getMinimumDaysInFirstWeek()!=gregorian.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
fields.copyFieldsFrom(gregorian);
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
iGregorianChronology=gregorian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
iGregorianChronology=monthOfYear;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
iGregorianChronology=gregorian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
iGregorianChronology=gregorian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyears=fields.weekyear.getDurationField();
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
iGregorianChronology=gregorian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
iGregorianChronology=gregorian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyears=fields.weekyear.getDurationField();
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
iGregorianChronology=gregorian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);
fields.weekyears=fields.weekyear.getDurationField();
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
iGregorianChronology=gregorian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);
fields.weekyears=fields.weekyear.getDurationField();
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
iGregorianChronology=gregorian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
iGregorianChronology=centuryOfEra;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
fields.years=fields.year.getDurationField();
iGregorianChronology=gregorian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
iGregorianChronology=gregorian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
iGregorianChronology=gregorian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
iGregorianChronology=gregorian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
fields.years=fields.year.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
iGregorianChronology=gregorian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
fields.years=fields.year.getDurationField();
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
iGregorianChronology=gregorian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
fields.years=fields.year.getDurationField();
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
iGregorianChronology=gregorian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
iGregorianChronology=gregorian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
iGregorianChronology=gregorian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
iGregorianChronology=gregorian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
fields.years=fields.year.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
iGregorianChronology=gregorian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
fields.years=fields.year.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
iGregorianChronology=gregorian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
fields.years=fields.year.getDurationField();
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
iGregorianChronology=gregorian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
iGregorianChronology=gregorian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
fields.years=fields.year.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
iGregorianChronology=gregorian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
checkYearsAndMonths("Weeks");
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
iGregorianChronology=gregorian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iCutoverMillis+=((long)getMinutes())*DateTimeConstants.MILLIS_PER_MINUTE;
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
iGregorianChronology=gregorian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkYearsAndMonths("Days");
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
iGregorianChronology=gregorian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkYearsAndMonths("Hours");
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
iGregorianChronology=gregorian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkYearsAndMonths("Duration");
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
iGregorianChronology=gregorian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iCutoverMillis+=(((long)getMinutes())*((long)DateTimeConstants.MILLIS_PER_MINUTE));
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
iGregorianChronology=gregorian;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.GJChronology,481
========
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
iGregorianChronology=gregorian;
iCutoverInstant=cutoverInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iJulianChronology=julian;
iGregorianChronology=gregorian;
iCutoverInstant=DEFAULT_CUTOVER;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iJulianChronology=julian;
iGregorianChronology=gregorian;
if(julian.getMinimumDaysInFirstWeek()!=gregorian.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
iCutoverInstant=cutoverInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.copyFieldsFrom(gregorian);
iJulianChronology=julian;
iGregorianChronology=gregorian;
iCutoverInstant=cutoverInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.copyFieldsFrom(gregorian);
iJulianChronology=julian;
iGregorianChronology=gregorian;
if(julian.getMinimumDaysInFirstWeek()!=gregorian.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
iCutoverInstant=cutoverInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iJulianChronology=julian;
iGregorianChronology=gregorian;
iCutoverInstant=monthOfYear;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
iJulianChronology=julian;
iGregorianChronology=gregorian;
iCutoverInstant=cutoverInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);
iJulianChronology=julian;
iGregorianChronology=gregorian;
iCutoverInstant=cutoverInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyears=fields.weekyear.getDurationField();
iJulianChronology=julian;
iGregorianChronology=gregorian;
iCutoverInstant=cutoverInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);
iJulianChronology=julian;
iGregorianChronology=gregorian;
iCutoverInstant=cutoverInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyears=fields.weekyear.getDurationField();
iJulianChronology=julian;
iGregorianChronology=gregorian;
iCutoverInstant=cutoverInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);
fields.weekyears=fields.weekyear.getDurationField();
iJulianChronology=julian;
iGregorianChronology=gregorian;
iCutoverInstant=cutoverInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);
fields.weekyears=fields.weekyear.getDurationField();
iJulianChronology=julian;
iGregorianChronology=gregorian;
iCutoverInstant=cutoverInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iJulianChronology=julian;
iGregorianChronology=gregorian;
iCutoverInstant=centuryOfEra;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iJulianChronology=julian;
iGregorianChronology=gregorian;
fields.years=fields.year.getDurationField();
iCutoverInstant=cutoverInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iJulianChronology=julian;
iGregorianChronology=gregorian;
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
iCutoverInstant=cutoverInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iJulianChronology=julian;
iGregorianChronology=gregorian;
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
iCutoverInstant=cutoverInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iJulianChronology=julian;
iGregorianChronology=gregorian;
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
iCutoverInstant=cutoverInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iJulianChronology=julian;
iGregorianChronology=gregorian;
fields.years=fields.year.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
iCutoverInstant=cutoverInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iJulianChronology=julian;
iGregorianChronology=gregorian;
fields.years=fields.year.getDurationField();
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
iCutoverInstant=cutoverInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iJulianChronology=julian;
iGregorianChronology=gregorian;
fields.years=fields.year.getDurationField();
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
iCutoverInstant=cutoverInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iJulianChronology=julian;
iGregorianChronology=gregorian;
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
iCutoverInstant=cutoverInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iJulianChronology=julian;
iGregorianChronology=gregorian;
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
iCutoverInstant=cutoverInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iJulianChronology=julian;
iGregorianChronology=gregorian;
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
iCutoverInstant=cutoverInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iJulianChronology=julian;
iGregorianChronology=gregorian;
fields.years=fields.year.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
iCutoverInstant=cutoverInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iJulianChronology=julian;
iGregorianChronology=gregorian;
fields.years=fields.year.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
iCutoverInstant=cutoverInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iJulianChronology=julian;
iGregorianChronology=gregorian;
fields.years=fields.year.getDurationField();
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
iCutoverInstant=cutoverInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iJulianChronology=julian;
iGregorianChronology=gregorian;
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
iCutoverInstant=cutoverInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iJulianChronology=julian;
iGregorianChronology=gregorian;
fields.years=fields.year.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
iCutoverInstant=cutoverInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.joda.time.chrono.GJChronology,482
========
iCutoverMillis=cutoverInstant.getMillis();
iGregorianChronology=gregorian;
iCutoverInstant=cutoverInstant;
if(getBase()!=null){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iJulianChronology=julian;
iGregorianChronology=gregorian;
iCutoverInstant=cutoverInstant;
if(getBase()!=null){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(getBase()!=null){
return ;
}
iGregorianChronology=gregorian;
iCutoverInstant=cutoverInstant;
if(getBase()!=null){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
iGregorianChronology=gregorian;
iCutoverInstant=cutoverInstant;
if(getBase()!=null){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iCutoverMillis=cutoverInstant.getMillis();
if(getBase()!=null){
return ;
}
iGregorianChronology=gregorian;
iCutoverInstant=cutoverInstant;
if(getBase()!=null){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iJulianChronology=julian;
if(getBase()!=null){
return ;
}
iGregorianChronology=gregorian;
iCutoverInstant=cutoverInstant;
if(getBase()!=null){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
if(getBase()!=null){
return ;
}
iGregorianChronology=gregorian;
iCutoverInstant=cutoverInstant;
if(getBase()!=null){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iGregorianChronology=gregorian;
iCutoverInstant=DEFAULT_CUTOVER;
if(getBase()!=null){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iGregorianChronology=centuryOfEra;
iCutoverInstant=cutoverInstant;
if(getBase()!=null){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.GJChronology,484
org.joda.time.chrono.GJChronology,485
org.joda.time.chrono.GJChronology,488
org.joda.time.chrono.GJChronology,493
========
if(getBase()!=null){
return ;
}
if(julian.getMinimumDaysInFirstWeek()!=gregorian.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
iGapDuration=iCutoverMillis-julianToGregorianByYear(iCutoverMillis);
fields.copyFieldsFrom(gregorian);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(julian.getMinimumDaysInFirstWeek()!=gregorian.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
iDurationField=(iGregorianField=fields.millis)!=null?f:super.millis();
iGapDuration=iCutoverMillis-julianToGregorianByYear(iCutoverMillis);
fields.copyFieldsFrom(gregorian);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(julian.getMinimumDaysInFirstWeek()!=gregorian.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
iDurationField=(iGregorianField=fields.seconds)!=null?f:super.seconds();
iGapDuration=iCutoverMillis-julianToGregorianByYear(iCutoverMillis);
fields.copyFieldsFrom(gregorian);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(julian.getMinimumDaysInFirstWeek()!=gregorian.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
iDurationField=(iGregorianField=fields.minutes)!=null?f:super.minutes();
iGapDuration=iCutoverMillis-julianToGregorianByYear(iCutoverMillis);
fields.copyFieldsFrom(gregorian);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(julian.getMinimumDaysInFirstWeek()!=gregorian.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
iGregorianField=(iGregorianField=fields.millisOfSecond)!=null?f:super.millisOfSecond();
iGapDuration=iCutoverMillis-julianToGregorianByYear(iCutoverMillis);
fields.copyFieldsFrom(gregorian);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(julian.getMinimumDaysInFirstWeek()!=gregorian.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
iGregorianField=(iGregorianField=fields.millisOfDay)!=null?f:super.millisOfDay();
iGapDuration=iCutoverMillis-julianToGregorianByYear(iCutoverMillis);
fields.copyFieldsFrom(gregorian);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iGregorianField=(iGregorianField=fields.secondOfDay)!=null?f:super.secondOfDay();
if(julian.getMinimumDaysInFirstWeek()!=gregorian.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
iGapDuration=iCutoverMillis-julianToGregorianByYear(iCutoverMillis);
fields.copyFieldsFrom(gregorian);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(julian.getMinimumDaysInFirstWeek()!=gregorian.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
iDurationField=(iGregorianField=fields.halfdays)!=null?f:super.halfdays();
iGapDuration=iCutoverMillis-julianToGregorianByYear(iCutoverMillis);
fields.copyFieldsFrom(gregorian);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(julian.getMinimumDaysInFirstWeek()!=gregorian.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
iDurationField=(iGregorianField=fields.days)!=null?f:super.days();
iGapDuration=iCutoverMillis-julianToGregorianByYear(iCutoverMillis);
fields.copyFieldsFrom(gregorian);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(julian.getMinimumDaysInFirstWeek()!=gregorian.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
iDurationField=(iGregorianField=fields.weeks)!=null?f:super.weeks();
iGapDuration=iCutoverMillis-julianToGregorianByYear(iCutoverMillis);
fields.copyFieldsFrom(gregorian);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(julian.getMinimumDaysInFirstWeek()!=gregorian.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
iDurationField=(iGregorianField=fields.weekyears)!=null?f:super.weekyears();
iGapDuration=iCutoverMillis-julianToGregorianByYear(iCutoverMillis);
fields.copyFieldsFrom(gregorian);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(julian.getMinimumDaysInFirstWeek()!=gregorian.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
iGregorianField=(iGregorianField=fields.minuteOfHour)!=null?f:super.minuteOfHour();
iGapDuration=iCutoverMillis-julianToGregorianByYear(iCutoverMillis);
fields.copyFieldsFrom(gregorian);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iGregorianField=(iGregorianField=fields.hourOfDay)!=null?f:super.hourOfDay();
if(julian.getMinimumDaysInFirstWeek()!=gregorian.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
iGapDuration=iCutoverMillis-julianToGregorianByYear(iCutoverMillis);
fields.copyFieldsFrom(gregorian);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iGregorianField=(iGregorianField=fields.clockhourOfDay)!=null?f:super.clockhourOfDay();
if(julian.getMinimumDaysInFirstWeek()!=gregorian.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
iGapDuration=iCutoverMillis-julianToGregorianByYear(iCutoverMillis);
fields.copyFieldsFrom(gregorian);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iGregorianField=(iGregorianField=fields.hourOfHalfday)!=null?f:super.hourOfHalfday();
if(julian.getMinimumDaysInFirstWeek()!=gregorian.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
iGapDuration=iCutoverMillis-julianToGregorianByYear(iCutoverMillis);
fields.copyFieldsFrom(gregorian);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(julian.getMinimumDaysInFirstWeek()!=gregorian.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
iGregorianField=(iGregorianField=fields.clockhourOfHalfday)!=null?f:super.clockhourOfHalfday();
iGapDuration=iCutoverMillis-julianToGregorianByYear(iCutoverMillis);
fields.copyFieldsFrom(gregorian);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iGregorianField=(iGregorianField=fields.dayOfWeek)!=null?f:super.dayOfWeek();
if(julian.getMinimumDaysInFirstWeek()!=gregorian.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
iGapDuration=iCutoverMillis-julianToGregorianByYear(iCutoverMillis);
fields.copyFieldsFrom(gregorian);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iGregorianField=(iGregorianField=fields.dayOfMonth)!=null?f:super.dayOfMonth();
if(julian.getMinimumDaysInFirstWeek()!=gregorian.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
iGapDuration=iCutoverMillis-julianToGregorianByYear(iCutoverMillis);
fields.copyFieldsFrom(gregorian);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iGregorianField=(iGregorianField=fields.dayOfYear)!=null?f:super.dayOfYear();
if(julian.getMinimumDaysInFirstWeek()!=gregorian.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
iGapDuration=iCutoverMillis-julianToGregorianByYear(iCutoverMillis);
fields.copyFieldsFrom(gregorian);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(julian.getMinimumDaysInFirstWeek()!=gregorian.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
iGregorianField=(iGregorianField=fields.weekOfWeekyear)!=null?f:super.weekOfWeekyear();
iGapDuration=iCutoverMillis-julianToGregorianByYear(iCutoverMillis);
fields.copyFieldsFrom(gregorian);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iGregorianField=(iGregorianField=fields.weekyearOfCentury)!=null?f:super.weekyearOfCentury();
if(julian.getMinimumDaysInFirstWeek()!=gregorian.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
iGapDuration=iCutoverMillis-julianToGregorianByYear(iCutoverMillis);
fields.copyFieldsFrom(gregorian);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iGregorianField=(iGregorianField=fields.monthOfYear)!=null?f:super.monthOfYear();
if(julian.getMinimumDaysInFirstWeek()!=gregorian.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
iGapDuration=iCutoverMillis-julianToGregorianByYear(iCutoverMillis);
fields.copyFieldsFrom(gregorian);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iGregorianField=(iGregorianField=fields.year)!=null?f:super.year();
if(julian.getMinimumDaysInFirstWeek()!=gregorian.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
iGapDuration=iCutoverMillis-julianToGregorianByYear(iCutoverMillis);
fields.copyFieldsFrom(gregorian);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.GJChronology,499
org.joda.time.chrono.GJChronology,505
========
if(remainder(iCutoverMillis)<remainder(iCutover)){
hourOfDay-get(iCutover)--;
}
if(gregorian.millisOfDay().get(iCutoverMillis)==0){
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);
fields.halfdayOfDay=new CutoverField(julian.halfdayOfDay(),fields.halfdayOfDay,iCutoverMillis);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iCutoverMillis=ISOChronology.getInstanceUTC().millisOfDay().set(next,0);
if(gregorian.millisOfDay().get(iCutoverMillis)==0){
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);
fields.halfdayOfDay=new CutoverField(julian.halfdayOfDay(),fields.halfdayOfDay,iCutoverMillis);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iCutoverMillis=ISOChronology.getInstanceUTC().millisOfDay().add(next,hourOfDay);
if(gregorian.millisOfDay().get(iCutoverMillis)==0){
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);
fields.halfdayOfDay=new CutoverField(julian.halfdayOfDay(),fields.halfdayOfDay,iCutoverMillis);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iCutoverMillis=setDayOfMonthNext(ISOChronology.getInstanceUTC(),next);
if(gregorian.millisOfDay().get(iCutoverMillis)==0){
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);
fields.halfdayOfDay=new CutoverField(julian.halfdayOfDay(),fields.halfdayOfDay,iCutoverMillis);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iCutoverMillis=ISOChronology.getInstanceUTC().millisOfDay().set(prev,0);
if(gregorian.millisOfDay().get(iCutoverMillis)==0){
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);
fields.halfdayOfDay=new CutoverField(julian.halfdayOfDay(),fields.halfdayOfDay,iCutoverMillis);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iCutoverMillis=ISOChronology.getInstanceUTC().millisOfDay().add(prev,hourOfDay);
if(gregorian.millisOfDay().get(iCutoverMillis)==0){
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);
fields.halfdayOfDay=new CutoverField(julian.halfdayOfDay(),fields.halfdayOfDay,iCutoverMillis);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iCutoverMillis=setDayOfMonthPrevious(ISOChronology.getInstanceUTC(),prev);
if(gregorian.millisOfDay().get(iCutoverMillis)==0){
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);
fields.halfdayOfDay=new CutoverField(julian.halfdayOfDay(),fields.halfdayOfDay,iCutoverMillis);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(gregorian.millisOfDay().get(iCutoverMillis)!=0){
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);
fields.halfdayOfDay=new CutoverField(julian.halfdayOfDay(),fields.halfdayOfDay,iCutoverMillis);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(get(iCutoverMillis)==0){
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);
fields.halfdayOfDay=new CutoverField(julian.halfdayOfDay(),fields.halfdayOfDay,iCutoverMillis);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(get(iCutoverMillis)!=0){
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);
fields.halfdayOfDay=new CutoverField(julian.halfdayOfDay(),fields.halfdayOfDay,iCutoverMillis);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(gregorian.millisOfDay().get(iCutoverMillis)==YEAR_LIMIT){
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);
fields.halfdayOfDay=new CutoverField(julian.halfdayOfDay(),fields.halfdayOfDay,iCutoverMillis);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.GJChronology,509
========
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyear=convertField(fields.weekyear);
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.weekyearOfCentury=convertField(fields.weekyearOfCentury);
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.days=iDurationField;
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.weeks=iDurationField;
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.months=fields.monthOfYear.getDurationField();
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyears=fields.weekyear.getDurationField();
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.months=fields.monthOfYear.getDurationField();
fields.weekyears=fields.weekyear.getDurationField();
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyear=convertField(fields.weekyear);
fields.weekyearOfCentury=convertField(fields.weekyearOfCentury);
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.GJChronology,510
org.joda.time.chrono.GJChronology,511
========
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyearOfCentury=convertField(fields.weekyearOfCentury);
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.millisOfSecond=convertField(fields.millisOfSecond);
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.weeks=iDurationField;
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.millisOfSecond=iGregorianField;
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.months=fields.monthOfYear.getDurationField();
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyears=fields.weekyear.getDurationField();
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.months=fields.monthOfYear.getDurationField();
fields.weekyears=fields.weekyear.getDurationField();
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
iGregorianField=(iGregorianField=fields.millisOfSecond)!=null?f:super.millisOfSecond();
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.weekyearOfCentury=convertField(fields.weekyearOfCentury);
fields.millisOfSecond=convertField(fields.millisOfSecond);
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.GJChronology,512
========
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.millisOfSecond=convertField(fields.millisOfSecond);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.millisOfDay=convertField(fields.millisOfDay);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.millisOfSecond=iGregorianField;
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.millisOfDay=iGregorianField;
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.months=fields.monthOfYear.getDurationField();
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyears=fields.weekyear.getDurationField();
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.months=fields.monthOfYear.getDurationField();
fields.weekyears=fields.weekyear.getDurationField();
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
iGregorianField=(iGregorianField=fields.millisOfSecond)!=null?f:super.millisOfSecond();
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
iGregorianField=(iGregorianField=fields.secondOfDay)!=null?f:super.secondOfDay();
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.millisOfSecond=convertField(fields.millisOfSecond);
fields.millisOfDay=convertField(fields.millisOfDay);
fields.secondOfMinute=new CutoverField(julian.secondOfMinute(),fields.secondOfMinute,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.GJChronology,513
========
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.millisOfDay=convertField(fields.millisOfDay);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.secondOfMinute=convertField(fields.secondOfMinute);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.millisOfDay=iGregorianField;
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.secondOfMinute=iGregorianField;
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyears=fields.weekyear.getDurationField();
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyears=fields.weekyear.getDurationField();
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
iGregorianField=(iGregorianField=fields.secondOfMinute)!=null?f:super.secondOfMinute();
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
iGregorianField=(iGregorianField=fields.secondOfDay)!=null?f:super.secondOfDay();
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.millisOfDay=convertField(fields.millisOfDay);
fields.secondOfMinute=convertField(fields.secondOfMinute);
fields.secondOfDay=new CutoverField(julian.secondOfDay(),fields.secondOfDay,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.GJChronology,514
========
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.secondOfMinute=convertField(fields.secondOfMinute);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.secondOfDay=convertField(fields.secondOfDay);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.secondOfMinute=iGregorianField;
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.secondOfDay=iGregorianField;
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyears=fields.weekyear.getDurationField();
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyears=fields.weekyear.getDurationField();
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.years=fields.year.getDurationField();
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iGregorianField=(iGregorianField=fields.secondOfMinute)!=null?f:super.secondOfMinute();
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iGregorianField=(iGregorianField=fields.secondOfDay)!=null?f:super.secondOfDay();
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.secondOfMinute=convertField(fields.secondOfMinute);
fields.secondOfDay=convertField(fields.secondOfDay);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.GJChronology,515
========
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.secondOfDay=convertField(fields.secondOfDay);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.minuteOfHour=convertField(fields.minuteOfHour);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.secondOfDay=iGregorianField;
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.minuteOfHour=iGregorianField;
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyears=fields.weekyear.getDurationField();
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyears=fields.weekyear.getDurationField();
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.years=fields.year.getDurationField();
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iGregorianField=(iGregorianField=fields.secondOfDay)!=null?f:super.secondOfDay();
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iGregorianField=(iGregorianField=fields.minuteOfHour)!=null?f:super.minuteOfHour();
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
iGregorianField=(iGregorianField=fields.hourOfDay)!=null?f:super.hourOfDay();
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.secondOfDay=convertField(fields.secondOfDay);
fields.minuteOfHour=convertField(fields.minuteOfHour);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.GJChronology,516
========
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.minuteOfHour=convertField(fields.minuteOfHour);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.minuteOfDay=convertField(fields.minuteOfDay);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.minuteOfHour=iGregorianField;
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.minuteOfDay=iGregorianField;
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.months=fields.monthOfYear.getDurationField();
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyears=fields.weekyear.getDurationField();
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.months=fields.monthOfYear.getDurationField();
fields.weekyears=fields.weekyear.getDurationField();
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
iGregorianField=(iGregorianField=fields.minuteOfHour)!=null?f:super.minuteOfHour();
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iGregorianField=(iGregorianField=fields.hourOfDay)!=null?f:super.hourOfDay();
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.minuteOfHour=convertField(fields.minuteOfHour);
fields.minuteOfDay=convertField(fields.minuteOfDay);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.GJChronology,517
========
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.minuteOfDay=new CutoverField(julian.minuteOfDay(),fields.minuteOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.halfdayOfDay=convertField(fields.halfdayOfDay);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.halfdayOfDay=iGregorianField;
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.year=new BasicYearDateTimeField(this);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.months=fields.monthOfYear.getDurationField();
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyears=fields.weekyear.getDurationField();
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.months=fields.monthOfYear.getDurationField();
fields.weekyears=fields.weekyear.getDurationField();
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
iGregorianField=(iGregorianField=fields.hourOfDay)!=null?f:super.hourOfDay();
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
iGregorianField=(iGregorianField=fields.clockhourOfDay)!=null?f:super.clockhourOfDay();
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.GJChronology,518
========
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.halfdayOfDay=new CutoverField(julian.halfdayOfDay(),fields.halfdayOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);
fields.halfdayOfDay=new CutoverField(julian.halfdayOfDay(),fields.halfdayOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);
fields.minuteOfHour=new CutoverField(julian.minuteOfHour(),fields.minuteOfHour,iCutoverMillis);
fields.halfdayOfDay=new CutoverField(julian.halfdayOfDay(),fields.halfdayOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);
fields.halfdayOfDay=new CutoverField(julian.halfdayOfDay(),fields.halfdayOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.hourOfHalfday=convertField(fields.hourOfHalfday);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);
fields.halfdayOfDay=new CutoverField(julian.halfdayOfDay(),fields.halfdayOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.year=new BasicYearDateTimeField(this);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);
fields.halfdayOfDay=new CutoverField(julian.halfdayOfDay(),fields.halfdayOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.yearOfEra=new GJYearOfEraDateTimeField(fields.year,this);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);
fields.halfdayOfDay=new CutoverField(julian.halfdayOfDay(),fields.halfdayOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.months=fields.monthOfYear.getDurationField();
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);
fields.halfdayOfDay=new CutoverField(julian.halfdayOfDay(),fields.halfdayOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyears=fields.weekyear.getDurationField();
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);
fields.halfdayOfDay=new CutoverField(julian.halfdayOfDay(),fields.halfdayOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.months=fields.monthOfYear.getDurationField();
fields.weekyears=fields.weekyear.getDurationField();
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);
fields.halfdayOfDay=new CutoverField(julian.halfdayOfDay(),fields.halfdayOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);
fields.halfdayOfDay=new CutoverField(julian.halfdayOfDay(),fields.halfdayOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);
fields.halfdayOfDay=new CutoverField(julian.halfdayOfDay(),fields.halfdayOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);
fields.halfdayOfDay=new CutoverField(julian.halfdayOfDay(),fields.halfdayOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iGregorianField=(iGregorianField=fields.hourOfDay)!=null?f:super.hourOfDay();
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);
fields.halfdayOfDay=new CutoverField(julian.halfdayOfDay(),fields.halfdayOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iGregorianField=(iGregorianField=fields.clockhourOfHalfday)!=null?f:super.clockhourOfHalfday();
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
fields.clockhourOfHalfday=new CutoverField(julian.clockhourOfHalfday(),fields.clockhourOfHalfday,iCutoverMillis);
fields.halfdayOfDay=new CutoverField(julian.halfdayOfDay(),fields.halfdayOfDay,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.GJChronology,520
org.joda.time.chrono.GJChronology,525
========
{
long cutover=gregorian.weekyear().roundCeiling(iCutoverMillis);
fields.weekOfWeekyear=new CutoverField(julian.weekOfWeekyear(),fields.weekOfWeekyear,cutover,true);
}
{
fields.era=new CutoverField(julian.era(),fields.era,iCutoverMillis);
}
{
long cutover=gregorian.year().roundCeiling(iCutoverMillis);
fields.dayOfYear=new CutoverField(julian.dayOfYear(),fields.dayOfYear,cutover);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.joda.time.chrono.GJChronology,534
UNKNOWN ASTNode type : catch (IllegalFieldValueException ex) {
  if (monthOfYear != 2 || dayOfMonth != 29) {
    throw ex;
  }
  instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,28,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
  if (instant >= iCutoverMillis) {
    throw ex;
  }
}

org.joda.time.chrono.GJChronology,535
org.joda.time.chrono.GJChronology,540
========
{
long cutover=gregorian.year().roundCeiling(iCutoverMillis);
fields.dayOfYear=new CutoverField(julian.dayOfYear(),fields.dayOfYear,cutover);
}
{
fields.dayOfYear=new CutoverField(julian.dayOfYear(),fields.dayOfYear,cutover);
long cutover=gregorian.weekyear().roundCeiling(iCutoverMillis);
fields.weekOfWeekyear=new CutoverField(julian.weekOfWeekyear(),fields.weekOfWeekyear,cutover,true);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
{
long cutover=gregorian.weekyear().roundCeiling(iCutoverMillis);
fields.weekOfWeekyear=new CutoverField(julian.weekOfWeekyear(),fields.weekOfWeekyear,cutover,true);
}
{
long cutover=gregorian.year().roundCeiling(iCutoverMillis);
fields.dayOfYear=new CutoverField(julian.dayOfYear(),fields.dayOfYear,cutover);
}
{
long cutover=gregorian.weekyear().roundCeiling(iCutoverMillis);
fields.weekOfWeekyear=new CutoverField(julian.weekOfWeekyear(),fields.weekOfWeekyear,cutover,true);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
{
long cutover=gregorian.year().roundFloor(iCutoverMillis);
fields.dayOfYear=new CutoverField(julian.dayOfYear(),fields.dayOfYear,cutover);
}
{
long cutover=gregorian.weekyear().roundCeiling(iCutoverMillis);
fields.weekOfWeekyear=new CutoverField(julian.weekOfWeekyear(),fields.weekOfWeekyear,cutover,true);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
{
if(iCutoverMillis-roundFloor(iCutoverMillis)<cutover-iCutoverMillis){
return roundFloor(iCutoverMillis);
}else if(cutover-iCutoverMillis<iCutoverMillis-roundFloor(iCutoverMillis)){
return cutover;
}else {
if((get(cutover)&1)==0){
return cutover;
}
return roundFloor(iCutoverMillis);
}
long cutover=gregorian.year().roundCeiling(iCutoverMillis);
fields.dayOfYear=new CutoverField(julian.dayOfYear(),fields.dayOfYear,cutover);
}
{
long cutover=gregorian.weekyear().roundCeiling(iCutoverMillis);
fields.weekOfWeekyear=new CutoverField(julian.weekOfWeekyear(),fields.weekOfWeekyear,cutover,true);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.GJChronology,541
org.joda.time.chrono.GJChronology,549
========
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.centuries=fields.centuryOfEra.getDurationField();
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();
fields.years=fields.year.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyears=fields.weekyear.getDurationField();
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyears=fields.weekyear.getDurationField();
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();
fields.years=fields.year.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.centuries=fields.centuryOfEra.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyears=fields.weekyear.getDurationField();
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.centuries=fields.centuryOfEra.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.yearOfCentury=convertField(fields.yearOfCentury);
fields.years=fields.year.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.halfdayOfDay=iGregorianField;
fields.years=fields.year.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.years=fields.year.getDurationField();
iGregorianField=(iGregorianField=fields.weekyearOfCentury)!=null?f:super.weekyearOfCentury();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.years=fields.year.getDurationField();
iGregorianField=(iGregorianField=fields.monthOfYear)!=null?f:super.monthOfYear();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.years=fields.year.getDurationField();
iGregorianField=(iGregorianField=fields.year)!=null?f:super.year();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iGregorianField=(iGregorianField=fields.yearOfCentury)!=null?f:super.yearOfCentury();
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.years=fields.year.getDurationField();
iGregorianField=fields.weekyear;
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.weekyear=new OffsetDateTimeField(new SkipUndoDateTimeField(this,iGregorianField),BUDDHIST_OFFSET);
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.years=fields.year.getDurationField();
iGregorianField=new OffsetDateTimeField(fields.yearOfEra,99);
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iGregorianField=new RemainderDateTimeField((DividedDateTimeField)fields.centuryOfEra);
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.GJChronology,551
org.joda.time.chrono.GJChronology,552
========
fields.year=new ImpreciseCutoverField(julian.year(),fields.year,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.centuries=fields.centuryOfEra.getDurationField();
fields.years=fields.year.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.years=fields.year.getDurationField();
fields.months=fields.monthOfYear.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.centuries=fields.centuryOfEra.getDurationField();
fields.years=fields.year.getDurationField();
fields.months=fields.monthOfYear.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.years=fields.year.getDurationField();
fields.centuries=fields.centuryOfEra.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.years=fields.year.getDurationField();
fields.year=convertField(fields.year);
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.years=fields.monthOfYear.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.years=fields.year.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
iGregorianField=fields.yearOfEra;
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.years=fields.year.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.halfdayOfDay=iGregorianField;
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.years=fields.year.getDurationField();
iGregorianField=(iGregorianField=fields.weekyearOfCentury)!=null?f:super.weekyearOfCentury();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.years=fields.year.getDurationField();
iGregorianField=(iGregorianField=fields.monthOfYear)!=null?f:super.monthOfYear();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.years=fields.year.getDurationField();
iGregorianField=(iGregorianField=fields.year)!=null?f:super.year();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.years=fields.year.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
iGregorianField=new RemainderDateTimeField((DividedDateTimeField)fields.centuryOfEra);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.era=new GJEraDateTimeField(this);
fields.years=fields.year.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.dayOfWeek=new GJDayOfWeekDateTimeField(this,fields.days);
fields.years=fields.year.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.years=fields.year.getDurationField();
fields.weekyear=new OffsetDateTimeField(new SkipUndoDateTimeField(this,years),BUDDHIST_OFFSET);
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.years=fields.year.getDurationField();
years=new OffsetDateTimeField(fields.yearOfEra,99);
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
years=new RemainderDateTimeField((DividedDateTimeField)fields.centuryOfEra);
fields.years=fields.year.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.GJChronology,554
========
fields.years=fields.year.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyears=fields.weekyear.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyears=fields.weekyear.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.year=convertField(fields.year);
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.weekyear=new OffsetDateTimeField(new SkipUndoDateTimeField(this,iGregorianField),BUDDHIST_OFFSET);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
iGregorianField=new OffsetDateTimeField(fields.yearOfEra,99);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
iGregorianField=new RemainderDateTimeField((DividedDateTimeField)fields.centuryOfEra);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.halfdayOfDay=iGregorianField;
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.centuries=fields.centuryOfEra.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.years=fields.year.getDurationField();
fields.centuries=fields.centuryOfEra.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iGregorianField=(iGregorianField=fields.era)!=null?f:super.era();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
iGregorianField=fields.yearOfEra;
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iGregorianField=fields.weekyear;
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.GJChronology,557
========
fields.years=fields.year.getDurationField();
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.years=fields.year.getDurationField();
fields.yearOfEra=new ImpreciseCutoverField(julian.yearOfEra(),fields.yearOfEra,fields.years,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.monthOfYear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyears=fields.weekyear.getDurationField();
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.monthOfYear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyears=fields.weekyear.getDurationField();
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.monthOfYear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyears=fields.weekyear.getDurationField();
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyears=fields.weekyear.getDurationField();
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.monthOfYear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.centuries=fields.centuryOfEra.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyears=fields.weekyear.getDurationField();
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.centuries=fields.centuryOfEra.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.year=convertField(fields.year);
fields.centuries=fields.centuryOfEra.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.era=convertField(fields.era);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
iGregorianField=new RemainderDateTimeField((DividedDateTimeField)fields.centuryOfEra);
fields.centuries=fields.centuryOfEra.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iGregorianField=new OffsetDateTimeField(fields.yearOfEra,99);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
iGregorianField=new RemainderDateTimeField((DividedDateTimeField)fields.centuryOfEra);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
if(julian.getMinimumDaysInFirstWeek()!=gregorian.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
fields.centuries=fields.centuryOfEra.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.copyFieldsFrom(gregorian);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.copyFieldsFrom(gregorian);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
if(julian.getMinimumDaysInFirstWeek()!=gregorian.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
fields.centuries=fields.centuryOfEra.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
iCutoverMillis=cutoverInstant.getMillis();
fields.centuries=fields.centuryOfEra.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
iJulianChronology=julian;
fields.centuries=fields.centuryOfEra.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
iGregorianChronology=gregorian;
fields.centuries=fields.centuryOfEra.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
fields.centuries=fields.centuryOfEra.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
iCutoverMillis=cutoverInstant.getMillis();
iGregorianChronology=gregorian;
fields.centuries=fields.centuryOfEra.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
iJulianChronology=julian;
iGregorianChronology=gregorian;
fields.centuries=fields.centuryOfEra.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
iGregorianChronology=gregorian;
fields.centuries=fields.centuryOfEra.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
iCutover=iCutoverMillis;
fields.centuries=fields.centuryOfEra.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
iConvertByWeekyear=iConvertByWeekyear;
fields.centuries=fields.centuryOfEra.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iGregorianField.getRangeDurationField()==null){
rangeField=iGregorianField.getRangeDurationField();
}
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
iGregorianField=(iGregorianField=fields.yearOfEra)!=null?f:super.yearOfEra();
fields.centuries=fields.centuryOfEra.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iGregorianField=(iGregorianField=fields.era)!=null?f:super.era();
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.hourOfDay=new CutoverField(julian.hourOfDay(),fields.hourOfDay,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.years=convertField(fields.years,new HashMap<Object,Object>());
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iDurationField=(iGregorianField=fields.years)!=null?f:super.years();
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iDurationField=(iGregorianField=fields.centuries)!=null?f:super.centuries();
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iDurationField=(iGregorianField=fields.eras)!=null?f:super.eras();
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.era=convertField(fields.era);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.year=convertField(fields.year);
fields.centuries=fields.centuryOfEra.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case MONTHS :

fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.GJChronology,559
========
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.months=fields.monthOfYear.getDurationField();
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyears=fields.weekyear.getDurationField();
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.months=fields.monthOfYear.getDurationField();
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyears=fields.weekyear.getDurationField();
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.months=fields.monthOfYear.getDurationField();
fields.weekyears=fields.weekyear.getDurationField();
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.months=fields.monthOfYear.getDurationField();
fields.weekyears=fields.weekyear.getDurationField();
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
if(julian.getMinimumDaysInFirstWeek()!=gregorian.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.copyFieldsFrom(gregorian);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.copyFieldsFrom(gregorian);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
if(julian.getMinimumDaysInFirstWeek()!=gregorian.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
iCutoverMillis=cutoverInstant.getMillis();
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
iJulianChronology=julian;
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
iGregorianChronology=gregorian;
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
iCutoverMillis=cutoverInstant.getMillis();
iGregorianChronology=gregorian;
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
iJulianChronology=julian;
iGregorianChronology=gregorian;
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
iGregorianChronology=gregorian;
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
iCutover=iCutoverMillis;
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
iConvertByWeekyear=iConvertByWeekyear;
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iGregorianField.getRangeDurationField()==null){
rangeField=iGregorianField.getRangeDurationField();
}
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.yearOfCentury=convertField(fields.yearOfCentury);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.dayOfWeek=convertField(fields.dayOfWeek);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
iGregorianField=new RemainderDateTimeField((DividedDateTimeField)fields.centuryOfEra);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iGregorianField=new OffsetDateTimeField(fields.yearOfEra,99);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iGregorianField=new RemainderDateTimeField((DividedDateTimeField)fields.centuryOfEra);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.yearOfCentury=new OffsetDateTimeField(iGregorianField,DateTimeFieldType.yearOfCentury(),1);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.dayOfYear=new BasicDayOfYearDateTimeField(this,fields.days);
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.weekyear=new BasicWeekyearDateTimeField(this);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.dayOfYear=convertField(fields.dayOfYear);
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.weekOfWeekyear=convertField(fields.weekOfWeekyear);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iGregorianField=(iGregorianField=fields.centuryOfEra)!=null?f:super.centuryOfEra();
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iGregorianField=(iGregorianField=fields.era)!=null?f:super.era();
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.years=convertField(fields.years,new HashMap<Object,Object>());
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iDurationField=(iGregorianField=fields.years)!=null?f:super.years();
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iDurationField=(iGregorianField=fields.centuries)!=null?f:super.centuries();
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iDurationField=(iGregorianField=fields.eras)!=null?f:super.eras();
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.yearOfCentury=convertField(fields.yearOfCentury);
fields.dayOfWeek=convertField(fields.dayOfWeek);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.weekOfWeekyear=convertField(fields.weekOfWeekyear);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.dayOfYear=convertField(fields.dayOfYear);
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iCutover=ISOChronology.getInstanceUTC().millisOfDay().set(next,0);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iCutover=ISOChronology.getInstanceUTC().millisOfDay().set(prev,0);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.GJChronology,561
========
fields.years=fields.year.getDurationField();
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iCutover=iCutoverMillis;
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iGregorianField.getRangeDurationField()==null){
rangeField=iGregorianField.getRangeDurationField();
}
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.weekyear=new BasicWeekyearDateTimeField(this);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.weekOfWeekyear=new BasicWeekOfWeekyearDateTimeField(this,fields.weeks);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.centuries=fields.centuryOfEra.getDurationField();
fields.dayOfYear=convertField(fields.dayOfYear);
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.weekOfWeekyear=convertField(fields.weekOfWeekyear);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.years=convertField(fields.years,new HashMap<Object,Object>());
fields.months=fields.monthOfYear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iCutoverMillis=cutoverInstant.getMillis();
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iJulianChronology=julian;
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
if(julian.getMinimumDaysInFirstWeek()!=gregorian.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
fields.months=fields.monthOfYear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
centuryOfEra.copyFieldsFrom(gregorian);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iGregorianField=(iGregorianField=fields.weekyear)!=null?f:super.weekyear();
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iGregorianField=(iGregorianField=fields.weekyearOfCentury)!=null?f:super.weekyearOfCentury();
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
iGregorianField=(iGregorianField=fields.year)!=null?f:super.year();
fields.months=fields.monthOfYear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.yearOfCentury=convertField(fields.yearOfCentury);
fields.months=fields.monthOfYear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.dayOfWeek=convertField(fields.dayOfWeek);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
iGregorianField=new RemainderDateTimeField((DividedDateTimeField)fields.centuryOfEra);
fields.months=fields.monthOfYear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.centuries=fields.centuryOfEra.getDurationField();
iGregorianField=new OffsetDateTimeField(fields.yearOfEra,99);
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iGregorianField=new RemainderDateTimeField((DividedDateTimeField)fields.centuryOfEra);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
iDurationField=(iGregorianField=fields.weeks)!=null?f:super.weeks();
fields.months=fields.monthOfYear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
iDurationField=(iGregorianField=fields.weekyears)!=null?f:super.weekyears();
fields.months=fields.monthOfYear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iDurationField=(iGregorianField=fields.years)!=null?f:super.years();
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.dayOfWeek=convertField(fields.dayOfWeek);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.yearOfCentury=convertField(fields.yearOfCentury);
fields.months=fields.monthOfYear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.weekOfWeekyear=convertField(fields.weekOfWeekyear);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.dayOfYear=convertField(fields.dayOfYear);
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iCutover=ISOChronology.getInstanceUTC().millisOfDay().set(next,0);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iCutover=ISOChronology.getInstanceUTC().millisOfDay().set(prev,0);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case WEEKS :

fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.GJChronology,563
========
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
iGregorianField=new RemainderDateTimeField(fields.weekyear,DateTimeFieldType.weekyearOfCentury(),100);
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.weekyearOfCentury=new OffsetDateTimeField(iGregorianField,DateTimeFieldType.weekyearOfCentury(),1);
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.centuries=fields.centuryOfEra.getDurationField();
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.dayOfYear=convertField(fields.dayOfYear);
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();
fields.weekOfWeekyear=convertField(fields.weekOfWeekyear);
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
if(julian.getMinimumDaysInFirstWeek()!=gregorian.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.copyFieldsFrom(gregorian);
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.copyFieldsFrom(gregorian);
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
if(julian.getMinimumDaysInFirstWeek()!=gregorian.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
iCutoverMillis=cutoverInstant.getMillis();
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
iJulianChronology=julian;
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
iGregorianChronology=gregorian;
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
iCutoverMillis=cutoverInstant.getMillis();
iGregorianChronology=gregorian;
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
iJulianChronology=julian;
iGregorianChronology=gregorian;
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
iGregorianChronology=gregorian;
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
iCutover=iCutoverMillis;
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
iConvertByWeekyear=iConvertByWeekyear;
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iGregorianField.getRangeDurationField()==null){
rangeField=iGregorianField.getRangeDurationField();
}
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
iGregorianField=(iGregorianField=fields.dayOfYear)!=null?f:super.dayOfYear();
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
iGregorianField=(iGregorianField=fields.weekOfWeekyear)!=null?f:super.weekOfWeekyear();
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
iGregorianField=(iGregorianField=fields.weekyear)!=null?f:super.weekyear();
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
iGregorianField=(iGregorianField=fields.weekyearOfCentury)!=null?f:super.weekyearOfCentury();
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
iGregorianField=new RemainderDateTimeField((DividedDateTimeField)fields.centuryOfEra);
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.yearOfCentury=new OffsetDateTimeField(iGregorianField,DateTimeFieldType.yearOfCentury(),1);
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.era=ERA_FIELD;
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
iGregorianField=fields.weekyear;
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.weekyear=new OffsetDateTimeField(new SkipUndoDateTimeField(this,iGregorianField),BUDDHIST_OFFSET);
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
iGregorianField=new OffsetDateTimeField(fields.yearOfEra,99);
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
iDurationField=(iGregorianField=fields.weeks)!=null?f:super.weeks();
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
iDurationField=(iGregorianField=fields.weekyears)!=null?f:super.weekyears();
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iDurationField=(iGregorianField=fields.years)!=null?f:super.years();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iDurationField=(iGregorianField=fields.centuries)!=null?f:super.centuries();
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iCutover=ISOChronology.getInstanceUTC().millisOfDay().set(next,0);
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iCutover=ISOChronology.getInstanceUTC().millisOfDay().set(prev,0);
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.dayOfYear=convertField(fields.dayOfYear);
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();
fields.weekOfWeekyear=convertField(fields.weekOfWeekyear);
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case WEEKS :

fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.GJChronology,565
========
fields.weekyears=fields.weekyear.getDurationField();
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekOfWeekyear=new BasicWeekOfWeekyearDateTimeField(this,fields.weeks);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.months=fields.monthOfYear.getDurationField();
fields.years=fields.year.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
iGregorianField=new RemainderDateTimeField((DividedDateTimeField)fields.centuryOfEra);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iGregorianField=new RemainderDateTimeField(fields.weekyear,DateTimeFieldType.weekyearOfCentury(),100);
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.era=ERA_FIELD;
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(julian.getMinimumDaysInFirstWeek()!=gregorian.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
monthOfYear.copyFieldsFrom(gregorian);
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iCutoverMillis=cutoverInstant.getMillis();
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iJulianChronology=julian;
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iGregorianChronology=gregorian;
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iCutoverMillis=cutoverInstant.getMillis();
iGregorianChronology=gregorian;
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iJulianChronology=julian;
iGregorianChronology=gregorian;
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iCutoverMillis=cutoverInstant.getMillis();
iJulianChronology=julian;
iGregorianChronology=gregorian;
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iCutover=iCutoverMillis;
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iConvertByWeekyear=iConvertByWeekyear;
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iGregorianField.getRangeDurationField()==null){
rangeField=monthOfYear.getRangeDurationField();
}
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.dayOfYear=convertField(fields.dayOfYear);
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.months=fields.monthOfYear.getDurationField();
fields.weekOfWeekyear=convertField(fields.weekOfWeekyear);
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
iGregorianField=(iGregorianField=fields.dayOfYear)!=null?f:super.dayOfYear();
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
iGregorianField=(iGregorianField=fields.weekOfWeekyear)!=null?f:super.weekOfWeekyear();
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
iGregorianField=(iGregorianField=fields.weekyear)!=null?f:super.weekyear();
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
iGregorianField=fields.yearOfEra;
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iGregorianField=fields.weekyear;
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iGregorianField=new OffsetDateTimeField(fields.yearOfEra,99);
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iDurationField=(iGregorianField=fields.days)!=null?f:super.days();
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iDurationField=(iGregorianField=fields.weeks)!=null?f:super.weeks();
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iDurationField=(iGregorianField=fields.weekyears)!=null?f:super.weekyears();
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iDurationField=(iGregorianField=fields.years)!=null?f:super.years();
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.dayOfYear=convertField(fields.dayOfYear);
fields.months=fields.monthOfYear.getDurationField();
fields.weekOfWeekyear=convertField(fields.weekOfWeekyear);
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iCutover=ISOChronology.getInstanceUTC().millisOfDay().set(next,0);
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iCutover=ISOChronology.getInstanceUTC().millisOfDay().set(prev,0);
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case WEEKS :

fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.GJChronology,567
========
fields.months=fields.monthOfYear.getDurationField();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);
fields.weekyears=fields.weekyear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);
fields.weekyears=fields.centuryOfEra.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekOfWeekyear=new BasicWeekOfWeekyearDateTimeField(this,fields.weeks);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);
fields.weekyears=fields.weekyear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
iGregorianField=new RemainderDateTimeField(fields.weekyear,DateTimeFieldType.weekyearOfCentury(),100);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);
fields.weekyears=fields.weekyear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.weekyears=fields.weekyear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.weekyears=fields.centuryOfEra.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
iGregorianField=new RemainderDateTimeField((DividedDateTimeField)fields.centuryOfEra);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);
fields.weekyears=fields.weekyear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.yearOfCentury=new OffsetDateTimeField(iGregorianField,DateTimeFieldType.yearOfCentury(),1);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);
fields.weekyears=fields.weekyear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.era=ERA_FIELD;
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);
fields.weekyears=fields.weekyear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.weekOfWeekyear=convertField(fields.weekOfWeekyear);
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);
fields.weekyears=fields.weekyear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.millisOfSecond=convertField(fields.millisOfSecond);
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);
fields.weekyears=fields.weekyear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
iGregorianField=fields.yearOfEra;
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);
fields.weekyears=fields.weekyear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iGregorianField=fields.weekyear;
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);
fields.weekyears=fields.weekyear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iGregorianField=new OffsetDateTimeField(fields.yearOfEra,99);
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);
fields.weekyears=fields.weekyear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
iGregorianField=(iGregorianField=fields.dayOfYear)!=null?f:super.dayOfYear();
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);
fields.weekyears=fields.weekyear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
iGregorianField=(iGregorianField=fields.weekOfWeekyear)!=null?f:super.weekOfWeekyear();
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);
fields.weekyears=fields.weekyear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
iGregorianField=(iGregorianField=fields.weekyear)!=null?f:super.weekyear();
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);
fields.weekyears=fields.weekyear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iGregorianField=(iGregorianField=fields.monthOfYear)!=null?f:super.monthOfYear();
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);
fields.weekyears=fields.weekyear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.weekOfWeekyear=convertField(fields.weekOfWeekyear);
fields.millisOfSecond=convertField(fields.millisOfSecond);
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);
fields.weekyears=fields.weekyear.getDurationField();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.GJChronology,569
org.joda.time.chrono.GJChronology,575
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
cf.iRangeDurationField=fields.months;
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
cf.iRangeDurationField=fields.months;
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
cf.iRangeDurationField=fields.months;
fields.millisOfSecond=new CutoverField(julian.millisOfSecond(),fields.millisOfSecond,iCutoverMillis);
fields.millisOfDay=new CutoverField(julian.millisOfDay(),fields.millisOfDay,iCutoverMillis);
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
cf.iRangeDurationField=fields.months;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
cf.iRangeDurationField=fields.months;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
fields.hourOfHalfday=new CutoverField(julian.hourOfHalfday(),fields.hourOfHalfday,iCutoverMillis);
fields.clockhourOfDay=new CutoverField(julian.clockhourOfDay(),fields.clockhourOfDay,iCutoverMillis);
cf.iRangeDurationField=fields.months;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
{
long gregorian.weekyear().roundCeiling(iCutoverMillis)=gregorian.weekyear().roundCeiling(iCutoverMillis);
fields.weekOfWeekyear=new CutoverField(julian.weekOfWeekyear(),fields.weekOfWeekyear,cutover,true);
}
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
cf.iRangeDurationField=fields.months;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
fields.era=new GJEraDateTimeField(this);
cf.iRangeDurationField=fields.months;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
fields.dayOfWeek=new GJDayOfWeekDateTimeField(this,fields.days);
cf.iRangeDurationField=fields.months;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.monthOfYear=new GJMonthOfYearDateTimeField(this);
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
cf.iRangeDurationField=fields.months;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
cf.iRangeDurationField=fields.monthOfYear;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
cf.iRangeDurationField=fields.months;
fields.dayOfMonth=weekyear;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
cf.iRangeDurationField=fields.months;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
cf.iRangeDurationField=fields.months;
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
cf.iRangeDurationField=fields.months;
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
cf.iRangeDurationField=fields.months;
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
cf.iRangeDurationField=fields.months;
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
cf.iRangeDurationField=fields.months;
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
fields.monthOfYear=new ImpreciseCutoverField(julian.monthOfYear(),fields.monthOfYear,iCutoverMillis);
cf.iRangeDurationField=fields.months;
fields.weekyear=new ImpreciseCutoverField(julian.weekyear(),fields.weekyear,null,iCutoverMillis,true);
fields.weekyearOfCentury=new ImpreciseCutoverField(julian.weekyearOfCentury(),fields.weekyearOfCentury,fields.weekyears,iCutoverMillis);
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
fields.era=convertField(fields.era);
cf.iRangeDurationField=fields.months;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
fields.dayOfWeek=convertField(fields.dayOfWeek);
cf.iRangeDurationField=fields.months;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.monthOfYear=convertField(fields.monthOfYear);
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
cf.iRangeDurationField=fields.months;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
cf.iRangeDurationField=cutoverInstant;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
iCutoverMillis=cutoverInstant.getMillis();
cf.iRangeDurationField=fields.months;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
iJulianChronology=months;
cf.iRangeDurationField=fields.months;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
iGregorianChronology=gregorian;
cf.iRangeDurationField=fields.months;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
iCutoverMillis=cutoverInstant.getMillis();
iGregorianChronology=gregorian;
cf.iRangeDurationField=fields.months;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
cf.iRangeDurationField=fields.centuryOfEra;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
cf.iRangeDurationField=fields.months;
fields.years=fields.year.getDurationField();
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
cf.iRangeDurationField=fields.months;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
cf.iRangeDurationField=fields.months;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
cf.iRangeDurationField=fields.months;
fields.years=fields.year.getDurationField();
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
cf.iRangeDurationField=fields.months;
fields.years=fields.year.getDurationField();
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
cf.iRangeDurationField=fields.months;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
fields.yearOfCentury=new ImpreciseCutoverField(julian.yearOfCentury(),fields.yearOfCentury,fields.years,iCutoverMillis);
fields.centuryOfEra=new ImpreciseCutoverField(julian.centuryOfEra(),fields.centuryOfEra,iCutoverMillis);
cf.iRangeDurationField=fields.months;
fields.years=fields.year.getDurationField();
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
cf.iRangeDurationField=iCutoverMillis;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
if(julian.getMinimumDaysInFirstWeek()!=gregorian.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
cf.iRangeDurationField=fields.months;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.copyFieldsFrom(gregorian);
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
cf.iRangeDurationField=fields.months;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fields.copyFieldsFrom(gregorian);
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
if(julian.getMinimumDaysInFirstWeek()!=gregorian.getMinimumDaysInFirstWeek()){
throw new IllegalArgumentException();
}
cf.iRangeDurationField=fields.months;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
fields.years=fields.year.getDurationField();
cf.iRangeDurationField=fields.months;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();
cf.iRangeDurationField=fields.months;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
cf.iRangeDurationField=fields.monthOfYear;
fields.dayOfMonth=weekyear;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
fields.years=fields.year.getDurationField();
cf.iRangeDurationField=fields.monthOfYear;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();
cf.iRangeDurationField=fields.monthOfYear;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
fields.years=fields.year.getDurationField();
cf.iRangeDurationField=fields.months;
fields.dayOfMonth=weekyear;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();
cf.iRangeDurationField=fields.months;
fields.dayOfMonth=weekyear;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.centuries=fields.centuryOfEra.getDurationField();
cf.iRangeDurationField=fields.months;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
fields.years=fields.year.getDurationField();
cf.iRangeDurationField=fields.monthOfYear;
fields.dayOfMonth=weekyear;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
fields.centuries=fields.centuryOfEra.getDurationField();
cf.iRangeDurationField=fields.monthOfYear;
fields.dayOfMonth=weekyear;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.centuries=fields.centuryOfEra.getDurationField();
cf.iRangeDurationField=fields.monthOfYear;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.centuries=fields.centuryOfEra.getDurationField();
cf.iRangeDurationField=fields.months;
fields.dayOfMonth=weekyear;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
fields.years=fields.year.getDurationField();
fields.centuries=fields.centuryOfEra.getDurationField();
cf.iRangeDurationField=fields.monthOfYear;
fields.dayOfMonth=weekyear;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
cf.iRangeDurationField=fields.months;
iGregorianField=(iGregorianField=fields.halfdayOfDay)!=null?f:super.halfdayOfDay();
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
cf.iRangeDurationField=fields.months;
iGregorianField=(iGregorianField=fields.dayOfWeek)!=null?f:super.dayOfWeek();
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
iGregorianField=(iGregorianField=fields.dayOfYear)!=null?f:super.dayOfYear();
cf.iRangeDurationField=fields.months;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
iDurationField=(iGregorianField=fields.weeks)!=null?f:super.weeks();
cf.iRangeDurationField=fields.months;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
iDurationField=(iGregorianField=fields.weekyears)!=null?f:super.weekyears();
cf.iRangeDurationField=fields.months;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iDurationField=(iGregorianField=fields.years)!=null?f:super.years();
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
cf.iRangeDurationField=fields.months;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iDurationField=(iGregorianField=fields.centuries)!=null?f:super.centuries();
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
cf.iRangeDurationField=fields.months;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
fields.era=convertField(fields.era);
fields.dayOfWeek=convertField(fields.dayOfWeek);
cf.iRangeDurationField=fields.months;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.monthOfYear=convertField(fields.monthOfYear);
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
fields.era=convertField(fields.era);
cf.iRangeDurationField=fields.months;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.monthOfYear=convertField(fields.monthOfYear);
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
fields.dayOfWeek=convertField(fields.dayOfWeek);
cf.iRangeDurationField=fields.months;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fields.monthOfYear=convertField(fields.monthOfYear);
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
fields.era=convertField(fields.era);
fields.dayOfWeek=convertField(fields.dayOfWeek);
cf.iRangeDurationField=fields.months;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
super(DateTimeFieldType.dayOfMonth(),iDurationField);
cf.iRangeDurationField=fields.months;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case WEEKS :

CutoverField cf=new CutoverField(julian.dayOfMonth(),fields.dayOfMonth,iCutoverMillis);
cf.iRangeDurationField=fields.months;
fields.dayOfMonth=cf;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.GJChronology,577
org.joda.time.chrono.GJChronology,578
org.joda.time.chrono.GJChronology,580
Find no block!
org.joda.time.chrono.GJChronology,583
========
return convertByYear(instant,iGregorianChronology,iJulianChronology);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
return convertByYear(instant,iGregorianChronology,iGregorianChronology);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
return convertByYear(instant,iJulianChronology,iJulianChronology);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
return convertByWeekyear(instant,iJulianChronology,iGregorianChronology);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
return convertByWeekyear(instant,iGregorianChronology,iJulianChronology);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
return roundFloor(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return add(instant,FieldUtils.safeToInt(iCutover));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return this.getDifferenceAsLong(instant+iCutover,instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return set(instant,get(getWrappedField().remainder(instant)));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return this.add(instant,iCutover);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return this.add(instant,instant)-instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return instant-roundFloor(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.GJChronology,587
========
return convertByYear(instant,iJulianChronology,iGregorianChronology);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
return convertByYear(instant,iJulianChronology,iJulianChronology);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
return convertByYear(instant,iGregorianChronology,iGregorianChronology);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
return convertByWeekyear(instant,iJulianChronology,iGregorianChronology);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
return convertByWeekyear(instant,iGregorianChronology,iJulianChronology);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
return roundFloor(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return add(instant,FieldUtils.safeToInt(iCutover));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return this.getDifferenceAsLong(instant+iCutover,instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return set(instant,get(getWrappedField().remainder(instant)));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return this.add(instant,iCutover);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return this.add(instant,instant)-instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return instant-roundFloor(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.base.AbstractInstant,259
========
if(this==readableInstant){
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.joda.time.base.AbstractInstant,260
org.joda.time.Instant,118
UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

========
super();
iMillis=duration;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super();
iMillis=instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super();
iMillis=MIN_VALUE;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super();
iMillis=localMillis;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super();
iMillis=millis;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super();
iMillis=end;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant>0&&iMillis<0){
start=instant;
}
super();
iMillis=instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant>0&&iMillis<0){
end=instant;
}
super();
iMillis=instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<0&&iMillis>0){
start=instant;
}
super();
iMillis=instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<0&&iMillis>0){
end=instant;
}
super();
iMillis=instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super();
iMillis=UTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.Instant,119
org.joda.time.Instant,120
Find no block!
org.joda.time.Instant,144
org.joda.time.Instant,256
org.joda.time.DateTimeUtils,299
UNKNOWN ASTNode type : catch (IllegalArgumentException ex) {
  zone=DateTimeZone.getDefault();
}

UNKNOWN ASTNode type : catch (IllegalArgumentException ex) {
  zone=DateTimeZone.getDefault();
}

========
if(zone==DateTimeZone.UTC){
return DateTimeZone.getDefault();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(newZone==null){
return DateTimeZone.getDefault();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==getZone()){
return this;
}
if(zone==null){
return DateTimeZone.getDefault();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==null){
return ISOChronology.getInstance(zone);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(temp==null){
return DateTimeZone.getDefault();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZone==null){
return DateTimeZone.getDefault();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone!=null){
return DateTimeZone.getDefault();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(UTC==null){
return DateTimeZone.getDefault();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.DateTimeUtils,302
========
if(zone==DateTimeZone.UTC){
return DateTimeZone.getDefault();
}
return zone;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(zone==getZone()){
return this;
}
if(zone==null){
return DateTimeZone.getDefault();
}
return zone;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone!=null){
return DateTimeZone.getDefault();
}
return zone;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iZone==null){
return DateTimeZone.getDefault();
}
return zone;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==getParam()){
return this;
}
if(zone==null){
return DateTimeZone.getDefault();
}
return zone;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==DateTimeZone.UTC){
return getBase();
}
if(zone==null){
return DateTimeZone.getDefault();
}
return zone;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(newZone==null){
return DateTimeZone.getDefault();
}
return zone;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==null){
return DateTimeZone.getDefault();
}
if(zone==DateTimeZone.UTC){
return withUTC();
}
return zone;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==null){
return DateTimeZone.getDefault();
}
if(zone==getZone()){
return this;
}
return zone;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(zone==null){
return DateTimeZone.getDefault();
}
if(zone==DateTimeZone.UTC){
return withUTC();
}
if(zone==getZone()){
return this;
}
return zone;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(UTC==null){
return DateTimeZone.getDefault();
}
return zone;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
zone=DateTimeUtils.getZone(zone);
if(zone==null){
return DateTimeZone.getDefault();
}
return zone;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(zone==null){
return DateTimeZone.getDefault();
}
return UTC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(System.getSecurityManager()!=null){
sm.checkPermission(new JodaTimePermission("DateTimeZone.setDefault"));
}
if(zone==null){
return DateTimeZone.getDefault();
}
return zone;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.BasicChronology,153
========
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay,CACHE_MASK,CACHE_MASK,CACHE_MASK);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((base=getBase())!=null){
return base.getDateTimeMillis(iFirstDayMillis,year,monthOfYear,dayOfMonth,millisOfDay);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((base=getBase())!=null){
return base.getZone();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((base=getBase())==null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(base==null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(base!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
base=base.withUTC();
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(base==null){
throw new IllegalArgumentException("UTC chronology must not be null");
}
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.BasicChronology,157
UNKNOWN ASTNode type : catch (IllegalFieldValueException ex) {
  if (monthOfYear != 2 || dayOfMonth != 29) {
    throw ex;
  }
  instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,28,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
  if (instant >= iCutoverMillis) {
    throw ex;
  }
}

UNKNOWN ASTNode type : catch (IllegalFieldValueException ex) {
  if (monthOfYear != 2 || dayOfMonth != 29) {
    throw ex;
  }
  instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,28,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
  if (instant >= iCutoverMillis) {
    throw ex;
  }
}

UNKNOWN ASTNode type : catch (IllegalFieldValueException ex) {
  if (monthOfYear != 2 || dayOfMonth != 29) {
    throw ex;
  }
  instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,28,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
  if (instant >= iCutoverMillis) {
    throw ex;
  }
}

UNKNOWN ASTNode type : catch (IllegalFieldValueException ex) {
  if (monthOfYear != 2 || dayOfMonth != 29) {
    throw ex;
  }
  instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,28,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
  if (instant >= iCutoverMillis) {
    throw ex;
  }
}

UNKNOWN ASTNode type : catch (IllegalFieldValueException ex) {
  if (monthOfYear != 2 || dayOfMonth != 29) {
    throw ex;
  }
  instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,28,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
  if (instant >= iCutoverMillis) {
    throw ex;
  }
}

UNKNOWN ASTNode type : catch (IllegalFieldValueException ex) {
  if (monthOfYear != 2 || dayOfMonth != 29) {
    throw ex;
  }
  instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,28,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
  if (instant >= iCutoverMillis) {
    throw ex;
  }
}

UNKNOWN ASTNode type : catch (IllegalFieldValueException ex) {
  if (monthOfYear != 2 || dayOfMonth != 29) {
    throw ex;
  }
  instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,28,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
  if (instant >= iCutoverMillis) {
    throw ex;
  }
}

UNKNOWN ASTNode type : catch (IllegalFieldValueException ex) {
  if (monthOfYear != 2 || dayOfMonth != 29) {
    throw ex;
  }
  instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,28,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
  if (instant >= iCutoverMillis) {
    throw ex;
  }
}

========
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay,CACHE_MASK,CACHE_MASK,CACHE_MASK);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay*DateTimeConstants.MILLIS_PER_HOUR+CACHE_MASK*DateTimeConstants.MILLIS_PER_MINUTE+CACHE_MASK*DateTimeConstants.MILLIS_PER_SECOND+CACHE_MASK;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfSecond;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
FieldUtils.verifyValueBounds(DateTimeFieldType.minuteOfHour(),CACHE_MASK,0,59);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
FieldUtils.verifyValueBounds(DateTimeFieldType.secondOfMinute(),CACHE_MASK,0,59);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfSecond(),CACHE_MASK,0,999);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay,CACHE_MASK,CACHE_MASK,CACHE_MASK);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay*DateTimeConstants.MILLIS_PER_HOUR+CACHE_MASK*DateTimeConstants.MILLIS_PER_MINUTE+CACHE_MASK*DateTimeConstants.MILLIS_PER_SECOND+CACHE_MASK;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iFirstDayMillis=dayOfMonth().set(instant,dayOfMonth);
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),year,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
FieldUtils.verifyValueBounds(DateTimeFieldType.monthOfYear(),millisOfDay,1,getMaxMonth(year));
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(DateTimeFieldType.dayOfMonth(),dayOfMonth,1,getDaysInYearMonth(year,millisOfDay));
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(iFirstDayMillis,year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=getBase())!=null){
return base.getZone();
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
checkLimits(iFirstDayMillis,null);
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkLimits(iFirstDayMillis,"resulting");
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getWrappedField().get(iFirstDayMillis)<0){
millisOfDay=-year;
}
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getYearMillis(year)+(millisOfDay-1)*(long)DateTimeConstants.MILLIS_PER_DAY;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+dayOfMonth;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+MILLIS_PER_DAY;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
base.year().verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iFirstDayMillis=base.monthOfYear().set(instant,monthOfYear);
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iFirstDayMillis=base.dayOfMonth().set(instant,dayOfMonth);
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iFirstDayMillis=base.monthOfYear().set(instant,monthOfYear);
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
base.year().verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iFirstDayMillis=base.dayOfMonth().set(instant,dayOfMonth);
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
base.year().verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iFirstDayMillis=base.monthOfYear().set(instant,monthOfYear);
iFirstDayMillis=base.dayOfMonth().set(instant,dayOfMonth);
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iFirstDayMillis=base.monthOfYear().set(instant,monthOfYear);
iFirstDayMillis=base.dayOfMonth().set(instant,dayOfMonth);
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
base.year().verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iFirstDayMillis=hourOfDay().set(instant,millisOfDay);
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iFirstDayMillis=minuteOfHour().set(instant,CACHE_MASK);
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iFirstDayMillis=secondOfMinute().set(instant,CACHE_MASK);
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(get(iFirstDayMillis)==millisOfDay){
return iFirstDayMillis;
}
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
base.monthOfYear().verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iFirstDayMillis=base.millisOfDay().set(millis,monthOfYear);
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(millisOfDay==getMaximumValue()){
value=0;
}
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=getBase())==null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if(base==null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if(base!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
iFirstDayMillis=super.add(instant,dayOfMonth);
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(millisOfDay<=iYear){
value--;
}
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(millisOfDay<=iYear){
if(value==iSkip){
throw new IllegalFieldValueException(DateTimeFieldType.year(),Integer.valueOf(value),null,null);
}
value++;
}
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(base==null){
throw new IllegalArgumentException("UTC chronology must not be null");
}
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+value;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+iUnitMillis;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getYearMonthDayMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
if(CACHE_MASK>CACHE_MASK){
thisDom=maxDom;
}
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return iFirstDayMillis+(millisOfDay-get(instant))*iFirstDayMillis;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
base.weekyear().verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iFirstDayMillis=base.weekOfWeekyear().set(newInstant,base.weekOfWeekyear().get(iFirstDayMillis));
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iFirstDayMillis=base.dayOfWeek().set(newInstant,base.dayOfWeek().get(iFirstDayMillis));
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iFirstDayMillis=base.millisOfDay().set(newInstant,base.millisOfDay().get(iFirstDayMillis));
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iYear=year;
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),dayOfMonth,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
if(iMinDaysInFirstWeek>CACHE_MASK){
setToWeek=maxOutWeeks;
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(get(iFirstDayMillis)<millisOfDay){
iFirstDayMillis+=DateTimeConstants.MILLIS_PER_WEEK;
}else if(workWoyYear>year){
workInstant-=DateTimeConstants.MILLIS_PER_WEEK;
}
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
iFirstDayMillis=super.add(instant,iFirstDayMillis);
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
base=chrono.withUTC();
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
DateTimeUtils.getChronology(base).verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
CACHE_MASK+=(getLowerLimit()!=null?getLowerLimit().hashCode():0);
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,millisOfDay);
}
CACHE_MASK+=(getUpperLimit()!=null?getUpperLimit().hashCode():0);
FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(),millisOfDay,0,DateTimeConstants.MILLIS_PER_DAY-1);
return getDateMidnightMillis(year,monthOfYear,dayOfMonth)+millisOfDay;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.BasicChronology,159
org.joda.time.chrono.BasicChronology,185
org.joda.time.chrono.BasicChronology,336
========
long firstWeekMillis1=getFirstWeekOfYearMillis(year);
long firstWeekMillis2=getFirstWeekOfYearMillis(year+1);
return (int)((iFirstDayMillis-firstWeekMillis1)/DateTimeConstants.MILLIS_PER_WEEK)+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long firstWeekMillis1=getFirstWeekOfYearMillis(year);
if(iFirstDayMillis<firstWeekMillis1){
return getWeeksInYear(year-1);
}
long firstWeekMillis2=getFirstWeekOfYearMillis(year+1);
return (int)((firstWeekMillis2-firstWeekMillis1)/DateTimeConstants.MILLIS_PER_WEEK);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long firstWeekMillis1=getFirstWeekOfYearMillis(year);
long firstWeekMillis2=getFirstWeekOfYearMillis(year+1);
if(iFirstDayMillis>=firstWeekMillis2){
return 1;
}
return (int)((firstWeekMillis2-firstWeekMillis1)/DateTimeConstants.MILLIS_PER_WEEK);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long firstWeekMillis1=getYearMillis(year);
long firstWeekMillis2=getFirstWeekOfYearMillis(year+1);
return (int)((firstWeekMillis2-firstWeekMillis1)/DateTimeConstants.MILLIS_PER_WEEK);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long firstWeekMillis1=getFirstWeekOfYearMillis(year);
long firstWeekMillis2=getFirstWeekOfYearMillis(year+1);
return ((int)firstWeekMillis2)+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long firstWeekMillis1=getYearMillis(year);
long firstWeekMillis2=getFirstWeekOfYearMillis(year+1);
return ((int)firstWeekMillis2)+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long firstWeekMillis1=getFirstWeekOfYearMillis(year);
long firstWeekMillis2=getFirstWeekOfYearMillis(year+1);
return (int)((firstWeekMillis1-firstWeekMillis2)/DateTimeConstants.MILLIS_PER_DAY)+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long firstWeekMillis1=getYearMillis(year);
long firstWeekMillis2=getFirstWeekOfYearMillis(year+1);
return (int)((firstWeekMillis1-firstWeekMillis2)/DateTimeConstants.MILLIS_PER_DAY)+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Timeout!
