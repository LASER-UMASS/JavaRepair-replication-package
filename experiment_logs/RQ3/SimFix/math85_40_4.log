java version "1.7.0_231"
OpenJDK Runtime Environment (rhel-2.6.19.1.el7_6-x86_64 u231-b01)
OpenJDK 64-Bit Server VM (build 24.231-b01, mixed mode)
Check out 9be86f67 to /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/ OK
Init local repository...................................................... OK
Tag post-fix revision...................................................... OK
Initialize fixed program version........................................... OK
Apply patch................................................................ OK
Initialize buggy program version........................................... OK
Diff 9be86f67:8de8a3b6..................................................... OK
Apply patch................................................................ OK
Tag pre-fix revision....................................................... OK
Check out program version: Math-85b........................................ OK
Running ant (compile)...................................................... OK
Running ant (compile.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Running ant (run.dev.tests)................................................ OK
Failing tests: 1
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
/home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4
PURIFY IS FALSE
=================================================
Project : math_85	start : 19/10/18 18:56

readFailedTest: path is /mnt/nfs/work1/brun/mmotwani/SimFix/d4j-info/failed_tests/math/85.txt#ATTEMPTS: 1

# FAILING TESTS: 1
TIMEOUT : 18000000
===========
locations= [<org.apache.commons.math.distribution.AbstractContinuousDistribution,88>, <org.apache.commons.math.distribution.AbstractContinuousDistribution,97>, <org.apache.commons.math.distribution.AbstractContinuousDistribution,100>, <org.apache.commons.math.distribution.AbstractContinuousDistribution,104>, <org.apache.commons.math.special.Gamma,159>, <org.apache.commons.math.special.Gamma,161>, <org.apache.commons.math.special.Gamma,162>, <org.apache.commons.math.special.Gamma,163>, <org.apache.commons.math.special.Gamma,169>, <org.apache.commons.math.special.Gamma,170>, <org.apache.commons.math.special.Gamma,171>, <org.apache.commons.math.special.Gamma,172>, <org.apache.commons.math.special.Gamma,174>, <org.apache.commons.math.special.Gamma,175>, <org.apache.commons.math.special.Gamma,178>, <org.apache.commons.math.special.Gamma,180>, <org.apache.commons.math.special.Gamma,181>, <org.apache.commons.math.special.Gamma,183>, <org.apache.commons.math.special.Gamma,187>, <org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils,199>, <org.apache.commons.math.distribution.NormalDistributionImpl,54>, <org.apache.commons.math.distribution.NormalDistributionImpl,43>, <org.apache.commons.math.distribution.NormalDistributionImpl,46>, <org.apache.commons.math.distribution.NormalDistributionImpl,55>, <org.apache.commons.math.distribution.NormalDistributionImpl,56>, <org.apache.commons.math.distribution.NormalDistributionImpl,57>, <org.apache.commons.math.distribution.NormalDistributionImpl,40>, <org.apache.commons.math.distribution.NormalDistributionImpl,72>, <org.apache.commons.math.distribution.NormalDistributionImpl,80>, <org.apache.commons.math.distribution.NormalDistributionImpl,81>, <org.apache.commons.math.distribution.NormalDistributionImpl,88>, <org.apache.commons.math.distribution.NormalDistributionImpl,97>, <org.apache.commons.math.distribution.NormalDistributionImpl,102>, <org.apache.commons.math.distribution.NormalDistributionImpl,103>, <org.apache.commons.math.distribution.NormalDistributionImpl,126>, <org.apache.commons.math.distribution.NormalDistributionImpl,128>, <org.apache.commons.math.distribution.NormalDistributionImpl,129>, <org.apache.commons.math.distribution.NormalDistributionImpl,131>, <org.apache.commons.math.distribution.NormalDistributionImpl,132>, <org.apache.commons.math.distribution.NormalDistributionImpl,156>, <org.apache.commons.math.distribution.NormalDistributionImpl,159>, <org.apache.commons.math.distribution.NormalDistributionImpl,162>, <org.apache.commons.math.distribution.NormalDistributionImpl,178>, <org.apache.commons.math.distribution.NormalDistributionImpl,181>, <org.apache.commons.math.distribution.NormalDistributionImpl,184>, <org.apache.commons.math.distribution.NormalDistributionImpl,200>, <org.apache.commons.math.distribution.NormalDistributionImpl,203>, <org.apache.commons.math.distribution.NormalDistributionImpl,206>, <org.apache.commons.math.distribution.NormalDistributionImpl,221>, <org.apache.commons.math.distribution.NormalDistributionImpl,223>, <org.apache.commons.math.distribution.NormalDistributionImpl,224>, <org.apache.commons.math.distribution.NormalDistributionImpl,229>, <org.apache.commons.math.special.Erf,51>, <org.apache.commons.math.special.Erf,52>, <org.apache.commons.math.special.Erf,55>, <org.apache.commons.math.MathException,106>, <org.apache.commons.math.MathException,107>, <org.apache.commons.math.MathException,108>, <org.apache.commons.math.MathException,109>, <org.apache.commons.math.MathException,119>, <org.apache.commons.math.MathException,120>, <org.apache.commons.math.MathException,121>, <org.apache.commons.math.MathException,122>, <org.apache.commons.math.MathException,60>, <org.apache.commons.math.MathException,67>, <org.apache.commons.math.MathException,73>, <org.apache.commons.math.MathException,85>, <org.apache.commons.math.MathException,166>, <org.apache.commons.math.MathException,172>, <org.apache.commons.math.ConvergenceException,45>, <org.apache.commons.math.ConvergenceException,46>, <org.apache.commons.math.MaxIterationsExceededException,43>, <org.apache.commons.math.MaxIterationsExceededException,44>, <org.apache.commons.math.MaxIterationsExceededException,45>, <org.apache.commons.math.distribution.AbstractDistribution,39>, <org.apache.commons.math.distribution.AbstractDistribution,40>, <org.apache.commons.math.distribution.AbstractContinuousDistribution,46>, <org.apache.commons.math.distribution.AbstractContinuousDistribution,47>, <org.apache.commons.math.distribution.AbstractContinuousDistribution,62>, <org.apache.commons.math.distribution.AbstractContinuousDistribution,69>, <org.apache.commons.math.distribution.AbstractContinuousDistribution,81>, <org.apache.commons.math.distribution.AbstractContinuousDistribution,82>, <org.apache.commons.math.distribution.AbstractContinuousDistribution,83>, <org.apache.commons.math.distribution.AbstractContinuousDistribution,85>, <org.apache.commons.math.special.Gamma,41>, <org.apache.commons.math.special.Gamma,61>, <org.apache.commons.math.special.Gamma,91>, <org.apache.commons.math.special.Gamma,94>, <org.apache.commons.math.special.Gamma,96>, <org.apache.commons.math.special.Gamma,97>, <org.apache.commons.math.special.Gamma,98>, <org.apache.commons.math.special.Gamma,100>, <org.apache.commons.math.special.Gamma,102>, <org.apache.commons.math.special.Gamma,103>, <org.apache.commons.math.special.Gamma,107>, <org.apache.commons.math.distribution.AbstractContinuousDistribution,73>, <org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils,127>, <org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils,170>, <org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils,173>, <org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils,177>, <org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils,182>, <org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils,183>, <org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils,186>, <org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils,189>, <org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils,190>, <org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils,191>, <org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils,193>, <org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils,194>, <org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils,195>, <org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils,198>, <org.apache.commons.math.distribution.AbstractDistribution,61>, <org.apache.commons.math.distribution.AbstractDistribution,62>, <org.apache.commons.math.distribution.AbstractDistribution,66>, <org.apache.commons.math.distribution.AbstractContinuousDistribution,63>, <org.apache.commons.math.distribution.AbstractContinuousDistribution,105>, <org.apache.commons.math.distribution.AbstractContinuousDistribution,98>, <org.apache.commons.math.distribution.AbstractContinuousDistribution,101>, <org.apache.commons.math.distribution.AbstractContinuousDistribution,108>, <org.apache.commons.math.distribution.AbstractContinuousDistribution,110>, <org.apache.commons.math.util.ContinuedFraction,46>, <org.apache.commons.math.util.ContinuedFraction,47>, <org.apache.commons.math.util.ContinuedFraction,74>, <org.apache.commons.math.util.ContinuedFraction,85>, <org.apache.commons.math.util.ContinuedFraction,96>, <org.apache.commons.math.util.ContinuedFraction,128>, <org.apache.commons.math.util.ContinuedFraction,129>, <org.apache.commons.math.util.ContinuedFraction,130>, <org.apache.commons.math.util.ContinuedFraction,131>, <org.apache.commons.math.util.ContinuedFraction,132>, <org.apache.commons.math.util.ContinuedFraction,133>, <org.apache.commons.math.util.ContinuedFraction,134>, <org.apache.commons.math.util.ContinuedFraction,135>, <org.apache.commons.math.util.ContinuedFraction,136>, <org.apache.commons.math.util.ContinuedFraction,137>, <org.apache.commons.math.util.ContinuedFraction,138>, <org.apache.commons.math.util.ContinuedFraction,139>, <org.apache.commons.math.util.ContinuedFraction,140>, <org.apache.commons.math.util.ContinuedFraction,141>, <org.apache.commons.math.util.ContinuedFraction,143>, <org.apache.commons.math.util.ContinuedFraction,144>, <org.apache.commons.math.util.ContinuedFraction,145>, <org.apache.commons.math.util.ContinuedFraction,146>, <org.apache.commons.math.util.ContinuedFraction,147>, <org.apache.commons.math.util.ContinuedFraction,148>, <org.apache.commons.math.util.ContinuedFraction,151>, <org.apache.commons.math.util.ContinuedFraction,156>, <org.apache.commons.math.util.ContinuedFraction,157>, <org.apache.commons.math.util.ContinuedFraction,160>, <org.apache.commons.math.util.ContinuedFraction,161>, <org.apache.commons.math.util.ContinuedFraction,162>, <org.apache.commons.math.util.ContinuedFraction,163>, <org.apache.commons.math.util.ContinuedFraction,164>, <org.apache.commons.math.util.ContinuedFraction,165>, <org.apache.commons.math.util.ContinuedFraction,167>, <org.apache.commons.math.util.ContinuedFraction,168>, <org.apache.commons.math.util.ContinuedFraction,173>, <org.apache.commons.math.special.Gamma,68>, <org.apache.commons.math.special.Gamma,69>, <org.apache.commons.math.special.Gamma,92>, <org.apache.commons.math.special.Gamma,121>, <org.apache.commons.math.special.Gamma,160>, <org.apache.commons.math.special.Gamma,166>, <org.apache.commons.math.special.Gamma,201>, <org.apache.commons.math.special.Gamma,234>, <org.apache.commons.math.special.Gamma,235>, <org.apache.commons.math.special.Gamma,236>, <org.apache.commons.math.special.Gamma,237>, <org.apache.commons.math.special.Gamma,238>, <org.apache.commons.math.special.Gamma,241>, <org.apache.commons.math.special.Gamma,244>, <org.apache.commons.math.special.Gamma,257>, <org.apache.commons.math.special.Gamma,258>, <org.apache.commons.math.special.Gamma,261>, <org.apache.commons.math.special.Gamma,292>, <org.apache.commons.math.special.Gamma,295>, <org.apache.commons.math.special.Gamma,298>, <org.apache.commons.math.special.Gamma,300>, <org.apache.commons.math.special.Gamma,304>, <org.apache.commons.math.special.Gamma,307>, <org.apache.commons.math.special.Gamma,321>, <org.apache.commons.math.special.Gamma,322>, <org.apache.commons.math.special.Gamma,325>, <org.apache.commons.math.special.Gamma,326>, <org.apache.commons.math.special.Gamma,331>, <org.apache.commons.math.special.Gamma,334>, <org.apache.commons.math.distribution.AbstractContinuousDistribution,74>, <org.apache.commons.math.distribution.AbstractContinuousDistribution,75>, <org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils,34>, <org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils,35>, <org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils,53>, <org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils,54>, <org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils,77>, <org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils,78>, <org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils,79>, <org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils,80>, <org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils,171>, <org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils,174>, <org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils,178>, <org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils,207>, <org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils,218>]
======================org.apache.commons.math.distribution.AbstractContinuousDistribution,88
Find no block!
org.apache.commons.math.distribution.AbstractContinuousDistribution,97
========
if(Math.abs(rootFindingFunction.value(lowerBound))<1.0E-6){
return upperBound;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
p=rootFindingFunction.value(x);
if(Math.abs(rootFindingFunction.value(lowerBound))<1.0E-6){
return lowerBound;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(lowerBound))<0.0){
return lowerBound;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(rootFindingFunction.value(lowerBound))<1.0E-6){
return min;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(lowerBound))<1.0E-6){
return max;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(lowerBound))<1.0E-6){
return initial;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(p)<1.0E-6){
return lowerBound;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(rootFindingFunction.value(lowerBound))<1.0E-6){
return p;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(rootFindingFunction.value(lowerBound))<1.0E-6){
return result;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(p)<1.0E-6){
return p;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(lowerBound)<1.0E-6){
return lowerBound;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(rootFindingFunction.value(lowerBound))<=1.0E-6){
return lowerBound;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(lowerBound)<=1.0E-6){
return lowerBound;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(lowerBound-x)<1.0E-6){
return lowerBound;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(lowerBound))<1.0E-6){
return x1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(serialVersionUID-p)<1.0E-6){
return lowerBound;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(p)<=1.0E-6){
return lowerBound;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(rootFindingFunction.value(lowerBound))<0.0){
return min;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(lowerBound))<0.0){
return max;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(lowerBound))<0.0){
return initial;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.compareTo(rootFindingFunction.value(lowerBound))<1.0E-6){
return lowerBound;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.distribution.AbstractContinuousDistribution,100
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return lowerBound;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
lowerBound=rootFindingFunction.value(x);
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<0.0){
return upperBound;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return min;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return max;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return initial;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(lowerBound)<1.0E-6){
return upperBound;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return result;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(lowerBound)<1.0E-6){
return lowerBound;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(upperBound)<1.0E-6){
return upperBound;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(rootFindingFunction.value(upperBound))<=1.0E-6){
return upperBound;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(upperBound)<=1.0E-6){
return upperBound;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
lowerBound=Math.min(upper,lowerBound+100*MathUtils.EPSILON);
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(upperBound-x)<1.0E-6){
return upperBound;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return x1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(serialVersionUID-lowerBound)<1.0E-6){
return upperBound;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(lowerBound)<=1.0E-6){
return upperBound;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(rootFindingFunction.value(upperBound))<0.0){
return min;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<0.0){
return max;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<0.0){
return initial;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.compareTo(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.distribution.AbstractContinuousDistribution,104
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return lowerBound;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(rootFindingFunction.value(lowerBound))<1.0E-6){
return upperBound;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(rootFindingFunction.value(lowerBound))<1.0E-6){
return lowerBound;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return lowerBound;
}
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(rootFindingFunction.value(lowerBound))<1.0E-6){
return upperBound;
}
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(rootFindingFunction.value(lowerBound))<1.0E-6){
return lowerBound;
}
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
if((Math.abs(lowerBound-lowerBound)>(Math.max(Math.abs(lowerBound),Math.abs(lowerBound))*lowerBound))&&(difference>lowerBound)){
return false;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
if((lowerBound>(lowerBound*lowerBound))&&(difference>lowerBound)){
return false;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lowerBound=rootFindingFunction.value(x);
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
throw new IntegratorException("too small integration interval: length = {0}",Math.abs(lowerBound-lowerBound));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
throw MathRuntimeException.createIllegalArgumentException("function values at endpoints do not have different signs, "+"endpoints: [{0}, {1}], values: [{2}, {3}]",lowerBound,lowerBound,rootFindingFunction.value(upperBound),rootFindingFunction.value(x));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
if(rootFindingFunction.value(lowerBound)*rootFindingFunction.value(lowerBound)<=0){
return upperBound;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
throw MathRuntimeException.createIllegalArgumentException("function values at endpoints do not have different signs.  "+"Endpoints: [{0}, {1}], Values: [{2}, {3}]",lowerBound,upperBound,rootFindingFunction.value(lower),f.value(upper));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<0.0){
return upperBound;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return min;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return max;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return initial;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
if(lowerBound==0.0&&lowerBound==0.0){
return createComplex(0.0,0.0);
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lowerBound>=0.0){
return createComplex(Math.sqrt((Math.abs(lowerBound)+abs())/2.0),lowerBound/(2.0*t));
}else {
return createComplex(Math.abs(imaginary)/(2.0*t),MathUtils.indicator(imaginary)*t);
}
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
if(lowerBound==0.0){
return Math.abs(lowerBound);
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
if(lowerBound==0.0){
return lowerBound;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
upperBound=lowerBound;
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
lowerBound=rootFindingFunction.value(upperBound);
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
upperBound=lowerBound;
if(lowerBound==0.0){
return lowerBound;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
lowerBound=rootFindingFunction.value(upperBound);
if(lowerBound==0.0){
return lowerBound;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
upperBound=lowerBound;
lowerBound=rootFindingFunction.value(upperBound);
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
upperBound=lowerBound;
lowerBound=rootFindingFunction.value(upperBound);
if(lowerBound==0.0){
return lowerBound;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
upperBound=0.5*(x+x);
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
upperBound=0.5*(x+x);
if(lowerBound==0.0){
return lowerBound;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
upperBound=0.5*(x+x);
lowerBound=rootFindingFunction.value(upperBound);
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
upperBound=0.5*(x+x);
lowerBound=rootFindingFunction.value(upperBound);
if(lowerBound==0.0){
return lowerBound;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
lowerBound=Math.min(upper,lowerBound+100*MathUtils.EPSILON);
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
if(Math.abs(lowerBound)<10*Double.MIN_VALUE){
return Double.NaN;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
if(Math.abs(lowerBound)<=lowerBound){
setResult(lowerBound,0);
return upperBound;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
if(Math.abs(lowerBound)<=lowerBound){
setResult(yMin,0);
return upperBound;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
if(Math.abs(lowerBound)<=lowerBound){
setResult(yMax,0);
return upperBound;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
if(serialVersionUID<0){
xInt=SGN_MASK-xInt;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
if(serialVersionUID<0){
yInt=SGN_MASK-yInt;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
if(((Math.abs(lowerBound)<=lowerBound)&&(lowerBound<=costRelativeTolerance))||(lowerBound<=lowerBound*x)){
return ;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
throw new NotSymmetricMatrixException();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<=1.0E-6){
return upperBound;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(upperBound-x)<1.0E-6){
return upperBound;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return x1;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(serialVersionUID-lowerBound)<1.0E-6){
return upperBound;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
throw new FunctionEvaluationException(bracket,"dimension mismatch {0} != {1}",residuals.length,observations.length);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(upperBound)<1.0E-6){
return upperBound;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(upperBound)<=1.0E-6){
return upperBound;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
throw MathRuntimeException.createIllegalArgumentException("function values at endpoints do not have different signs.  "+"Endpoints: [{0}, {1}], Values: [{2}, {3}]",lowerBound,lowerBound,upperBound,lowerBound);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
if(lowerBound==0.0){
return createComplex(lowerBound/lowerBound,lowerBound/c);
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
if(Math.abs(lowerBound)<Math.abs(lowerBound)){
if(d==0.0){
return createComplex(lowerBound/c,lowerBound/c);
}
double lowerBound/lowerBound=c/d;
double lowerBound*lowerBound/lowerBound+lowerBound=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
if(c==0.0){
return createComplex(imaginary/d,-real/c);
}
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
if(lowerBound==0.0){
return createComplex(lowerBound/lowerBound,-lowerBound/c);
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
throw new SingularMatrixException();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
if(lowerBound+0.01*lowerBound<=0.0){
den=1.0;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
if(Double.isNaN(lowerBound)){
return false;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
if(isNaN()){
return Complex.NaN;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
new CombinedEventsManager().addEventHandler(new EndTimeChecker(upperBound),Double.POSITIVE_INFINITY,Math.ulp(Math.max(Math.abs(lowerBound),Math.abs(endTime))),100);
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
lowerBound=df(lowerBound,lowerBound,lowerBound,lowerBound);
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
throw new OptimizationException("cost relative tolerance is too small ({0}),"+" no further reduction in the",upperBound);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
throw new OptimizationException("parameters relative tolerance is too small"+" ({0}), no further improvement in",lowerBound);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
throw new OptimizationException("orthogonality tolerance is too small ({0}),"+" solution is orthogonal to the jacobian",lowerBound);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
throw new EstimationException("cost relative tolerance is too small ({0}),"+" no further reduction in the",upperBound);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
throw new EstimationException("parameters relative tolerance is too small"+" ({0}), no further improvement in",lowerBound);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
throw new EstimationException("orthogonality tolerance is too small ({0}),"+" solution is orthogonal to the jacobian",lowerBound);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<0.0){
return min;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<0.0){
return max;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<0.0){
return initial;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
throw MathRuntimeException.createIllegalArgumentException("cannot convert NaN value");

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
throw MathRuntimeException.createIllegalArgumentException("cannot convert infinite value");

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
throw MathRuntimeException.createIllegalArgumentException("cannot format given object as a fraction number");

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.compareTo(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
throw new IntegratorException("minimal step size ({0}) reached, integration needs {1}",lowerBound,Math.abs(lowerBound));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
throw MathRuntimeException.createArrayIndexOutOfBoundsException("cannot substitute an element from an empty array");

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(rootFindingFunction.value(upperBound))<1.0E-6){
return upperBound;
}
verifyInputArray(bracket,bracket);
throw new MathException(ex);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.special.Gamma,159
========
lanczos[maxIterations]=ret;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(ret)>a){
largest=Math.abs(sum);
sum=maxIterations;
}
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
x0=x;
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
x1=x;
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
x2=x;
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=sum;
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
x0=x;
x1=x;
x2=x;
y2=sum;

n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lanczos[maxIterations]=an*x+sum;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
lanczos[maxIterations]=Math.abs(lanczos[i]-lanczos[i]);
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
ratio=a/an;
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
r=maxIterations;
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
nearest=maxIterations;
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
hNew=Math.abs(an);
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(an+0.01*sum<=0.0){
den=1.0;
}
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
iterationCount=maxIterations;
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(ret)<=a){
setResult(an,maxIterations);
return ret;
}
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sin=1.0/Math.sqrt(1.0+n*cotan);
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
sin=sum*lanczos[maxIterations]/an;
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ret=Math.min(upper,an+100*MathUtils.EPSILON);
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
setResult(ret,0);
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(an==maxIterations){
return ;
}
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=1.0+Math.abs(ret)*Math.sqrt(ret);
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
an=Math.ceil(n);
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
sum=(-n*y+2.0*y)/ret-a-an*x;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
assert maxUlps > 0 && maxUlps < NAN_GAP;

while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n<0){
yInt=SGN_MASK-yInt;
}
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ret=-Math.abs(an)*Math.sqrt(ret)-1.0;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=Math.floor(ret);
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sum=-an*z/2.0-a-n*epsilon;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>x1&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sum=Math.max(epsilon*Math.abs(an),ret);
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sum==Integer.MIN_VALUE){
throw new ArithmeticException("overflow: lcm is 2^31");
}
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
while(Math.abs(an)>epsilon&&n<maxIterations){
ret=Math.exp(-x+(n*Math.log(x))-logGamma(a))*sum;
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
while(Math.abs(an)>epsilon&&n<maxIterations){
x+=epsilon;
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
epsilon=(a-an)/n;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
x=an+0.5*epsilon;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
epsilon=(a-an)/n;
while(Math.abs(an)>epsilon&&n<maxIterations){
x+=epsilon;
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
x=an+0.5*epsilon;
while(Math.abs(an)>epsilon&&n<maxIterations){
x+=epsilon;
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
epsilon=(a-an)/n;
x=an+0.5*epsilon;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
epsilon=(a-an)/n;
x=an+0.5*epsilon;
while(Math.abs(an)>epsilon&&n<maxIterations){
x+=epsilon;
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
while(Math.abs(an)>epsilon&&n<maxIterations){
k+=maxIterations;
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
p2=(a/n*an)+epsilon;
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new CombinedEventsManager().addEventHandler(new EndTimeChecker(ret),Double.POSITIVE_INFINITY,Math.ulp(Math.max(Math.abs(an),Math.abs(endTime))),100);
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sum=Math.sqrt(x/n);
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ret=Math.sqrt(n/an);
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
sum=Math.sqrt(x/n);
ret=Math.sqrt(n/an);
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
while(Math.abs(an)>epsilon&&n<maxIterations){
p+=4;
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ret+=x;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sum+=ret;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n++;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
while(Math.abs(an)>epsilon&&n<maxIterations){
l+=4;
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
secondaryTridiagonal[i-1]=n*an;
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lanczos[n]=a;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lanczos[maxIterations]=a;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
while(Math.abs(an)>epsilon&&n<maxIterations){
q+=4;
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lanczos[maxIterations]+=sum;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
x2=x;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=ret;
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
x2=x;
y2=ret;

n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
y1=ret;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
x1=x;
y1=ret;

an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
minRatioPos=maxIterations;
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sum=values.length;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.epsilon=epsilon;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
sin=sum*lanczos[maxIterations]/an;
n=n+1.0;
an=an*(x/(a+n));
sin=1.0/Math.sqrt(1.0+n*cotan);
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sum=values.length;
this.epsilon=epsilon;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ret<an||initial>n||lowerBound>=upperBound){
throw MathRuntimeException.createIllegalArgumentException("invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",lowerBound,initial,upperBound);
}
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
minPos=maxIterations;
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
epsilon=DEFAULT_ZERO_TOLERANCE;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
x0=x;
x1=x;
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
x0=x;
x2=x;
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=sum;
n=n+1.0;
an=an*(x/(a+n));
x0=x;
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
x0=x;
x1=x;
x2=x;
y2=sum;

n=n+1.0;
an=an*(x/(a+n));
x0=x;
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
x1=x;
x2=x;
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=sum;
n=n+1.0;
an=an*(x/(a+n));
x1=x;
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
x0=x;
x1=x;
x2=x;
y2=sum;

n=n+1.0;
an=an*(x/(a+n));
x1=x;
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=sum;
n=n+1.0;
an=an*(x/(a+n));
x2=x;
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
x0=x;
x1=x;
x2=x;
y2=sum;

n=n+1.0;
an=an*(x/(a+n));
x2=x;
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=sum;
x0=x;
x1=x;
x2=x;
y2=sum;

n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
x0=x;
x1=x;
x2=x;
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=sum;
n=n+1.0;
an=an*(x/(a+n));
x0=x;
x1=x;
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
x0=x;
x1=x;
x2=x;
y2=sum;

n=n+1.0;
an=an*(x/(a+n));
x0=x;
x1=x;
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=sum;
n=n+1.0;
an=an*(x/(a+n));
x0=x;
x2=x;
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
x0=x;
x1=x;
x2=x;
y2=sum;

n=n+1.0;
an=an*(x/(a+n));
x0=x;
x2=x;
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=sum;
x0=x;
x1=x;
x2=x;
y2=sum;

n=n+1.0;
an=an*(x/(a+n));
x0=x;
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=sum;
n=n+1.0;
an=an*(x/(a+n));
x1=x;
x2=x;
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
x0=x;
x1=x;
x2=x;
y2=sum;

n=n+1.0;
an=an*(x/(a+n));
x1=x;
x2=x;
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=sum;
x0=x;
x1=x;
x2=x;
y2=sum;

n=n+1.0;
an=an*(x/(a+n));
x1=x;
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=sum;
x0=x;
x1=x;
x2=x;
y2=sum;

n=n+1.0;
an=an*(x/(a+n));
x2=x;
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=sum;
n=n+1.0;
an=an*(x/(a+n));
x0=x;
x1=x;
x2=x;
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
x0=x;
x1=x;
x2=x;
y2=sum;

n=n+1.0;
an=an*(x/(a+n));
x0=x;
x1=x;
x2=x;
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=sum;
x0=x;
x1=x;
x2=x;
y2=sum;

n=n+1.0;
an=an*(x/(a+n));
x0=x;
x1=x;
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=sum;
x0=x;
x1=x;
x2=x;
y2=sum;

n=n+1.0;
an=an*(x/(a+n));
x0=x;
x2=x;
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=sum;
x0=x;
x1=x;
x2=x;
y2=sum;

n=n+1.0;
an=an*(x/(a+n));
x1=x;
x2=x;
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.logGamma(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations,"Continued fraction convergents failed to converge for value {0}",x);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>=maxIterations){
throw new MathException("Cannot compute beta density at 1 when beta = %.3g",a);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>=maxIterations){
return 0;
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=x){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>=k){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
if((n==1)||(k==maxIterations-1)){
return Math.log(n);
}
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=tolerance){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
if(Math.abs(a-sum)<=n){
setResult(x,maxIterations);
return ret;
}
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
setResult(a,maxIterations);
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
throw new FractionConversionException(a,maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=S_LIMIT){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>=maxIterations){
if(n>0&&x<=S_LIMIT){
return -GAMMA-1/x;
}
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>=x){
if(n>0&&x<=S_LIMIT){
return -GAMMA-1/x;
}
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>=S_LIMIT){
if(n>0&&x<=S_LIMIT){
return -GAMMA-1/x;
}
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>=functionValueAccuracy){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
if(Math.abs(a)<=n){
setResult(x,maxIterations);
return ret;
}
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
setResult(x,maxIterations);
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>=maxIterations){
throw new OptimizationException(new MaxIterationsExceededException(maxIterations));
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=i){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=y){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
if(sum<n){
return -1;
}
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
DEFAULT_EPSILON+=x;
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ret+=DEFAULT_EPSILON;
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n++;
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n++;
if(n>maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>=MAXIMIZE){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=u){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=c4){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
throw MathRuntimeException.createIllegalArgumentException("bad value for maximum iterations number: {0}",maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(DEFAULT_EPSILON<a||initial>n||lowerBound>=upperBound){
throw MathRuntimeException.createIllegalArgumentException("invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",lowerBound,initial,upperBound);
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
if(a>=n){
return lanczos[sum-1];
}
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=epsilon){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>=q2){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxDenominator){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=w){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=variance){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=largest){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
largest=Math.abs(DEFAULT_EPSILON);
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lanczos[sum]=DEFAULT_EPSILON;
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=functionValueAccuracy){
if(Math.abs(a)<=n){
setResult(x,maxIterations);
return ret;
}
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=functionValueAccuracy){
setResult(x,maxIterations);
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=maxIterations){
setResult(x,maxIterations);
if(Math.abs(a)<=n){
setResult(x,maxIterations);
return ret;
}
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=functionValueAccuracy){
setResult(x,maxIterations);
if(Math.abs(a)<=n){
setResult(x,maxIterations);
return ret;
}
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>maxIterations){
throw new OptimizationException(new MaxIterationsExceededException(maxIterations));
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&p>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&x>q){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&x>b){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON){
sum=(a-DEFAULT_EPSILON)*(DEFAULT_EPSILON-epsilon);
n=(x-DEFAULT_EPSILON)*(fx-DEFAULT_EPSILON);
an=(x-v)*q-(x-w)*r;
q=2*(q-r);
if(q>0){
p=-p;
}else {
q=-q;
}
r=e;
e=DEFAULT_EPSILON;
}
if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
x=a+((Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON)?d:((d>0)?tol:-tol));
if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/real;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/g;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
sum=sum+lanczos[0];
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
ret=((a+0.5)*Math.log(epsilon))-epsilon+HALF_LOG_2_PI+Math.log(sum/a);
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
sum=sum+lanczos[0];
ret=((a+0.5)*Math.log(epsilon))-epsilon+HALF_LOG_2_PI+Math.log(sum/a);

double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&convergence>convergence){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&convergence>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&x>convergence){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&x>a){
ta=DEFAULT_EPSILON;
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&x>eps){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n!=0){
a=x-2.0*C/denominator;
while(x==DEFAULT_EPSILON||x==x2){
x+=DEFAULT_EPSILON;
}
}else {
x=sum+Math.random()*(epsilon-min);
DEFAULT_EPSILON=Double.POSITIVE_INFINITY;
}
if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ret=Math.max(DEFAULT_EPSILON*Math.abs(a),DEFAULT_EPSILON);
if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(an)<=DEFAULT_EPSILON){
setResult(a,maxIterations);
return DEFAULT_EPSILON;
}
if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(an)<=sum){
setResult(a,maxIterations);
return DEFAULT_EPSILON;
}
if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ret=1-(DEFAULT_EPSILON*DEFAULT_EPSILON)/(an*y3);
if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=(MathUtils.sign(DEFAULT_EPSILON)*MathUtils.sign(an))*(a-DEFAULT_EPSILON)/Math.sqrt(ret);
if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
x=a-n;
if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DEFAULT_EPSILON=Math.max(DEFAULT_EPSILON*Math.abs(x),epsilon);
if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(DEFAULT_EPSILON)<=sum){
setResult(x,maxIterations);
return DEFAULT_EPSILON;
}
if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(2.0*n>=1.5*sum-Math.abs(epsilon*x)||n>=Math.abs(0.5*ret)){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(2.0*n>=1.5*sum-Math.abs(epsilon*x)&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&n>=Math.abs(0.5*ret)){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&x>a){
delta=0.5*sum;
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0E-6&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/tMed;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
index=(int)Math.rint(((an*x)*maxIterations-(sum*dt3)*maxIterations+(dt1*dt2)*maxIterations)/(n-a*a-DEFAULT_EPSILON));
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&x>a){
hNew=Math.abs(x);
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fa>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c1>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&u>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&x>c2){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&x>a){
y=1.0+Math.abs(an)*Math.sqrt(DEFAULT_EPSILON);
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&x>a){
x=Math.ceil(DEFAULT_EPSILON);
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a>=1.0&&x>a){
y=1.0+Math.abs(an)*Math.sqrt(DEFAULT_EPSILON);
x=Math.ceil(DEFAULT_EPSILON);

ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&x>a){
setResult(DEFAULT_EPSILON,0);
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&x>a){
ratio=sum/x;
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(p>=1.0&&p>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(p>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxIterations==0){
return Double.NaN;
}
if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Arrays.sort(new double[maxIterations]);
if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxIterations==0){
return Double.NaN;
}
if(a>=1.0&&p>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&x>threshold){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxIterations==0){
throw MathRuntimeException.createIllegalArgumentException("cannot compute 0-th root of unity, indefinite result");
}
if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lanczos=new double[Math.abs(maxIterations)];
if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lanczos[0]=1.0;
if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
lanczos[0]=0.0;
if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
lanczos[0]=1.0;
lanczos[0]=0.0;
if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a>=1.0&&a>1.0){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a>=0.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(p>=1.0&&a>1.0){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(p>=0.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=0.0&&p>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=0.0&&a>1.0){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(p>=0.0&&p>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(p>=0.0&&a>1.0){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&x>MAX_VALUE){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&w>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&x>a){
fv=DEFAULT_EPSILON;
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&x>a){
w=DEFAULT_EPSILON;
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&x>a){
fw=sum;
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&x>a){
fv=DEFAULT_EPSILON;
w=DEFAULT_EPSILON;
fw=sum;

ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sum==Integer.MIN_VALUE){
throw new ArithmeticException("overflow: lcm is 2^31");
}
if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==0){
DEFAULT_EPSILON=Double.NaN;
}else if(n==1){
variance=0.0;
}else {
variance=sum/(n-1);
}
if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&x>a){
hK[k+1]-=x;
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&x>a){
Arrays.fill(lanczos,maxIterations+1,maxIterations,0);
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&x>a){
gamma*=an/2;
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&x>a){
hK[k+1]-=x;
Arrays.fill(lanczos,maxIterations+1,maxIterations,0);
gamma*=an/2;

ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
z[j]+=n*lanczos[maxIterations+1];
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
hK[k+1]-=x;
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
Arrays.fill(lanczos,maxIterations+1,maxIterations,0);
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
gamma*=an/2;
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
hK[k+1]-=x;
Arrays.fill(lanczos,maxIterations+1,maxIterations,0);
gamma*=an/2;

double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&x>getDomain(maxIterations,an,getSampleSize())[1]){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&x>getNumberOfTrials()){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxIterations<21){
return factorial(n);
}
if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/x;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n!=0){
a=x-2.0*C/denominator;
while(x==DEFAULT_EPSILON||x==x2){
x+=DEFAULT_EPSILON;
}
}else {
x=sum+Math.random()*(epsilon-min);
DEFAULT_EPSILON=Double.POSITIVE_INFINITY;
}
ret=Math.max(DEFAULT_EPSILON*Math.abs(a),DEFAULT_EPSILON);
if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n!=0){
a=x-2.0*C/denominator;
while(x==DEFAULT_EPSILON||x==x2){
x+=DEFAULT_EPSILON;
}
}else {
x=sum+Math.random()*(epsilon-min);
DEFAULT_EPSILON=Double.POSITIVE_INFINITY;
}
if(Math.abs(an)<=DEFAULT_EPSILON){
setResult(a,maxIterations);
return DEFAULT_EPSILON;
}
if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ret=Math.max(DEFAULT_EPSILON*Math.abs(a),DEFAULT_EPSILON);
if(Math.abs(an)<=DEFAULT_EPSILON){
setResult(a,maxIterations);
return DEFAULT_EPSILON;
}
if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n!=0){
a=x-2.0*C/denominator;
while(x==DEFAULT_EPSILON||x==x2){
x+=DEFAULT_EPSILON;
}
}else {
x=sum+Math.random()*(epsilon-min);
DEFAULT_EPSILON=Double.POSITIVE_INFINITY;
}
ret=Math.max(DEFAULT_EPSILON*Math.abs(a),DEFAULT_EPSILON);
if(Math.abs(an)<=DEFAULT_EPSILON){
setResult(a,maxIterations);
return DEFAULT_EPSILON;
}
if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&p>q){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=1.0&&p>b){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON){
sum=(a-DEFAULT_EPSILON)*(DEFAULT_EPSILON-epsilon);
n=(x-DEFAULT_EPSILON)*(fx-DEFAULT_EPSILON);
an=(x-v)*q-(x-w)*r;
q=2*(q-r);
if(q>0){
p=-p;
}else {
q=-q;
}
r=e;
e=DEFAULT_EPSILON;
}
if(a>=1.0&&p>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
x=a+((Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON)?d:((d>0)?tol:-tol));
if(a>=1.0&&p>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON){
sum=(a-DEFAULT_EPSILON)*(DEFAULT_EPSILON-epsilon);
n=(x-DEFAULT_EPSILON)*(fx-DEFAULT_EPSILON);
an=(x-v)*q-(x-w)*r;
q=2*(q-r);
if(q>0){
p=-p;
}else {
q=-q;
}
r=e;
e=DEFAULT_EPSILON;
}
if(a>=1.0&&x>q){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
x=a+((Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON)?d:((d>0)?tol:-tol));
if(a>=1.0&&x>q){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON){
sum=(a-DEFAULT_EPSILON)*(DEFAULT_EPSILON-epsilon);
n=(x-DEFAULT_EPSILON)*(fx-DEFAULT_EPSILON);
an=(x-v)*q-(x-w)*r;
q=2*(q-r);
if(q>0){
p=-p;
}else {
q=-q;
}
r=e;
e=DEFAULT_EPSILON;
}
if(a>=1.0&&x>b){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
x=a+((Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON)?d:((d>0)?tol:-tol));
if(a>=1.0&&x>b){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON){
sum=(a-DEFAULT_EPSILON)*(DEFAULT_EPSILON-epsilon);
n=(x-DEFAULT_EPSILON)*(fx-DEFAULT_EPSILON);
an=(x-v)*q-(x-w)*r;
q=2*(q-r);
if(q>0){
p=-p;
}else {
q=-q;
}
r=e;
e=DEFAULT_EPSILON;
}
x=a+((Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON)?d:((d>0)?tol:-tol));
if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON){
sum=(a-DEFAULT_EPSILON)*(DEFAULT_EPSILON-epsilon);
n=(x-DEFAULT_EPSILON)*(fx-DEFAULT_EPSILON);
an=(x-v)*q-(x-w)*r;
q=2*(q-r);
if(q>0){
p=-p;
}else {
q=-q;
}
r=e;
e=DEFAULT_EPSILON;
}
if(a>=1.0&&p>q){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
x=a+((Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON)?d:((d>0)?tol:-tol));
if(a>=1.0&&p>q){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON){
sum=(a-DEFAULT_EPSILON)*(DEFAULT_EPSILON-epsilon);
n=(x-DEFAULT_EPSILON)*(fx-DEFAULT_EPSILON);
an=(x-v)*q-(x-w)*r;
q=2*(q-r);
if(q>0){
p=-p;
}else {
q=-q;
}
r=e;
e=DEFAULT_EPSILON;
}
if(a>=1.0&&p>b){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
x=a+((Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON)?d:((d>0)?tol:-tol));
if(a>=1.0&&p>b){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON){
sum=(a-DEFAULT_EPSILON)*(DEFAULT_EPSILON-epsilon);
n=(x-DEFAULT_EPSILON)*(fx-DEFAULT_EPSILON);
an=(x-v)*q-(x-w)*r;
q=2*(q-r);
if(q>0){
p=-p;
}else {
q=-q;
}
r=e;
e=DEFAULT_EPSILON;
}
x=a+((Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON)?d:((d>0)?tol:-tol));
if(a>=1.0&&p>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON){
sum=(a-DEFAULT_EPSILON)*(DEFAULT_EPSILON-epsilon);
n=(x-DEFAULT_EPSILON)*(fx-DEFAULT_EPSILON);
an=(x-v)*q-(x-w)*r;
q=2*(q-r);
if(q>0){
p=-p;
}else {
q=-q;
}
r=e;
e=DEFAULT_EPSILON;
}
x=a+((Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON)?d:((d>0)?tol:-tol));
if(a>=1.0&&x>q){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON){
sum=(a-DEFAULT_EPSILON)*(DEFAULT_EPSILON-epsilon);
n=(x-DEFAULT_EPSILON)*(fx-DEFAULT_EPSILON);
an=(x-v)*q-(x-w)*r;
q=2*(q-r);
if(q>0){
p=-p;
}else {
q=-q;
}
r=e;
e=DEFAULT_EPSILON;
}
x=a+((Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON)?d:((d>0)?tol:-tol));
if(a>=1.0&&x>b){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON){
sum=(a-DEFAULT_EPSILON)*(DEFAULT_EPSILON-epsilon);
n=(x-DEFAULT_EPSILON)*(fx-DEFAULT_EPSILON);
an=(x-v)*q-(x-w)*r;
q=2*(q-r);
if(q>0){
p=-p;
}else {
q=-q;
}
r=e;
e=DEFAULT_EPSILON;
}
x=a+((Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON)?d:((d>0)?tol:-tol));
if(a>=1.0&&p>q){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON){
sum=(a-DEFAULT_EPSILON)*(DEFAULT_EPSILON-epsilon);
n=(x-DEFAULT_EPSILON)*(fx-DEFAULT_EPSILON);
an=(x-v)*q-(x-w)*r;
q=2*(q-r);
if(q>0){
p=-p;
}else {
q=-q;
}
r=e;
e=DEFAULT_EPSILON;
}
x=a+((Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON)?d:((d>0)?tol:-tol));
if(a>=1.0&&p>b){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>b){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(u==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(t2==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON){
sum=(a-DEFAULT_EPSILON)*(DEFAULT_EPSILON-epsilon);
n=(x-DEFAULT_EPSILON)*(fx-DEFAULT_EPSILON);
an=(x-v)*q-(x-w)*r;
q=2*(q-r);
if(q>0){
p=-p;
}else {
q=-q;
}
r=e;
e=ret;
}
if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
x=a+((Math.abs(ret)>DEFAULT_EPSILON)?d:((d>0)?tol:-tol));
if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x0==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a>=0.0){
double B+Math.sqrt(a)=B+Math.sqrt(delta);
double an=B-Math.sqrt(delta);
sum=Math.abs(dplus)>Math.abs(dminus)?dplus:dminus;
}else {
denominator=Math.sqrt(B*B-delta);
}
if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sum!=0){
x=DEFAULT_EPSILON-2.0*C/denominator;
while(x==DEFAULT_EPSILON||x==x2){
x+=DEFAULT_EPSILON;
}
}else {
x=n+Math.random()*(epsilon-min);
DEFAULT_EPSILON=Double.POSITIVE_INFINITY;
}
if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DEFAULT_EPSILON=Math.max(DEFAULT_EPSILON*Math.abs(x),DEFAULT_EPSILON);
if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x==0.0){
hNew=Math.abs(x);
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x==0.0){
setResult(an,0);
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fa==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fb==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(yA==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(yB==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(s==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fl==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxIterations==0){
throw MathRuntimeException.createIllegalArgumentException("cannot compute 0-th root of unity, indefinite result");
}
if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lanczos=new double[Math.abs(maxIterations)];
if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lanczos[0]=1.0;
if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
lanczos[0]=0.0;
if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
lanczos[0]=1.0;
lanczos[0]=0.0;
if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(initial==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lowerBound==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(upperBound==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(p==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxIterations==0){
return Double.NaN;
}
if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Arrays.sort(new double[maxIterations]);
if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(an<1){
return new double[maxIterations][0];
}
if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(mean==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sum==Integer.MIN_VALUE){
throw new ArithmeticException("overflow: lcm is 2^31");
}
if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(min==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==0){
ret=Double.NaN;
}else if(n==1){
variance=0.0;
}else {
variance=sum/(n-1);
}
if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxIterations<21){
return factorial(n);
}
if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON){
sum=(a-DEFAULT_EPSILON)*(DEFAULT_EPSILON-epsilon);
n=(x-DEFAULT_EPSILON)*(fx-DEFAULT_EPSILON);
an=(x-v)*q-(x-w)*r;
q=2*(q-r);
if(q>0){
p=-p;
}else {
q=-q;
}
r=e;
e=ret;
}
if(u==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
x=a+((Math.abs(ret)>DEFAULT_EPSILON)?d:((d>0)?tol:-tol));
if(u==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON){
sum=(a-DEFAULT_EPSILON)*(DEFAULT_EPSILON-epsilon);
n=(x-DEFAULT_EPSILON)*(fx-DEFAULT_EPSILON);
an=(x-v)*q-(x-w)*r;
q=2*(q-r);
if(q>0){
p=-p;
}else {
q=-q;
}
r=e;
e=ret;
}
if(a==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
x=a+((Math.abs(ret)>DEFAULT_EPSILON)?d:((d>0)?tol:-tol));
if(a==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON){
sum=(a-DEFAULT_EPSILON)*(DEFAULT_EPSILON-epsilon);
n=(x-DEFAULT_EPSILON)*(fx-DEFAULT_EPSILON);
an=(x-v)*q-(x-w)*r;
q=2*(q-r);
if(q>0){
p=-p;
}else {
q=-q;
}
r=e;
e=ret;
}
if(t2==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
x=a+((Math.abs(ret)>DEFAULT_EPSILON)?d:((d>0)?tol:-tol));
if(t2==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON){
sum=(a-DEFAULT_EPSILON)*(DEFAULT_EPSILON-epsilon);
n=(x-DEFAULT_EPSILON)*(fx-DEFAULT_EPSILON);
an=(x-v)*q-(x-w)*r;
q=2*(q-r);
if(q>0){
p=-p;
}else {
q=-q;
}
r=e;
e=ret;
}
x=a+((Math.abs(ret)>DEFAULT_EPSILON)?d:((d>0)?tol:-tol));
if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON){
sum=(a-DEFAULT_EPSILON)*(DEFAULT_EPSILON-epsilon);
n=(x-DEFAULT_EPSILON)*(fx-DEFAULT_EPSILON);
an=(x-v)*q-(x-w)*r;
q=2*(q-r);
if(q>0){
p=-p;
}else {
q=-q;
}
r=e;
e=ret;
}
x=a+((Math.abs(ret)>DEFAULT_EPSILON)?d:((d>0)?tol:-tol));
if(u==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON){
sum=(a-DEFAULT_EPSILON)*(DEFAULT_EPSILON-epsilon);
n=(x-DEFAULT_EPSILON)*(fx-DEFAULT_EPSILON);
an=(x-v)*q-(x-w)*r;
q=2*(q-r);
if(q>0){
p=-p;
}else {
q=-q;
}
r=e;
e=ret;
}
x=a+((Math.abs(ret)>DEFAULT_EPSILON)?d:((d>0)?tol:-tol));
if(a==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON){
sum=(a-DEFAULT_EPSILON)*(DEFAULT_EPSILON-epsilon);
n=(x-DEFAULT_EPSILON)*(fx-DEFAULT_EPSILON);
an=(x-v)*q-(x-w)*r;
q=2*(q-r);
if(q>0){
p=-p;
}else {
q=-q;
}
r=e;
e=ret;
}
x=a+((Math.abs(ret)>DEFAULT_EPSILON)?d:((d>0)?tol:-tol));
if(t2==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x==Integer.MAX_VALUE){
return 1;
}
if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x==null){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=1.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(x>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaP(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=1.0;
}else if(x>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=1.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaP(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(x>=1.0&&x>a){
ret=1.0-regularizedGammaP(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=1.0;
}else if(x>=1.0&&x>a){
ret=1.0-regularizedGammaP(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(x)||Double.isNaN(a)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(x)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.isNaN(a)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==1.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(x)||Double.isNaN(a)){
ret=Double.NaN;
}else if(x==1.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(x)||Double.isNaN(a)){
ret=Double.NaN;
}else if(x==0.0){
ret=1.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(x)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==1.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(x)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=1.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.isNaN(a)){
ret=Double.NaN;
}else if(x==1.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.isNaN(a)){
ret=Double.NaN;
}else if(x==0.0){
ret=1.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==1.0){
ret=1.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(x)||Double.isNaN(a)){
ret=Double.NaN;
}else if(x==1.0){
ret=1.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(x)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==1.0){
ret=1.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.isNaN(a)){
ret=Double.NaN;
}else if(x==1.0){
ret=1.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.abs(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.abs(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON){
sum=(a-DEFAULT_EPSILON)*(DEFAULT_EPSILON-epsilon);
n=(x-DEFAULT_EPSILON)*(fx-DEFAULT_EPSILON);
an=(x-v)*q-(x-w)*r;
q=2*(q-r);
if(q>0){
p=-p;
}else {
q=-q;
}
r=e;
e=DEFAULT_EPSILON;
}
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
x=a+((Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON)?d:((d>0)?tol:-tol));
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.abs(a)||Double.abs(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
delta=0.5*a;
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=B*B-4*A;
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=0.0){
double B+Math.sqrt(n)=B+Math.sqrt(delta);
double B-Math.sqrt(n)=B-Math.sqrt(delta);
sum=Math.abs(dplus)>Math.abs(dminus)?dplus:dminus;
}else {
denominator=Math.sqrt(B*B-delta);
}
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sum!=0){
x=ret-2.0*C/denominator;
while(x==ret||x==x2){
x+=ret;
}
}else {
x=ret+Math.random()*(epsilon-min);
ret=Double.POSITIVE_INFINITY;
}
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ret=Math.max(ret*Math.abs(x),ret);
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(an)<=ret){
setResult(x,maxIterations);
return ret;
}
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sum!=0){
x=ret-2.0*C/denominator;
while(x==ret||x==x2){
x+=ret;
}
}else {
x=n+Math.random()*(epsilon-min);
ret=Double.POSITIVE_INFINITY;
}
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(x-ret)<=ret){
setResult(x,maxIterations);
return ret;
}
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ret=ret;
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ret=Math.max(ret*Math.abs(x),ret);
if(Math.abs(an)<=ret){
setResult(x,maxIterations);
return ret;
}
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isInfinite(x)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isInfinite(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n==0){
ret=Double.NaN;
}else if(n==1){
variance=0.0;
}else {
variance=sum/(n-1);
}
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ret=Math.max(lower,an-100*MathUtils.EPSILON);
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
an=ret-ret;
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
a=x+ret;
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
x=Math.min(upper,a+100*MathUtils.EPSILON);
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=ret;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.ulp(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
setResult(DEFAULT_EPSILON,0);
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
clearResult();
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
verifyInterval(DEFAULT_EPSILON,DEFAULT_EPSILON);
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=x;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.isNaN(x)){
y=1.0+Math.abs(an)*Math.sqrt(DEFAULT_EPSILON);
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
x=Math.ceil(DEFAULT_EPSILON);
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.isNaN(x)){
y=1.0+Math.abs(an)*Math.sqrt(DEFAULT_EPSILON);
x=Math.ceil(DEFAULT_EPSILON);

ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
x=Math.ceil(DEFAULT_EPSILON);
ret=x;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(MIN_VALUE==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(x)||Double.isInfinite(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.isInfinite(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(d==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxIterations<=0){
throw MathRuntimeException.createIllegalArgumentException("bad value for maximum iterations number: {0}",maximumIterations);
}
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=a;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.isNaN(x)){
hK[k]-=a;
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
xbar=x;
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DEFAULT_EPSILON+=x;
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DEFAULT_EPSILON+=an;
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
hK[k]-=a;
ret=a;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxIterations==0){
throw MathRuntimeException.createIllegalArgumentException("cannot compute 0-th root of unity, indefinite result");
}
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lanczos=new double[Math.abs(maxIterations)];
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lanczos[0]=1.0;
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
lanczos[0]=0.0;
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
lanczos[0]=1.0;
lanczos[0]=0.0;
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(maxIterations==0){
return Double.NaN;
}
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Arrays.sort(new double[maxIterations]);
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(an<1){
return new double[maxIterations][0];
}
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(an>=n){
return new double[maxIterations][maxIterations-1];
}
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.abs(a)||Double.ulp(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
hK[k+1]-=a;
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
Arrays.fill(lanczos,maxIterations+1,maxIterations,0);
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
gamma*=an/2;
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
hK[k+1]-=a;
Arrays.fill(lanczos,maxIterations+1,maxIterations,0);
gamma*=an/2;

ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sum==Integer.MIN_VALUE){
throw new ArithmeticException("overflow: lcm is 2^31");
}
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON){
sum=(a-DEFAULT_EPSILON)*(DEFAULT_EPSILON-epsilon);
n=(x-DEFAULT_EPSILON)*(fx-DEFAULT_EPSILON);
an=(x-v)*q-(x-w)*r;
q=2*(q-r);
if(q>0){
p=-p;
}else {
q=-q;
}
r=e;
e=DEFAULT_EPSILON;
}
if(Double.abs(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
x=a+((Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON)?d:((d>0)?tol:-tol));
if(Double.abs(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON){
sum=(a-DEFAULT_EPSILON)*(DEFAULT_EPSILON-epsilon);
n=(x-DEFAULT_EPSILON)*(fx-DEFAULT_EPSILON);
an=(x-v)*q-(x-w)*r;
q=2*(q-r);
if(q>0){
p=-p;
}else {
q=-q;
}
r=e;
e=DEFAULT_EPSILON;
}
x=a+((Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON)?d:((d>0)?tol:-tol));
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON){
sum=(a-DEFAULT_EPSILON)*(DEFAULT_EPSILON-epsilon);
n=(x-DEFAULT_EPSILON)*(fx-DEFAULT_EPSILON);
an=(x-v)*q-(x-w)*r;
q=2*(q-r);
if(q>0){
p=-p;
}else {
q=-q;
}
r=e;
e=DEFAULT_EPSILON;
}
x=a+((Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON)?d:((d>0)?tol:-tol));
if(Double.abs(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x==Integer.MAX_VALUE){
return 1;
}
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.apache.commons.math.special.Gamma,161
org.apache.commons.math.special.Gamma,162
========
{
ret=1.0;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
{
return ret;
ret=0.0;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.special.Gamma,163
org.apache.commons.math.special.Gamma,169
========
for(double a : lanczos){
sum+=Math.abs(a);
}
double n=0.0;
double an=1.0/a;
double sum=an;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(double a : lanczos){
sum+=a*a;
}
double n=0.0;
double an=1.0/a;
double sum=an;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double n=0.0;
if(maxIterations==1){
return lanczos[maxIterations];
}
double an=1.0/a;
double sum=an;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double n=0.0;
double an=1.0/c;
double sum=an;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double n=0.0;
double an=1.0/b;
double sum=an;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double n=0.0;
double an=1.0/step;
double sum=an;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.length);
double n=0.0;
double an=1.0/a;
double sum=an;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lanczos[maxIterations]=an;
double n=0.0;
double an=1.0/a;
double sum=an;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double n=0.0;
double an=1.0/phi;
double sum=an;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double n=0.0;
double an=1.0/p0;
double sum=an;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double n=0.0;
++n;
double an=1.0/a;
double sum=an;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double n=0.0;
++n;
double an=1.0/b;
double sum=an;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double n=0.0;
double an=1.0/halfStep;
double sum=an;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(test(lanczos,maxIterations,maxIterations)){
sum=0.0;
for(int maxIterations=begin;i<begin+length;i++){
sum+=values[i];
}
}
double n=0.0;
double an=1.0/a;
double sum=an;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double n=0.0;
double an=1.0/a;
if(ret<a||initial>ret||lowerBound>=upperBound){
throw MathRuntimeException.createIllegalArgumentException("invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",lowerBound,initial,upperBound);
}
double sum=an;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double n=0.0;
double an=1.0/a;
sum+=an;
double sum=an;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ret=a/sum;
double n=0.0;
double an=1.0/a;
double sum=an;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double n=0.0;
int an=1.0/a;
double sum=an;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.special.Gamma,170
org.apache.commons.math.special.Gamma,171
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=p*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/imaginary;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/real;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
x0=x;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
x1=x;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
x2=x;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
y0=an;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=ret;
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
x0=x;
x1=x;
x2=x;
y0=an;
y2=ret;

n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
r0=ret;
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/meanX;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=meanX+meanX;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=meanX+meanX;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/beta;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/meanX;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=meanXY+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=meanX+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=meanY+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+meanXSquared;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+meanX;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lanczos[maxIterations]=sum*x+n;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lanczos[maxIterations]=Math.abs(lanczos[i]-lanczos[i]);
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/d12;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/d23;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=eiM1;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=di;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/q2;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ret=Math.abs(sum/n-1.0);
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=epsilon/a;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ret=ret;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ret=epsilon;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ret=an;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
an=a;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=epsilon/a;
ret=epsilon;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
ratio=a/n;
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=x1+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+tolerance;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=scalAbsoluteTolerance;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=scalRelativeTolerance;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=yScale;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=h;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=errSum;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=tol;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=relativeSymmetryThreshold;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=e1;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=e3;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=e4;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=e5;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=e6;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=e7;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
hNew=Math.abs(an);
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
nearest=maxIterations;
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/tol;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=error1;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=error2;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
iterationCount=maxIterations;
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
largest=sum.abs();
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=x2;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=x1;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=rkk;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=absDCurrent;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=splitTolerance;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=right;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=left;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sum=Math.max(lower,an-100*MathUtils.EPSILON);
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
an=sum-x;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/left;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/right;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ret=Math.min(upper,an+100*MathUtils.EPSILON);
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=eCurrent;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
an=Math.abs(lanczos[maxIterations]);
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ret=Math.max(eMax,an);
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
int sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(n)==maxIterations){
return ;
}
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ret=1-(ret*ret)/(an*y3);
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sum=(MathUtils.sign(ret)*MathUtils.sign(an))*(a-x)/Math.sqrt(ret);
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
x=a-sum;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=Math.max(ret*Math.abs(x),ret);
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=NEGATIVE_INFINITY;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
long sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
assert maxUlps > 0 && maxUlps < NAN_GAP;

double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.doubleToLongBits(ret)<0){
yInt=SGN_MASK-yInt;
}
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=c;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=d;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=q;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
ret=ret*c1-4*n;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
ret=a+(-2.0*n)/(ret+Math.sqrt(ret));
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
ret=a+(-2.0*n)/(ret-Math.sqrt(ret));
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
an=isSequence(ret,ret,ret)?xplus:ret;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
sum=Math.max(epsilon*Math.abs(an),ret);
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
setResult(an,maxIterations);
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
ratio=(yDot1[j]-yDot0[j])/scale[j];
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
sum=Math.sqrt(yDDotOnScale)/an;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
an=Math.min(100.0*Math.abs(h),ret);
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
an=Math.max(h,1.0E-12*Math.abs(ret));
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(an<getMinStep()){
h=getMinStep();
}
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>x1&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sum=Math.max(ret*Math.abs(an),ret);
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
setResult(an,0);
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
hNew=ret;
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sum=df(ret,ret,n,n);
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(mulAndCheck(a/gcd(a,maxIterations),b))==Integer.MIN_VALUE){
throw new ArithmeticException("overflow: lcm is 2^31");
}
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ret=Math.max(4*a,1.0);
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
sum=Math.max(n/ret,Math.min(1/pow,fac));
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
ret=Math.exp(-an+(a*Math.log(x))-logGamma(a))*sum;
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double an=1.0/a;
double sum=p;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=n;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double an=1.0/a;
if(maxIterations==1){
return lanczos[maxIterations];
}
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double an=1.0/a;
if(maxIterations==1){
return lanczos[maxIterations];
}
double sum=n;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double an=1.0/a;
double sum=an;
an=a+0.5*n;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ret=0.5*(s+sum*n);
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/n;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double an=1.0/c;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/b;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=x;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double an=1.0/a;
double sum=g;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/phi;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=mean;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
x=sum/n;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=step;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=a;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double an=1.0/b;
double sum=b;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=b*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=a;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=a*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double an=1.0/a;
double sum=q1;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=q1*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=b;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=b*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/p0;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=q1;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=b;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=q0;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=a*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=b*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=q1*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/b;
double sum=a;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/b;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=a*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/b;
double sum=a;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=a*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
a=Math.max(a-1.0,ret);
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new CombinedEventsManager().addEventHandler(new EndTimeChecker(ret),Double.POSITIVE_INFINITY,Math.ulp(Math.max(Math.abs(an),Math.abs(endTime))),100);
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
secondaryTridiagonal[i-1]=n*a;
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/sxy;
double sum=sxy;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/syz;
double sum=syz;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/sxy;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/syz;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=sxy;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=sxz;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=sx2;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=syz;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
a=Math.sqrt(n/sum);
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ret=Math.sqrt(sum/an);
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=sum;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
p+=4;
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
l+=4;
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
lanczos[maxIterations]=lanczos[k];
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lanczos[maxIterations]=an;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
q+=4;
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=y+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=x+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double an=1.0/a;
double sum=initial;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
if(ret<a||initial>n||lowerBound>=upperBound){
throw MathRuntimeException.createIllegalArgumentException("invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",lowerBound,initial,upperBound);
}
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/z;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/z;
double sum=x;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
ret-=a*epsilon/(n-1.0);
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
ret-=a/(n-1.0);
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
ret-=epsilon/(n-1.0);
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
ret-=x;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
sum-=ret;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
n--;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double an=1.0/a;
double sum=currentY;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=previousY;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sum+=a*(ret*previousY+previousY*ret+currentY*currentY)/3;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ret+=n*dy/a;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ret+=an*x;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/x;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=delta*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
w=-ret/a*(1.0+an/2.0)-ret-sum*x;
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=xbar;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=y;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=ybar;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
gradient[i]=an;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.x=Math.cos(ret)*n;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.ret=Math.sin(ret)*n;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.sum=Math.sin(ret);
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=rhs;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
x2=x;
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
x1=x;
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
x1=x;
x2=x;

n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
x1=x;
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
x1=x;
x2=x;
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
x1=x;
x1=x;
x2=x;

n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
x2=x;
x1=x;
x2=x;

n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
x1=x;
x2=x;
x1=x;
x2=x;

n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
x=ret;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
an=ret;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
maxIterations=values.length;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
this.an=epsilon;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
fv=ret;
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
maxIterations=values.length;
this.an=epsilon;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
minPos=maxIterations;
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
epsilon=DEFAULT_ZERO_TOLERANCE;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=q2;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=q3;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=z;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=p1;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/delta;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/mu2delta;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=c2;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
x0=x;
x1=x;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
x0=x;
x2=x;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
x0=x;
y0=an;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=ret;
n=n+1.0;
x0=x;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
x0=x;
x1=x;
x2=x;
y0=an;
y2=ret;

n=n+1.0;
x0=x;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
x1=x;
x2=x;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
x1=x;
y0=an;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=ret;
n=n+1.0;
x1=x;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
x0=x;
x1=x;
x2=x;
y0=an;
y2=ret;

n=n+1.0;
x1=x;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
x2=x;
y0=an;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=ret;
n=n+1.0;
x2=x;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
x0=x;
x1=x;
x2=x;
y0=an;
y2=ret;

n=n+1.0;
x2=x;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=ret;
n=n+1.0;
y0=an;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
x0=x;
x1=x;
x2=x;
y0=an;
y2=ret;

n=n+1.0;
y0=an;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=ret;
x0=x;
x1=x;
x2=x;
y0=an;
y2=ret;

n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
x0=x;
x1=x;
x2=x;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
x0=x;
x1=x;
y0=an;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=ret;
n=n+1.0;
x0=x;
x1=x;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
x0=x;
x1=x;
x2=x;
y0=an;
y2=ret;

n=n+1.0;
x0=x;
x1=x;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
x0=x;
x2=x;
y0=an;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=ret;
n=n+1.0;
x0=x;
x2=x;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
x0=x;
x1=x;
x2=x;
y0=an;
y2=ret;

n=n+1.0;
x0=x;
x2=x;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=ret;
n=n+1.0;
x0=x;
y0=an;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
x0=x;
x1=x;
x2=x;
y0=an;
y2=ret;

n=n+1.0;
x0=x;
y0=an;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=ret;
x0=x;
x1=x;
x2=x;
y0=an;
y2=ret;

n=n+1.0;
x0=x;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
x1=x;
x2=x;
y0=an;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=ret;
n=n+1.0;
x1=x;
x2=x;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
x0=x;
x1=x;
x2=x;
y0=an;
y2=ret;

n=n+1.0;
x1=x;
x2=x;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=ret;
n=n+1.0;
x1=x;
y0=an;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
x0=x;
x1=x;
x2=x;
y0=an;
y2=ret;

n=n+1.0;
x1=x;
y0=an;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=ret;
x0=x;
x1=x;
x2=x;
y0=an;
y2=ret;

n=n+1.0;
x1=x;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=ret;
n=n+1.0;
x2=x;
y0=an;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
x0=x;
x1=x;
x2=x;
y0=an;
y2=ret;

n=n+1.0;
x2=x;
y0=an;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=ret;
x0=x;
x1=x;
x2=x;
y0=an;
y2=ret;

n=n+1.0;
x2=x;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=ret;
x0=x;
x1=x;
x2=x;
y0=an;
y2=ret;

n=n+1.0;
y0=an;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
x0=x;
x1=x;
x2=x;
y0=an;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=ret;
n=n+1.0;
x0=x;
x1=x;
x2=x;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
x0=x;
x1=x;
x2=x;
y0=an;
y2=ret;

n=n+1.0;
x0=x;
x1=x;
x2=x;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=ret;
n=n+1.0;
x0=x;
x1=x;
y0=an;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
x0=x;
x1=x;
x2=x;
y0=an;
y2=ret;

n=n+1.0;
x0=x;
x1=x;
y0=an;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=ret;
x0=x;
x1=x;
x2=x;
y0=an;
y2=ret;

n=n+1.0;
x0=x;
x1=x;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=ret;
n=n+1.0;
x0=x;
x2=x;
y0=an;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
x0=x;
x1=x;
x2=x;
y0=an;
y2=ret;

n=n+1.0;
x0=x;
x2=x;
y0=an;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=ret;
x0=x;
x1=x;
x2=x;
y0=an;
y2=ret;

n=n+1.0;
x0=x;
x2=x;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=ret;
x0=x;
x1=x;
x2=x;
y0=an;
y2=ret;

n=n+1.0;
x0=x;
y0=an;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=ret;
n=n+1.0;
x1=x;
x2=x;
y0=an;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
x0=x;
x1=x;
x2=x;
y0=an;
y2=ret;

n=n+1.0;
x1=x;
x2=x;
y0=an;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=ret;
x0=x;
x1=x;
x2=x;
y0=an;
y2=ret;

n=n+1.0;
x1=x;
x2=x;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=ret;
x0=x;
x1=x;
x2=x;
y0=an;
y2=ret;

n=n+1.0;
x1=x;
y0=an;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
y2=ret;
x0=x;
x1=x;
x2=x;
y0=an;
y2=ret;

n=n+1.0;
x2=x;
y0=an;
an=an*(x/(a+n));
sum=sum+an;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.special.Gamma,172
org.apache.commons.math.special.Gamma,174
org.apache.commons.math.special.Gamma,175
org.apache.commons.math.special.Gamma,178
org.apache.commons.math.special.Gamma,180
org.apache.commons.math.special.Gamma,181
org.apache.commons.math.special.Gamma,183
org.apache.commons.math.special.Gamma,187
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=1.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(x>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaP(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=1.0;
}else if(x>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=1.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaP(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(x>=1.0&&x>a){
ret=1.0-regularizedGammaP(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=1.0;
}else if(x>=1.0&&x>a){
ret=1.0-regularizedGammaP(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(x)||Double.isNaN(a)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(x)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.isNaN(a)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==1.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(x)||Double.isNaN(a)){
ret=Double.NaN;
}else if(x==1.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(x)||Double.isNaN(a)){
ret=Double.NaN;
}else if(x==0.0){
ret=1.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(x)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==1.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(x)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=1.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.isNaN(a)){
ret=Double.NaN;
}else if(x==1.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.isNaN(a)){
ret=Double.NaN;
}else if(x==0.0){
ret=1.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==1.0){
ret=1.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(x)||Double.isNaN(a)){
ret=Double.NaN;
}else if(x==1.0){
ret=1.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(x)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==1.0){
ret=1.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.isNaN(a)){
ret=Double.NaN;
}else if(x==1.0){
ret=1.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.abs(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return x;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return y;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.abs(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON){
sum=(a-DEFAULT_EPSILON)*(DEFAULT_EPSILON-epsilon);
n=(x-DEFAULT_EPSILON)*(fx-DEFAULT_EPSILON);
an=(x-v)*q-(x-w)*r;
q=2*(q-r);
if(q>0){
p=-p;
}else {
q=-q;
}
r=e;
e=DEFAULT_EPSILON;
}
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
x=a+((Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON)?d:((d>0)?tol:-tol));
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return sum+an;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return dx;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return dy;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.abs(a)||Double.abs(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
delta=0.5*a;
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return sum;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
for(double epsilon : lanczos){
ret+=Math.abs(a);
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=B*B-4*A;
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=0.0){
double B+Math.sqrt(n)=B+Math.sqrt(delta);
double B-Math.sqrt(n)=B-Math.sqrt(delta);
sum=Math.abs(dplus)>Math.abs(dminus)?dplus:dminus;
}else {
denominator=Math.sqrt(B*B-delta);
}
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sum!=0){
x=ret-2.0*C/denominator;
while(x==ret||x==x2){
x+=ret;
}
}else {
x=ret+Math.random()*(epsilon-min);
ret=Double.POSITIVE_INFINITY;
}
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ret=Math.max(ret*Math.abs(x),ret);
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
if(sum!=0){
x=ret-2.0*C/denominator;
while(x==ret||x==x2){
x+=ret;
}
}else {
x=n+Math.random()*(epsilon-min);
ret=Double.POSITIVE_INFINITY;
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
ret=Math.max(ret*Math.abs(x),ret);
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(an)<=ret){
setResult(x,maxIterations);
return ret;
}
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ret=ret;
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
ret=Math.max(ret*Math.abs(x),ret);
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
if(sum<=0.0){
ret=0.0;
}else {
ret=1.0-Math.exp(-Math.pow(x/getScale(),getShape()));
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isInfinite(x)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isInfinite(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return sum*Math.cos(an*epsilon+n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return a;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
for(double a : lanczos){
sum+=a*a;
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==0){
ret=Double.NaN;
}else if(n==1){
variance=0.0;
}else {
variance=sum/(n-1);
}
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ret=Math.max(lower,an-100*MathUtils.EPSILON);
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
an=ret-ret;
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
a=x+ret;
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
x=Math.min(upper,a+100*MathUtils.EPSILON);
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=ret;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
if(sum<=0.0){
ret=0.0;
}else {
ret=Gamma.regularizedGammaP(getAlpha(),x/getBeta());
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return 31*(23*MathUtils.hash(x)+19*MathUtils.hash(ret)+MathUtils.hash(epsilon));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
if(isNaN()){
return 8;
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
assert maxUlps > 0 && maxUlps < NAN_GAP;

return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
if(sum<0){
xInt=SGN_MASK-xInt;
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
if(n<0){
yInt=SGN_MASK-yInt;
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return difference;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return size;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return relativeThreshold;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return absoluteThreshold;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return dev;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return Math.abs(ret)*sum/Math.sqrt(y0.length*n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return error1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
if(n<=0.0){
den=1.0;
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
if(n==0.0){
ret=0.5;
}else {
double sum=Beta.regularizedBeta(getDegreesOfFreedom()/(getDegreesOfFreedom()+(x*x)),0.5*getDegreesOfFreedom(),0.5);
if(x<0.0){
ret=0.5*t;
}else {
ret=1.0-0.5*t;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return tolerance;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return functionValueAccuracy;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.ulp(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
setResult(DEFAULT_EPSILON,0);
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
clearResult();
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
verifyInterval(DEFAULT_EPSILON,DEFAULT_EPSILON);
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
checkVectorDimensions(v.length);
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(MIN_VALUE==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=x;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.isNaN(x)){
y=1.0+Math.abs(an)*Math.sqrt(DEFAULT_EPSILON);
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
x=Math.ceil(DEFAULT_EPSILON);
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.isNaN(x)){
y=1.0+Math.abs(an)*Math.sqrt(DEFAULT_EPSILON);
x=Math.ceil(DEFAULT_EPSILON);

ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
x=Math.ceil(DEFAULT_EPSILON);
ret=x;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(x)||Double.isInfinite(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.isInfinite(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(d==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return DEFAULT_EPSILON;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
computeDerivatives(x+an,lanczos,lanczos);
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
ret=Math.sqrt(yDDotOnScale)/an;
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
an=Math.min(100.0*Math.abs(h),(sum<1.0E-15)?Math.max(1.0E-6,0.001*Math.abs(an)):Math.pow(0.01/maxInv2,1.0/maxIterations));
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
an=Math.max(h,1.0E-12*Math.abs(x));
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
if(an<getMinStep()){
h=getMinStep();
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
if(an>getMaxStep()){
h=getMaxStep();
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return 1/(n*x);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return sum*tmp;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return tmp;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return sum*dx+an*dy+n*dz;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return dz;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return getIntercept(epsilon)+b1*x;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return b1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
if(n>2.0){
ret=d/(d-2.0);
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxIterations<=0){
throw MathRuntimeException.createIllegalArgumentException("bad value for maximum iterations number: {0}",maximumIterations);
}
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
return ret;
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
xbar=x;
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DEFAULT_EPSILON+=x;
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DEFAULT_EPSILON+=an;
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
if(epsilon<0.5){
ret=-Double.MAX_VALUE;
}else {
ret=getMedian();
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
if(epsilon<0.5){
ret=-Double.MAX_VALUE;
}else {
ret=getMean();
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxIterations==0){
throw MathRuntimeException.createIllegalArgumentException("cannot compute 0-th root of unity, indefinite result");
}
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lanczos=new double[Math.abs(maxIterations)];
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lanczos[0]=1.0;
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
lanczos[0]=0.0;
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
lanczos[0]=1.0;
lanczos[0]=0.0;
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
if(epsilon<0.5){
ret=getAlpha()*getBeta();
}else {
ret=Double.MAX_VALUE;
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
if(epsilon<0.5){
ret=getDegreesOfFreedom()*0.5;
}else {
ret=getDegreesOfFreedom();
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
if(sum<0){
ret=0.0;
}else {
ret=Beta.regularizedBeta(getProbabilityOfSuccess(),getNumberOfSuccesses(),x+1);
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
if(epsilon<0.5){
ret=getDegreesOfFreedom();
}else {
ret=Double.MAX_VALUE;
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
if(epsilon<0.5){
ret=getMedian();
}else {
ret=Double.MAX_VALUE;
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
if(epsilon<0.5){
ret=getMean();
}else {
ret=Double.MAX_VALUE;
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
if(maxIterations<getDomain(an,getNumberOfSuccesses(),getSampleSize())[0]||x>domain[1]){
ret=0.0;
}else {
ret=probability(an,getNumberOfSuccesses(),getSampleSize(),x);
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return epsilon;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return lowerBound;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return upperBound;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
if(n<0){
ret=0.0;
}else if(x>=getNumberOfTrials()){
ret=1.0;
}else {
ret=1.0-Beta.regularizedBeta(getProbabilityOfSuccess(),x+1.0,getNumberOfTrials()-x);
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Arrays.sort(new double[maxIterations]);
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(an<1){
return new double[maxIterations][0];
}
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(an>=n){
return new double[maxIterations][maxIterations-1];
}
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
if(maxIterations<getDomain(an,getNumberOfSuccesses(),getSampleSize())[0]){
ret=1.0;
}else if(x>domain[1]){
ret=0.0;
}else {
ret=innerCumulativeProbability(domain[1],x,-1,an,getNumberOfSuccesses(),getSampleSize());
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
if(maxIterations<getDomain(an,getNumberOfSuccesses(),getSampleSize())[0]){
ret=0.0;
}else if(x>=domain[1]){
ret=1.0;
}else {
ret=innerCumulativeProbability(domain[0],x,1,an,getNumberOfSuccesses(),getSampleSize());
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.abs(a)||Double.ulp(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return -x*Math.log(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return mean;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return n*sum;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return halfStep;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
hK[k+1]-=a;
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
Arrays.fill(lanczos,maxIterations+1,maxIterations,0);
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
gamma*=an/2;
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
hK[k+1]-=a;
Arrays.fill(lanczos,maxIterations+1,maxIterations,0);
gamma*=an/2;

ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return Math.pow(getMean(),x)/MathUtils.factorialDouble(x)*Math.exp(-ret);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
if(sum<0.5){
ret=getMedian()-getScale();
}else if(p>0.5){
ret=getMedian()+getScale();
}else {
ret=getMedian();
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
if(sum<0.5){
ret=getMean()-getStandardDeviation();
}else if(p>0.5){
ret=getMean()+getStandardDeviation();
}else {
ret=getMean();
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sum==Integer.MIN_VALUE){
throw new ArithmeticException("overflow: lcm is 2^31");
}
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
if(epsilon<0.5){
ret=getAlpha()*getBeta();
}else error
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
if(sum<0){
ret=0.0;
}else {
ret=MathUtils.binomialCoefficientDouble(x+getNumberOfSuccesses()-1,getNumberOfSuccesses()-1)*Math.pow(getProbabilityOfSuccess(),getNumberOfSuccesses());
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return Math.pow(x/getBeta(),getAlpha()-1)/getBeta()*Math.exp(-x/getBeta())/Math.exp(Gamma.logGamma(getAlpha()));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
if(maxIterations<0){
throw MathRuntimeException.createIllegalArgumentException("must have n >= 0 for n!, got n = {0}",n);
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
if(maxIterations<21){
return factorial(n);
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON){
sum=(a-DEFAULT_EPSILON)*(DEFAULT_EPSILON-epsilon);
n=(x-DEFAULT_EPSILON)*(fx-DEFAULT_EPSILON);
an=(x-v)*q-(x-w)*r;
q=2*(q-r);
if(q>0){
p=-p;
}else {
q=-q;
}
r=e;
e=DEFAULT_EPSILON;
}
if(Double.abs(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
x=a+((Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON)?d:((d>0)?tol:-tol));
if(Double.abs(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON){
sum=(a-DEFAULT_EPSILON)*(DEFAULT_EPSILON-epsilon);
n=(x-DEFAULT_EPSILON)*(fx-DEFAULT_EPSILON);
an=(x-v)*q-(x-w)*r;
q=2*(q-r);
if(q>0){
p=-p;
}else {
q=-q;
}
r=e;
e=DEFAULT_EPSILON;
}
x=a+((Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON)?d:((d>0)?tol:-tol));
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON){
sum=(a-DEFAULT_EPSILON)*(DEFAULT_EPSILON-epsilon);
n=(x-DEFAULT_EPSILON)*(fx-DEFAULT_EPSILON);
an=(x-v)*q-(x-w)*r;
q=2*(q-r);
if(q>0){
p=-p;
}else {
q=-q;
}
r=e;
e=DEFAULT_EPSILON;
}
x=a+((Math.abs(DEFAULT_EPSILON)>DEFAULT_EPSILON)?d:((d>0)?tol:-tol));
if(Double.abs(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return Math.exp(-sum*x0/(2*getStandardDeviation()))/(getStandardDeviation()*SQRT2PI);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return SQRT2PI;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
return Math.exp(-x/getMean())/getMean();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(a)||Double.isNaN(x)){
ret=Double.NaN;
}else if(x==0.0){
ret=0.0;
}else if(a>=1.0&&x>a){
ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
}else {
double n=0.0;
double an=1.0/a;
double sum=an;
while(Math.abs(an)>epsilon&&n<maxIterations){
n=n+1.0;
an=an*(x/(a+n));
sum=sum+an;
}
if(n>=maxIterations){
throw new MaxIterationsExceededException(maxIterations);
}else {
ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
}
}
if(x==Integer.MAX_VALUE){
return 1;
}
return ret;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils,199
========
if(initial*initial>=0.0){
throw new ConvergenceException("number of iterations={0}, maximum iterations={1}, "+"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, ",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(initial*fb>=0.0){
throw new ConvergenceException("number of iterations={0}, maximum iterations={1}, "+"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, ",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lowerBound*fb>=0.0){
throw new ConvergenceException("number of iterations={0}, maximum iterations={1}, "+"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, ",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
  - org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fa*initial>=0.0){
throw new ConvergenceException("number of iterations={0}, maximum iterations={1}, "+"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, ",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 0
TESTING : math_85
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.apache.commons.math.stat.regression.SimpleRegressionTest::testRemoveMultiple
  - org.apache.commons.math.stat.regression.SimpleRegressionTest::testInference
  - org.apache.commons.math.stat.regression.SimpleRegressionTest::testRemoveXY
  - org.apache.commons.math.stat.regression.SimpleRegressionTest::testRemoveSingle
  - org.apache.commons.math.distribution.TDistributionTest::testInverseCumulativeProbabilities
  - org.apache.commons.math.distribution.TDistributionTest::testSmallDf
  - org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest::testBracketSin
Failing tests: 7
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fa*upperBound>=0.0){
throw new ConvergenceException("number of iterations={0}, maximum iterations={1}, "+"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, ",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COUNT THESE===> Subject [_name=math, _id=85, _ssrc=/src/java, _tsrc=/src/test, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.distribution.NormalDistributionTest testMath280
TESTING : org.apache.commons.math.distribution.NormalDistributionTest::testMath280
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.distribution.NormalDistributionTest::testMath280
Failing tests: 0
TESTING : math_85
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_4/math/math_85_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
Failing tests: 0
Successfully repair!
